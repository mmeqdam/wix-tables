"use strict";
(self.webpackChunkwix_tables = self.webpackChunkwix_tables || []).push([
  [179],
  {
    118: () => {
      function Ve(t) {
        return "function" == typeof t;
      }
      function ds(t) {
        const e = t((i) => {
          Error.call(i), (i.stack = new Error().stack);
        });
        return (
          (e.prototype = Object.create(Error.prototype)),
          (e.prototype.constructor = e),
          e
        );
      }
      const el = ds(
        (t) =>
          function (e) {
            t(this),
              (this.message = e
                ? `${e.length} errors occurred during unsubscription:\n${e
                    .map((i, o) => `${o + 1}) ${i.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = e);
          }
      );
      function ps(t, n) {
        if (t) {
          const e = t.indexOf(n);
          0 <= e && t.splice(e, 1);
        }
      }
      class cn {
        constructor(n) {
          (this.initialTeardown = n),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let n;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: e } = this;
            if (e)
              if (((this._parentage = null), Array.isArray(e)))
                for (const r of e) r.remove(this);
              else e.remove(this);
            const { initialTeardown: i } = this;
            if (Ve(i))
              try {
                i();
              } catch (r) {
                n = r instanceof el ? r.errors : [r];
              }
            const { _finalizers: o } = this;
            if (o) {
              this._finalizers = null;
              for (const r of o)
                try {
                  vm(r);
                } catch (s) {
                  (n = n ?? []),
                    s instanceof el ? (n = [...n, ...s.errors]) : n.push(s);
                }
            }
            if (n) throw new el(n);
          }
        }
        add(n) {
          var e;
          if (n && n !== this)
            if (this.closed) vm(n);
            else {
              if (n instanceof cn) {
                if (n.closed || n._hasParent(this)) return;
                n._addParent(this);
              }
              (this._finalizers =
                null !== (e = this._finalizers) && void 0 !== e ? e : []).push(
                n
              );
            }
        }
        _hasParent(n) {
          const { _parentage: e } = this;
          return e === n || (Array.isArray(e) && e.includes(n));
        }
        _addParent(n) {
          const { _parentage: e } = this;
          this._parentage = Array.isArray(e) ? (e.push(n), e) : e ? [e, n] : n;
        }
        _removeParent(n) {
          const { _parentage: e } = this;
          e === n ? (this._parentage = null) : Array.isArray(e) && ps(e, n);
        }
        remove(n) {
          const { _finalizers: e } = this;
          e && ps(e, n), n instanceof cn && n._removeParent(this);
        }
      }
      cn.EMPTY = (() => {
        const t = new cn();
        return (t.closed = !0), t;
      })();
      const _m = cn.EMPTY;
      function ym(t) {
        return (
          t instanceof cn ||
          (t && "closed" in t && Ve(t.remove) && Ve(t.add) && Ve(t.unsubscribe))
        );
      }
      function vm(t) {
        Ve(t) ? t() : t.unsubscribe();
      }
      const fo = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        tl = {
          setTimeout(t, n, ...e) {
            const { delegate: i } = tl;
            return i?.setTimeout
              ? i.setTimeout(t, n, ...e)
              : setTimeout(t, n, ...e);
          },
          clearTimeout(t) {
            const { delegate: n } = tl;
            return (n?.clearTimeout || clearTimeout)(t);
          },
          delegate: void 0,
        };
      function bm(t) {
        tl.setTimeout(() => {
          const { onUnhandledError: n } = fo;
          if (!n) throw t;
          n(t);
        });
      }
      function id() {}
      const OD = od("C", void 0, void 0);
      function od(t, n, e) {
        return { kind: t, value: n, error: e };
      }
      let go = null;
      function nl(t) {
        if (fo.useDeprecatedSynchronousErrorHandling) {
          const n = !go;
          if ((n && (go = { errorThrown: !1, error: null }), t(), n)) {
            const { errorThrown: e, error: i } = go;
            if (((go = null), e)) throw i;
          }
        } else t();
      }
      class rd extends cn {
        constructor(n) {
          super(),
            (this.isStopped = !1),
            n
              ? ((this.destination = n), ym(n) && n.add(this))
              : (this.destination = ND);
        }
        static create(n, e, i) {
          return new hs(n, e, i);
        }
        next(n) {
          this.isStopped
            ? ad(
                (function kD(t) {
                  return od("N", t, void 0);
                })(n),
                this
              )
            : this._next(n);
        }
        error(n) {
          this.isStopped
            ? ad(
                (function AD(t) {
                  return od("E", void 0, t);
                })(n),
                this
              )
            : ((this.isStopped = !0), this._error(n));
        }
        complete() {
          this.isStopped
            ? ad(OD, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(n) {
          this.destination.next(n);
        }
        _error(n) {
          try {
            this.destination.error(n);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const FD = Function.prototype.bind;
      function sd(t, n) {
        return FD.call(t, n);
      }
      class LD {
        constructor(n) {
          this.partialObserver = n;
        }
        next(n) {
          const { partialObserver: e } = this;
          if (e.next)
            try {
              e.next(n);
            } catch (i) {
              il(i);
            }
        }
        error(n) {
          const { partialObserver: e } = this;
          if (e.error)
            try {
              e.error(n);
            } catch (i) {
              il(i);
            }
          else il(n);
        }
        complete() {
          const { partialObserver: n } = this;
          if (n.complete)
            try {
              n.complete();
            } catch (e) {
              il(e);
            }
        }
      }
      class hs extends rd {
        constructor(n, e, i) {
          let o;
          if ((super(), Ve(n) || !n))
            o = {
              next: n ?? void 0,
              error: e ?? void 0,
              complete: i ?? void 0,
            };
          else {
            let r;
            this && fo.useDeprecatedNextContext
              ? ((r = Object.create(n)),
                (r.unsubscribe = () => this.unsubscribe()),
                (o = {
                  next: n.next && sd(n.next, r),
                  error: n.error && sd(n.error, r),
                  complete: n.complete && sd(n.complete, r),
                }))
              : (o = n);
          }
          this.destination = new LD(o);
        }
      }
      function il(t) {
        fo.useDeprecatedSynchronousErrorHandling
          ? (function RD(t) {
              fo.useDeprecatedSynchronousErrorHandling &&
                go &&
                ((go.errorThrown = !0), (go.error = t));
            })(t)
          : bm(t);
      }
      function ad(t, n) {
        const { onStoppedNotification: e } = fo;
        e && tl.setTimeout(() => e(t, n));
      }
      const ND = {
          closed: !0,
          next: id,
          error: function PD(t) {
            throw t;
          },
          complete: id,
        },
        ld =
          ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function Vi(t) {
        return t;
      }
      function Cm(t) {
        return 0 === t.length
          ? Vi
          : 1 === t.length
          ? t[0]
          : function (e) {
              return t.reduce((i, o) => o(i), e);
            };
      }
      let nt = (() => {
        class t {
          constructor(e) {
            e && (this._subscribe = e);
          }
          lift(e) {
            const i = new t();
            return (i.source = this), (i.operator = e), i;
          }
          subscribe(e, i, o) {
            const r = (function HD(t) {
              return (
                (t && t instanceof rd) ||
                ((function BD(t) {
                  return t && Ve(t.next) && Ve(t.error) && Ve(t.complete);
                })(t) &&
                  ym(t))
              );
            })(e)
              ? e
              : new hs(e, i, o);
            return (
              nl(() => {
                const { operator: s, source: a } = this;
                r.add(
                  s
                    ? s.call(r, a)
                    : a
                    ? this._subscribe(r)
                    : this._trySubscribe(r)
                );
              }),
              r
            );
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (i) {
              e.error(i);
            }
          }
          forEach(e, i) {
            return new (i = wm(i))((o, r) => {
              const s = new hs({
                next: (a) => {
                  try {
                    e(a);
                  } catch (l) {
                    r(l), s.unsubscribe();
                  }
                },
                error: r,
                complete: o,
              });
              this.subscribe(s);
            });
          }
          _subscribe(e) {
            var i;
            return null === (i = this.source) || void 0 === i
              ? void 0
              : i.subscribe(e);
          }
          [ld]() {
            return this;
          }
          pipe(...e) {
            return Cm(e)(this);
          }
          toPromise(e) {
            return new (e = wm(e))((i, o) => {
              let r;
              this.subscribe(
                (s) => (r = s),
                (s) => o(s),
                () => i(r)
              );
            });
          }
        }
        return (t.create = (n) => new t(n)), t;
      })();
      function wm(t) {
        var n;
        return null !== (n = t ?? fo.Promise) && void 0 !== n ? n : Promise;
      }
      const zD = ds(
        (t) =>
          function () {
            t(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      let ct = (() => {
        class t extends nt {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(e) {
            const i = new Tm(this, this);
            return (i.operator = e), i;
          }
          _throwIfClosed() {
            if (this.closed) throw new zD();
          }
          next(e) {
            nl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const i of this.currentObservers) i.next(e);
              }
            });
          }
          error(e) {
            nl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = e);
                const { observers: i } = this;
                for (; i.length; ) i.shift().error(e);
              }
            });
          }
          complete() {
            nl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: e } = this;
                for (; e.length; ) e.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var e;
            return (
              (null === (e = this.observers) || void 0 === e
                ? void 0
                : e.length) > 0
            );
          }
          _trySubscribe(e) {
            return this._throwIfClosed(), super._trySubscribe(e);
          }
          _subscribe(e) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(e),
              this._innerSubscribe(e)
            );
          }
          _innerSubscribe(e) {
            const { hasError: i, isStopped: o, observers: r } = this;
            return i || o
              ? _m
              : ((this.currentObservers = null),
                r.push(e),
                new cn(() => {
                  (this.currentObservers = null), ps(r, e);
                }));
          }
          _checkFinalizedStatuses(e) {
            const { hasError: i, thrownError: o, isStopped: r } = this;
            i ? e.error(o) : r && e.complete();
          }
          asObservable() {
            const e = new nt();
            return (e.source = this), e;
          }
        }
        return (t.create = (n, e) => new Tm(n, e)), t;
      })();
      class Tm extends ct {
        constructor(n, e) {
          super(), (this.destination = n), (this.source = e);
        }
        next(n) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.next) ||
            void 0 === i ||
            i.call(e, n);
        }
        error(n) {
          var e, i;
          null ===
            (i =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.error) ||
            void 0 === i ||
            i.call(e, n);
        }
        complete() {
          var n, e;
          null ===
            (e =
              null === (n = this.destination) || void 0 === n
                ? void 0
                : n.complete) ||
            void 0 === e ||
            e.call(n);
        }
        _subscribe(n) {
          var e, i;
          return null !==
            (i =
              null === (e = this.source) || void 0 === e
                ? void 0
                : e.subscribe(n)) && void 0 !== i
            ? i
            : _m;
        }
      }
      function Sm(t) {
        return Ve(t?.lift);
      }
      function ft(t) {
        return (n) => {
          if (Sm(n))
            return n.lift(function (e) {
              try {
                return t(e, this);
              } catch (i) {
                this.error(i);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      function ut(t, n, e, i, o) {
        return new $D(t, n, e, i, o);
      }
      class $D extends rd {
        constructor(n, e, i, o, r, s) {
          super(n),
            (this.onFinalize = r),
            (this.shouldUnsubscribe = s),
            (this._next = e
              ? function (a) {
                  try {
                    e(a);
                  } catch (l) {
                    n.error(l);
                  }
                }
              : super._next),
            (this._error = o
              ? function (a) {
                  try {
                    o(a);
                  } catch (l) {
                    n.error(l);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = i
              ? function () {
                  try {
                    i();
                  } catch (a) {
                    n.error(a);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var n;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: e } = this;
            super.unsubscribe(),
              !e &&
                (null === (n = this.onFinalize) ||
                  void 0 === n ||
                  n.call(this));
          }
        }
      }
      function Ie(t, n) {
        return ft((e, i) => {
          let o = 0;
          e.subscribe(
            ut(i, (r) => {
              i.next(t.call(n, r, o++));
            })
          );
        });
      }
      function Bi(t) {
        return this instanceof Bi ? ((this.v = t), this) : new Bi(t);
      }
      function xm(t) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var e,
          n = t[Symbol.asyncIterator];
        return n
          ? n.call(t)
          : ((t = (function pd(t) {
              var n = "function" == typeof Symbol && Symbol.iterator,
                e = n && t[n],
                i = 0;
              if (e) return e.call(t);
              if (t && "number" == typeof t.length)
                return {
                  next: function () {
                    return (
                      t && i >= t.length && (t = void 0),
                      { value: t && t[i++], done: !t }
                    );
                  },
                };
              throw new TypeError(
                n
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(t)),
            (e = {}),
            i("next"),
            i("throw"),
            i("return"),
            (e[Symbol.asyncIterator] = function () {
              return this;
            }),
            e);
        function i(r) {
          e[r] =
            t[r] &&
            function (s) {
              return new Promise(function (a, l) {
                !(function o(r, s, a, l) {
                  Promise.resolve(l).then(function (c) {
                    r({ value: c, done: a });
                  }, s);
                })(a, l, (s = t[r](s)).done, s.value);
              });
            };
        }
      }
      "function" == typeof SuppressedError && SuppressedError;
      const Mm = (t) =>
        t && "number" == typeof t.length && "function" != typeof t;
      function Om(t) {
        return Ve(t?.then);
      }
      function Am(t) {
        return Ve(t[ld]);
      }
      function km(t) {
        return Symbol.asyncIterator && Ve(t?.[Symbol.asyncIterator]);
      }
      function Rm(t) {
        return new TypeError(
          `You provided ${
            null !== t && "object" == typeof t ? "an invalid object" : `'${t}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const Fm = (function d2() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
      function Lm(t) {
        return Ve(t?.[Fm]);
      }
      function Pm(t) {
        return (function Em(t, n, e) {
          if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
          var o,
            i = e.apply(t, n || []),
            r = [];
          return (
            (o = {}),
            a("next"),
            a("throw"),
            a("return", function s(_) {
              return function (b) {
                return Promise.resolve(b).then(_, h);
              };
            }),
            (o[Symbol.asyncIterator] = function () {
              return this;
            }),
            o
          );
          function a(_, b) {
            i[_] &&
              ((o[_] = function (C) {
                return new Promise(function (I, M) {
                  r.push([_, C, I, M]) > 1 || l(_, C);
                });
              }),
              b && (o[_] = b(o[_])));
          }
          function l(_, b) {
            try {
              !(function c(_) {
                _.value instanceof Bi
                  ? Promise.resolve(_.value.v).then(u, h)
                  : m(r[0][2], _);
              })(i[_](b));
            } catch (C) {
              m(r[0][3], C);
            }
          }
          function u(_) {
            l("next", _);
          }
          function h(_) {
            l("throw", _);
          }
          function m(_, b) {
            _(b), r.shift(), r.length && l(r[0][0], r[0][1]);
          }
        })(this, arguments, function* () {
          const e = t.getReader();
          try {
            for (;;) {
              const { value: i, done: o } = yield Bi(e.read());
              if (o) return yield Bi(void 0);
              yield yield Bi(i);
            }
          } finally {
            e.releaseLock();
          }
        });
      }
      function Nm(t) {
        return Ve(t?.getReader);
      }
      function un(t) {
        if (t instanceof nt) return t;
        if (null != t) {
          if (Am(t))
            return (function p2(t) {
              return new nt((n) => {
                const e = t[ld]();
                if (Ve(e.subscribe)) return e.subscribe(n);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(t);
          if (Mm(t))
            return (function h2(t) {
              return new nt((n) => {
                for (let e = 0; e < t.length && !n.closed; e++) n.next(t[e]);
                n.complete();
              });
            })(t);
          if (Om(t))
            return (function f2(t) {
              return new nt((n) => {
                t.then(
                  (e) => {
                    n.closed || (n.next(e), n.complete());
                  },
                  (e) => n.error(e)
                ).then(null, bm);
              });
            })(t);
          if (km(t)) return Vm(t);
          if (Lm(t))
            return (function g2(t) {
              return new nt((n) => {
                for (const e of t) if ((n.next(e), n.closed)) return;
                n.complete();
              });
            })(t);
          if (Nm(t))
            return (function m2(t) {
              return Vm(Pm(t));
            })(t);
        }
        throw Rm(t);
      }
      function Vm(t) {
        return new nt((n) => {
          (function _2(t, n) {
            var e, i, o, r;
            return (function Im(t, n, e, i) {
              return new (e || (e = Promise))(function (r, s) {
                function a(u) {
                  try {
                    c(i.next(u));
                  } catch (h) {
                    s(h);
                  }
                }
                function l(u) {
                  try {
                    c(i.throw(u));
                  } catch (h) {
                    s(h);
                  }
                }
                function c(u) {
                  u.done
                    ? r(u.value)
                    : (function o(r) {
                        return r instanceof e
                          ? r
                          : new e(function (s) {
                              s(r);
                            });
                      })(u.value).then(a, l);
                }
                c((i = i.apply(t, n || [])).next());
              });
            })(this, void 0, void 0, function* () {
              try {
                for (e = xm(t); !(i = yield e.next()).done; )
                  if ((n.next(i.value), n.closed)) return;
              } catch (s) {
                o = { error: s };
              } finally {
                try {
                  i && !i.done && (r = e.return) && (yield r.call(e));
                } finally {
                  if (o) throw o.error;
                }
              }
              n.complete();
            });
          })(t, n).catch((e) => n.error(e));
        });
      }
      function fi(t, n, e, i = 0, o = !1) {
        const r = n.schedule(function () {
          e(), o ? t.add(this.schedule(null, i)) : this.unsubscribe();
        }, i);
        if ((t.add(r), !o)) return r;
      }
      function Et(t, n, e = 1 / 0) {
        return Ve(n)
          ? Et((i, o) => Ie((r, s) => n(i, r, o, s))(un(t(i, o))), e)
          : ("number" == typeof n && (e = n),
            ft((i, o) =>
              (function y2(t, n, e, i, o, r, s, a) {
                const l = [];
                let c = 0,
                  u = 0,
                  h = !1;
                const m = () => {
                    h && !l.length && !c && n.complete();
                  },
                  _ = (C) => (c < i ? b(C) : l.push(C)),
                  b = (C) => {
                    r && n.next(C), c++;
                    let I = !1;
                    un(e(C, u++)).subscribe(
                      ut(
                        n,
                        (M) => {
                          o?.(M), r ? _(M) : n.next(M);
                        },
                        () => {
                          I = !0;
                        },
                        void 0,
                        () => {
                          if (I)
                            try {
                              for (c--; l.length && c < i; ) {
                                const M = l.shift();
                                s ? fi(n, s, () => b(M)) : b(M);
                              }
                              m();
                            } catch (M) {
                              n.error(M);
                            }
                        }
                      )
                    );
                  };
                return (
                  t.subscribe(
                    ut(n, _, () => {
                      (h = !0), m();
                    })
                  ),
                  () => {
                    a?.();
                  }
                );
              })(i, o, t, e)
            ));
      }
      function jo(t = 1 / 0) {
        return Et(Vi, t);
      }
      const Qn = new nt((t) => t.complete());
      function hd(t) {
        return t[t.length - 1];
      }
      function Bm(t) {
        return Ve(hd(t)) ? t.pop() : void 0;
      }
      function fs(t) {
        return (function b2(t) {
          return t && Ve(t.schedule);
        })(hd(t))
          ? t.pop()
          : void 0;
      }
      function Hm(t, n = 0) {
        return ft((e, i) => {
          e.subscribe(
            ut(
              i,
              (o) => fi(i, t, () => i.next(o), n),
              () => fi(i, t, () => i.complete(), n),
              (o) => fi(i, t, () => i.error(o), n)
            )
          );
        });
      }
      function zm(t, n = 0) {
        return ft((e, i) => {
          i.add(t.schedule(() => e.subscribe(i), n));
        });
      }
      function $m(t, n) {
        if (!t) throw new Error("Iterable cannot be null");
        return new nt((e) => {
          fi(e, n, () => {
            const i = t[Symbol.asyncIterator]();
            fi(
              e,
              n,
              () => {
                i.next().then((o) => {
                  o.done ? e.complete() : e.next(o.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function gt(t, n) {
        return n
          ? (function E2(t, n) {
              if (null != t) {
                if (Am(t))
                  return (function w2(t, n) {
                    return un(t).pipe(zm(n), Hm(n));
                  })(t, n);
                if (Mm(t))
                  return (function S2(t, n) {
                    return new nt((e) => {
                      let i = 0;
                      return n.schedule(function () {
                        i === t.length
                          ? e.complete()
                          : (e.next(t[i++]), e.closed || this.schedule());
                      });
                    });
                  })(t, n);
                if (Om(t))
                  return (function T2(t, n) {
                    return un(t).pipe(zm(n), Hm(n));
                  })(t, n);
                if (km(t)) return $m(t, n);
                if (Lm(t))
                  return (function I2(t, n) {
                    return new nt((e) => {
                      let i;
                      return (
                        fi(e, n, () => {
                          (i = t[Fm]()),
                            fi(
                              e,
                              n,
                              () => {
                                let o, r;
                                try {
                                  ({ value: o, done: r } = i.next());
                                } catch (s) {
                                  return void e.error(s);
                                }
                                r ? e.complete() : e.next(o);
                              },
                              0,
                              !0
                            );
                        }),
                        () => Ve(i?.return) && i.return()
                      );
                    });
                  })(t, n);
                if (Nm(t))
                  return (function D2(t, n) {
                    return $m(Pm(t), n);
                  })(t, n);
              }
              throw Rm(t);
            })(t, n)
          : un(t);
      }
      function jm(...t) {
        const n = fs(t),
          e = (function C2(t, n) {
            return "number" == typeof hd(t) ? t.pop() : n;
          })(t, 1 / 0),
          i = t;
        return i.length ? (1 === i.length ? un(i[0]) : jo(e)(gt(i, n))) : Qn;
      }
      class wn extends ct {
        constructor(n) {
          super(), (this._value = n);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(n) {
          const e = super._subscribe(n);
          return !e.closed && n.next(this._value), e;
        }
        getValue() {
          const { hasError: n, thrownError: e, _value: i } = this;
          if (n) throw e;
          return this._throwIfClosed(), i;
        }
        next(n) {
          super.next((this._value = n));
        }
      }
      function oe(...t) {
        return gt(t, fs(t));
      }
      function Um(t = {}) {
        const {
          connector: n = () => new ct(),
          resetOnError: e = !0,
          resetOnComplete: i = !0,
          resetOnRefCountZero: o = !0,
        } = t;
        return (r) => {
          let s,
            a,
            l,
            c = 0,
            u = !1,
            h = !1;
          const m = () => {
              a?.unsubscribe(), (a = void 0);
            },
            _ = () => {
              m(), (s = l = void 0), (u = h = !1);
            },
            b = () => {
              const C = s;
              _(), C?.unsubscribe();
            };
          return ft((C, I) => {
            c++, !h && !u && m();
            const M = (l = l ?? n());
            I.add(() => {
              c--, 0 === c && !h && !u && (a = fd(b, o));
            }),
              M.subscribe(I),
              !s &&
                c > 0 &&
                ((s = new hs({
                  next: (E) => M.next(E),
                  error: (E) => {
                    (h = !0), m(), (a = fd(_, e, E)), M.error(E);
                  },
                  complete: () => {
                    (u = !0), m(), (a = fd(_, i)), M.complete();
                  },
                })),
                un(C).subscribe(s));
          })(r);
        };
      }
      function fd(t, n, ...e) {
        if (!0 === n) return void t();
        if (!1 === n) return;
        const i = new hs({
          next: () => {
            i.unsubscribe(), t();
          },
        });
        return un(n(...e)).subscribe(i);
      }
      function Tn(t, n) {
        return ft((e, i) => {
          let o = null,
            r = 0,
            s = !1;
          const a = () => s && !o && i.complete();
          e.subscribe(
            ut(
              i,
              (l) => {
                o?.unsubscribe();
                let c = 0;
                const u = r++;
                un(t(l, u)).subscribe(
                  (o = ut(
                    i,
                    (h) => i.next(n ? n(l, h, u, c++) : h),
                    () => {
                      (o = null), a();
                    }
                  ))
                );
              },
              () => {
                (s = !0), a();
              }
            )
          );
        });
      }
      function M2(t, n) {
        return t === n;
      }
      function Pe(t) {
        for (let n in t) if (t[n] === Pe) return n;
        throw Error("Could not find renamed property on target object.");
      }
      function ol(t, n) {
        for (const e in n)
          n.hasOwnProperty(e) && !t.hasOwnProperty(e) && (t[e] = n[e]);
      }
      function mt(t) {
        if ("string" == typeof t) return t;
        if (Array.isArray(t)) return "[" + t.map(mt).join(", ") + "]";
        if (null == t) return "" + t;
        if (t.overriddenName) return `${t.overriddenName}`;
        if (t.name) return `${t.name}`;
        const n = t.toString();
        if (null == n) return "" + n;
        const e = n.indexOf("\n");
        return -1 === e ? n : n.substring(0, e);
      }
      function gd(t, n) {
        return null == t || "" === t
          ? null === n
            ? ""
            : n
          : null == n || "" === n
          ? t
          : t + " " + n;
      }
      const O2 = Pe({ __forward_ref__: Pe });
      function Te(t) {
        return (
          (t.__forward_ref__ = Te),
          (t.toString = function () {
            return mt(this());
          }),
          t
        );
      }
      function ae(t) {
        return md(t) ? t() : t;
      }
      function md(t) {
        return (
          "function" == typeof t &&
          t.hasOwnProperty(O2) &&
          t.__forward_ref__ === Te
        );
      }
      function _d(t) {
        return t && !!t.ɵproviders;
      }
      class O extends Error {
        constructor(n, e) {
          super(
            (function rl(t, n) {
              return `NG0${Math.abs(t)}${n ? ": " + n : ""}`;
            })(n, e)
          ),
            (this.code = n);
        }
      }
      function ce(t) {
        return "string" == typeof t ? t : null == t ? "" : String(t);
      }
      function yd(t, n) {
        throw new O(-201, !1);
      }
      function Sn(t, n) {
        null == t &&
          (function re(t, n, e, i) {
            throw new Error(
              `ASSERTION ERROR: ${t}` +
                (null == i ? "" : ` [Expected=> ${e} ${i} ${n} <=Actual]`)
            );
          })(n, t, null, "!=");
      }
      function K(t) {
        return {
          token: t.token,
          providedIn: t.providedIn || null,
          factory: t.factory,
          value: void 0,
        };
      }
      function xe(t) {
        return { providers: t.providers || [], imports: t.imports || [] };
      }
      function sl(t) {
        return Wm(t, ll) || Wm(t, Km);
      }
      function Wm(t, n) {
        return t.hasOwnProperty(n) ? t[n] : null;
      }
      function al(t) {
        return t && (t.hasOwnProperty(vd) || t.hasOwnProperty(V2))
          ? t[vd]
          : null;
      }
      const ll = Pe({ ɵprov: Pe }),
        vd = Pe({ ɵinj: Pe }),
        Km = Pe({ ngInjectableDef: Pe }),
        V2 = Pe({ ngInjectorDef: Pe });
      var ye = (function (t) {
        return (
          (t[(t.Default = 0)] = "Default"),
          (t[(t.Host = 1)] = "Host"),
          (t[(t.Self = 2)] = "Self"),
          (t[(t.SkipSelf = 4)] = "SkipSelf"),
          (t[(t.Optional = 8)] = "Optional"),
          t
        );
      })(ye || {});
      let bd;
      function qm() {
        return bd;
      }
      function tn(t) {
        const n = bd;
        return (bd = t), n;
      }
      function Zm(t, n, e) {
        const i = sl(t);
        return i && "root" == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : e & ye.Optional
          ? null
          : void 0 !== n
          ? n
          : void yd(mt(t));
      }
      const $e = globalThis;
      class G {
        constructor(n, e) {
          (this._desc = n),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = K({
                  token: this,
                  providedIn: e.providedIn || "root",
                  factory: e.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const gs = {},
        Id = "__NG_DI_FLAG__",
        cl = "ngTempTokenPath",
        z2 = /\n/gm,
        Qm = "__source";
      let Uo;
      function Hi(t) {
        const n = Uo;
        return (Uo = t), n;
      }
      function U2(t, n = ye.Default) {
        if (void 0 === Uo) throw new O(-203, !1);
        return null === Uo
          ? Zm(t, void 0, n)
          : Uo.get(t, n & ye.Optional ? null : void 0, n);
      }
      function W(t, n = ye.Default) {
        return (qm() || U2)(ae(t), n);
      }
      function U(t, n = ye.Default) {
        return W(t, ul(n));
      }
      function ul(t) {
        return typeof t > "u" || "number" == typeof t
          ? t
          : 0 |
              (t.optional && 8) |
              (t.host && 1) |
              (t.self && 2) |
              (t.skipSelf && 4);
      }
      function Dd(t) {
        const n = [];
        for (let e = 0; e < t.length; e++) {
          const i = ae(t[e]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new O(900, !1);
            let o,
              r = ye.Default;
            for (let s = 0; s < i.length; s++) {
              const a = i[s],
                l = G2(a);
              "number" == typeof l
                ? -1 === l
                  ? (o = a.token)
                  : (r |= l)
                : (o = a);
            }
            n.push(W(o, r));
          } else n.push(W(i));
        }
        return n;
      }
      function ms(t, n) {
        return (t[Id] = n), (t.prototype[Id] = n), t;
      }
      function G2(t) {
        return t[Id];
      }
      function gi(t) {
        return { toString: t }.toString();
      }
      var dl = (function (t) {
          return (
            (t[(t.OnPush = 0)] = "OnPush"), (t[(t.Default = 1)] = "Default"), t
          );
        })(dl || {}),
        In = (function (t) {
          return (
            (t[(t.Emulated = 0)] = "Emulated"),
            (t[(t.None = 2)] = "None"),
            (t[(t.ShadowDom = 3)] = "ShadowDom"),
            t
          );
        })(In || {});
      const Jn = {},
        De = [],
        pl = Pe({ ɵcmp: Pe }),
        Ed = Pe({ ɵdir: Pe }),
        xd = Pe({ ɵpipe: Pe }),
        Xm = Pe({ ɵmod: Pe }),
        mi = Pe({ ɵfac: Pe }),
        _s = Pe({ __NG_ELEMENT_ID__: Pe }),
        e_ = Pe({ __NG_ENV_ID__: Pe });
      function t_(t, n, e) {
        let i = t.length;
        for (;;) {
          const o = t.indexOf(n, e);
          if (-1 === o) return o;
          if (0 === o || t.charCodeAt(o - 1) <= 32) {
            const r = n.length;
            if (o + r === i || t.charCodeAt(o + r) <= 32) return o;
          }
          e = o + 1;
        }
      }
      function Md(t, n, e) {
        let i = 0;
        for (; i < e.length; ) {
          const o = e[i];
          if ("number" == typeof o) {
            if (0 !== o) break;
            i++;
            const r = e[i++],
              s = e[i++],
              a = e[i++];
            t.setAttribute(n, s, a, r);
          } else {
            const r = o,
              s = e[++i];
            i_(r) ? t.setProperty(n, r, s) : t.setAttribute(n, r, s), i++;
          }
        }
        return i;
      }
      function n_(t) {
        return 3 === t || 4 === t || 6 === t;
      }
      function i_(t) {
        return 64 === t.charCodeAt(0);
      }
      function ys(t, n) {
        if (null !== n && 0 !== n.length)
          if (null === t || 0 === t.length) t = n.slice();
          else {
            let e = -1;
            for (let i = 0; i < n.length; i++) {
              const o = n[i];
              "number" == typeof o
                ? (e = o)
                : 0 === e ||
                  o_(t, e, o, null, -1 === e || 2 === e ? n[++i] : null);
            }
          }
        return t;
      }
      function o_(t, n, e, i, o) {
        let r = 0,
          s = t.length;
        if (-1 === n) s = -1;
        else
          for (; r < t.length; ) {
            const a = t[r++];
            if ("number" == typeof a) {
              if (a === n) {
                s = -1;
                break;
              }
              if (a > n) {
                s = r - 1;
                break;
              }
            }
          }
        for (; r < t.length; ) {
          const a = t[r];
          if ("number" == typeof a) break;
          if (a === e) {
            if (null === i) return void (null !== o && (t[r + 1] = o));
            if (i === t[r + 1]) return void (t[r + 2] = o);
          }
          r++, null !== i && r++, null !== o && r++;
        }
        -1 !== s && (t.splice(s, 0, n), (r = s + 1)),
          t.splice(r++, 0, e),
          null !== i && t.splice(r++, 0, i),
          null !== o && t.splice(r++, 0, o);
      }
      const r_ = "ng-template";
      function q2(t, n, e) {
        let i = 0,
          o = !0;
        for (; i < t.length; ) {
          let r = t[i++];
          if ("string" == typeof r && o) {
            const s = t[i++];
            if (e && "class" === r && -1 !== t_(s.toLowerCase(), n, 0))
              return !0;
          } else {
            if (1 === r) {
              for (; i < t.length && "string" == typeof (r = t[i++]); )
                if (r.toLowerCase() === n) return !0;
              return !1;
            }
            "number" == typeof r && (o = !1);
          }
        }
        return !1;
      }
      function s_(t) {
        return 4 === t.type && t.value !== r_;
      }
      function Z2(t, n, e) {
        return n === (4 !== t.type || e ? t.value : r_);
      }
      function Y2(t, n, e) {
        let i = 4;
        const o = t.attrs || [],
          r = (function X2(t) {
            for (let n = 0; n < t.length; n++) if (n_(t[n])) return n;
            return t.length;
          })(o);
        let s = !1;
        for (let a = 0; a < n.length; a++) {
          const l = n[a];
          if ("number" != typeof l) {
            if (!s)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== l && !Z2(t, l, e)) || ("" === l && 1 === n.length))
                ) {
                  if (Hn(i)) return !1;
                  s = !0;
                }
              } else {
                const c = 8 & i ? l : n[++a];
                if (8 & i && null !== t.attrs) {
                  if (!q2(t.attrs, c, e)) {
                    if (Hn(i)) return !1;
                    s = !0;
                  }
                  continue;
                }
                const h = Q2(8 & i ? "class" : l, o, s_(t), e);
                if (-1 === h) {
                  if (Hn(i)) return !1;
                  s = !0;
                  continue;
                }
                if ("" !== c) {
                  let m;
                  m = h > r ? "" : o[h + 1].toLowerCase();
                  const _ = 8 & i ? m : null;
                  if ((_ && -1 !== t_(_, c, 0)) || (2 & i && c !== m)) {
                    if (Hn(i)) return !1;
                    s = !0;
                  }
                }
              }
          } else {
            if (!s && !Hn(i) && !Hn(l)) return !1;
            if (s && Hn(l)) continue;
            (s = !1), (i = l | (1 & i));
          }
        }
        return Hn(i) || s;
      }
      function Hn(t) {
        return 0 == (1 & t);
      }
      function Q2(t, n, e, i) {
        if (null === n) return -1;
        let o = 0;
        if (i || !e) {
          let r = !1;
          for (; o < n.length; ) {
            const s = n[o];
            if (s === t) return o;
            if (3 === s || 6 === s) r = !0;
            else {
              if (1 === s || 2 === s) {
                let a = n[++o];
                for (; "string" == typeof a; ) a = n[++o];
                continue;
              }
              if (4 === s) break;
              if (0 === s) {
                o += 4;
                continue;
              }
            }
            o += r ? 1 : 2;
          }
          return -1;
        }
        return (function eE(t, n) {
          let e = t.indexOf(4);
          if (e > -1)
            for (e++; e < t.length; ) {
              const i = t[e];
              if ("number" == typeof i) return -1;
              if (i === n) return e;
              e++;
            }
          return -1;
        })(n, t);
      }
      function a_(t, n, e = !1) {
        for (let i = 0; i < n.length; i++) if (Y2(t, n[i], e)) return !0;
        return !1;
      }
      function tE(t, n) {
        e: for (let e = 0; e < n.length; e++) {
          const i = n[e];
          if (t.length === i.length) {
            for (let o = 0; o < t.length; o++) if (t[o] !== i[o]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function l_(t, n) {
        return t ? ":not(" + n.trim() + ")" : n;
      }
      function nE(t) {
        let n = t[0],
          e = 1,
          i = 2,
          o = "",
          r = !1;
        for (; e < t.length; ) {
          let s = t[e];
          if ("string" == typeof s)
            if (2 & i) {
              const a = t[++e];
              o += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & i ? (o += "." + s) : 4 & i && (o += " " + s);
          else
            "" !== o && !Hn(s) && ((n += l_(r, o)), (o = "")),
              (i = s),
              (r = r || !Hn(i));
          e++;
        }
        return "" !== o && (n += l_(r, o)), n;
      }
      function le(t) {
        return gi(() => {
          const n = u_(t),
            e = {
              ...n,
              decls: t.decls,
              vars: t.vars,
              template: t.template,
              consts: t.consts || null,
              ngContentSelectors: t.ngContentSelectors,
              onPush: t.changeDetection === dl.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (n.standalone && t.dependencies) || null,
              getStandaloneInjector: null,
              signals: t.signals ?? !1,
              data: t.data || {},
              encapsulation: t.encapsulation || In.Emulated,
              styles: t.styles || De,
              _: null,
              schemas: t.schemas || null,
              tView: null,
              id: "",
            };
          d_(e);
          const i = t.dependencies;
          return (
            (e.directiveDefs = hl(i, !1)),
            (e.pipeDefs = hl(i, !0)),
            (e.id = (function uE(t) {
              let n = 0;
              const e = [
                t.selectors,
                t.ngContentSelectors,
                t.hostVars,
                t.hostAttrs,
                t.consts,
                t.vars,
                t.decls,
                t.encapsulation,
                t.standalone,
                t.signals,
                t.exportAs,
                JSON.stringify(t.inputs),
                JSON.stringify(t.outputs),
                Object.getOwnPropertyNames(t.type.prototype),
                !!t.contentQueries,
                !!t.viewQuery,
              ].join("|");
              for (const o of e) n = (Math.imul(31, n) + o.charCodeAt(0)) << 0;
              return (n += 2147483648), "c" + n;
            })(e)),
            e
          );
        });
      }
      function sE(t) {
        return be(t) || xt(t);
      }
      function aE(t) {
        return null !== t;
      }
      function Re(t) {
        return gi(() => ({
          type: t.type,
          bootstrap: t.bootstrap || De,
          declarations: t.declarations || De,
          imports: t.imports || De,
          exports: t.exports || De,
          transitiveCompileScopes: null,
          schemas: t.schemas || null,
          id: t.id || null,
        }));
      }
      function c_(t, n) {
        if (null == t) return Jn;
        const e = {};
        for (const i in t)
          if (t.hasOwnProperty(i)) {
            let o = t[i],
              r = o;
            Array.isArray(o) && ((r = o[1]), (o = o[0])),
              (e[o] = i),
              n && (n[o] = r);
          }
        return e;
      }
      function Y(t) {
        return gi(() => {
          const n = u_(t);
          return d_(n), n;
        });
      }
      function be(t) {
        return t[pl] || null;
      }
      function xt(t) {
        return t[Ed] || null;
      }
      function Ut(t) {
        return t[xd] || null;
      }
      function pn(t, n) {
        const e = t[Xm] || null;
        if (!e && !0 === n)
          throw new Error(`Type ${mt(t)} does not have '\u0275mod' property.`);
        return e;
      }
      function u_(t) {
        const n = {};
        return {
          type: t.type,
          providersResolver: null,
          factory: null,
          hostBindings: t.hostBindings || null,
          hostVars: t.hostVars || 0,
          hostAttrs: t.hostAttrs || null,
          contentQueries: t.contentQueries || null,
          declaredInputs: n,
          inputTransforms: null,
          inputConfig: t.inputs || Jn,
          exportAs: t.exportAs || null,
          standalone: !0 === t.standalone,
          signals: !0 === t.signals,
          selectors: t.selectors || De,
          viewQuery: t.viewQuery || null,
          features: t.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: c_(t.inputs, n),
          outputs: c_(t.outputs),
        };
      }
      function d_(t) {
        t.features?.forEach((n) => n(t));
      }
      function hl(t, n) {
        if (!t) return null;
        const e = n ? Ut : sE;
        return () =>
          ("function" == typeof t ? t() : t).map((i) => e(i)).filter(aE);
      }
      const et = 0,
        $ = 1,
        pe = 2,
        qe = 3,
        zn = 4,
        vs = 5,
        Lt = 6,
        Wo = 7,
        it = 8,
        zi = 9,
        Ko = 10,
        ue = 11,
        bs = 12,
        p_ = 13,
        qo = 14,
        ot = 15,
        Cs = 16,
        Zo = 17,
        Xn = 18,
        ws = 19,
        h_ = 20,
        $i = 21,
        _i = 22,
        Ts = 23,
        Ss = 24,
        ve = 25,
        Od = 1,
        f_ = 2,
        ei = 7,
        Yo = 9,
        Mt = 11;
      function on(t) {
        return Array.isArray(t) && "object" == typeof t[Od];
      }
      function Gt(t) {
        return Array.isArray(t) && !0 === t[Od];
      }
      function Ad(t) {
        return 0 != (4 & t.flags);
      }
      function _o(t) {
        return t.componentOffset > -1;
      }
      function gl(t) {
        return 1 == (1 & t.flags);
      }
      function $n(t) {
        return !!t.template;
      }
      function kd(t) {
        return 0 != (512 & t[pe]);
      }
      function yo(t, n) {
        return t.hasOwnProperty(mi) ? t[mi] : null;
      }
      const ji = Symbol("SIGNAL");
      function __(t, n) {
        return (null === t || "object" != typeof t) && Object.is(t, n);
      }
      let Ot = null,
        ml = !1;
      function Dn(t) {
        const n = Ot;
        return (Ot = t), n;
      }
      const _l = {
        version: 0,
        dirty: !1,
        producerNode: void 0,
        producerLastReadVersion: void 0,
        producerIndexOfThis: void 0,
        nextProducerIndex: 0,
        liveConsumerNode: void 0,
        liveConsumerIndexOfThis: void 0,
        consumerAllowSignalWrites: !1,
        consumerIsAlwaysLive: !1,
        producerMustRecompute: () => !1,
        producerRecomputeValue: () => {},
        consumerMarkedDirty: () => {},
      };
      function y_(t) {
        if (ml) throw new Error("");
        if (null === Ot) return;
        const n = Ot.nextProducerIndex++;
        Qo(Ot),
          n < Ot.producerNode.length &&
            Ot.producerNode[n] !== t &&
            Ds(Ot) &&
            bl(Ot.producerNode[n], Ot.producerIndexOfThis[n]),
          Ot.producerNode[n] !== t &&
            ((Ot.producerNode[n] = t),
            (Ot.producerIndexOfThis[n] = Ds(Ot) ? S_(t, Ot, n) : 0)),
          (Ot.producerLastReadVersion[n] = t.version);
      }
      function v_(t) {
        if (!Ds(t) || t.dirty) {
          if (!t.producerMustRecompute(t) && !w_(t)) return void (t.dirty = !1);
          t.producerRecomputeValue(t), (t.dirty = !1);
        }
      }
      function b_(t) {
        if (void 0 === t.liveConsumerNode) return;
        const n = ml;
        ml = !0;
        try {
          for (const e of t.liveConsumerNode) e.dirty || C_(e);
        } finally {
          ml = n;
        }
      }
      function Rd() {
        return !1 !== Ot?.consumerAllowSignalWrites;
      }
      function C_(t) {
        (t.dirty = !0), b_(t), t.consumerMarkedDirty?.(t);
      }
      function yl(t) {
        return t && (t.nextProducerIndex = 0), Dn(t);
      }
      function vl(t, n) {
        if (
          (Dn(n),
          t &&
            void 0 !== t.producerNode &&
            void 0 !== t.producerIndexOfThis &&
            void 0 !== t.producerLastReadVersion)
        ) {
          if (Ds(t))
            for (let e = t.nextProducerIndex; e < t.producerNode.length; e++)
              bl(t.producerNode[e], t.producerIndexOfThis[e]);
          for (; t.producerNode.length > t.nextProducerIndex; )
            t.producerNode.pop(),
              t.producerLastReadVersion.pop(),
              t.producerIndexOfThis.pop();
        }
      }
      function w_(t) {
        Qo(t);
        for (let n = 0; n < t.producerNode.length; n++) {
          const e = t.producerNode[n],
            i = t.producerLastReadVersion[n];
          if (i !== e.version || (v_(e), i !== e.version)) return !0;
        }
        return !1;
      }
      function T_(t) {
        if ((Qo(t), Ds(t)))
          for (let n = 0; n < t.producerNode.length; n++)
            bl(t.producerNode[n], t.producerIndexOfThis[n]);
        (t.producerNode.length =
          t.producerLastReadVersion.length =
          t.producerIndexOfThis.length =
            0),
          t.liveConsumerNode &&
            (t.liveConsumerNode.length = t.liveConsumerIndexOfThis.length = 0);
      }
      function S_(t, n, e) {
        if ((I_(t), Qo(t), 0 === t.liveConsumerNode.length))
          for (let i = 0; i < t.producerNode.length; i++)
            t.producerIndexOfThis[i] = S_(t.producerNode[i], t, i);
        return (
          t.liveConsumerIndexOfThis.push(e), t.liveConsumerNode.push(n) - 1
        );
      }
      function bl(t, n) {
        if ((I_(t), Qo(t), 1 === t.liveConsumerNode.length))
          for (let i = 0; i < t.producerNode.length; i++)
            bl(t.producerNode[i], t.producerIndexOfThis[i]);
        const e = t.liveConsumerNode.length - 1;
        if (
          ((t.liveConsumerNode[n] = t.liveConsumerNode[e]),
          (t.liveConsumerIndexOfThis[n] = t.liveConsumerIndexOfThis[e]),
          t.liveConsumerNode.length--,
          t.liveConsumerIndexOfThis.length--,
          n < t.liveConsumerNode.length)
        ) {
          const i = t.liveConsumerIndexOfThis[n],
            o = t.liveConsumerNode[n];
          Qo(o), (o.producerIndexOfThis[i] = n);
        }
      }
      function Ds(t) {
        return t.consumerIsAlwaysLive || (t?.liveConsumerNode?.length ?? 0) > 0;
      }
      function Qo(t) {
        (t.producerNode ??= []),
          (t.producerIndexOfThis ??= []),
          (t.producerLastReadVersion ??= []);
      }
      function I_(t) {
        (t.liveConsumerNode ??= []), (t.liveConsumerIndexOfThis ??= []);
      }
      function Es(t, n) {
        const e = Object.create(gE);
        (e.computation = t), n?.equal && (e.equal = n.equal);
        const i = () => {
          if ((v_(e), y_(e), e.value === Cl)) throw e.error;
          return e.value;
        };
        return (i[ji] = e), i;
      }
      const Fd = Symbol("UNSET"),
        Ld = Symbol("COMPUTING"),
        Cl = Symbol("ERRORED"),
        gE = (() => ({
          ..._l,
          value: Fd,
          dirty: !0,
          error: null,
          equal: __,
          producerMustRecompute: (t) => t.value === Fd || t.value === Ld,
          producerRecomputeValue(t) {
            if (t.value === Ld)
              throw new Error("Detected cycle in computations.");
            const n = t.value;
            t.value = Ld;
            const e = yl(t);
            let i;
            try {
              i = t.computation();
            } catch (o) {
              (i = Cl), (t.error = o);
            } finally {
              vl(t, e);
            }
            n !== Fd && n !== Cl && i !== Cl && t.equal(n, i)
              ? (t.value = n)
              : ((t.value = i), t.version++);
          },
        }))();
      let D_ = function mE() {
        throw new Error();
      };
      function Pd() {
        D_();
      }
      let Nd = null;
      function yi(t, n) {
        const e = Object.create(yE);
        function i() {
          return y_(e), e.value;
        }
        return (
          (e.value = t),
          n?.equal && (e.equal = n.equal),
          (i.set = x_),
          (i.update = vE),
          (i.mutate = bE),
          (i.asReadonly = CE),
          (i[ji] = e),
          i
        );
      }
      const yE = (() => ({ ..._l, equal: __, readonlyFn: void 0 }))();
      function E_(t) {
        t.version++, b_(t), Nd?.();
      }
      function x_(t) {
        const n = this[ji];
        Rd() || Pd(), n.equal(n.value, t) || ((n.value = t), E_(n));
      }
      function vE(t) {
        Rd() || Pd(), x_.call(this, t(this[ji].value));
      }
      function bE(t) {
        const n = this[ji];
        Rd() || Pd(), t(n.value), E_(n);
      }
      function CE() {
        const t = this[ji];
        if (void 0 === t.readonlyFn) {
          const n = () => this();
          (n[ji] = t), (t.readonlyFn = n);
        }
        return t.readonlyFn;
      }
      const O_ = () => {},
        TE = (() => ({
          ..._l,
          consumerIsAlwaysLive: !0,
          consumerAllowSignalWrites: !1,
          consumerMarkedDirty: (t) => {
            t.schedule(t.ref);
          },
          hasRun: !1,
          cleanupFn: O_,
        }))();
      class A_ {
        constructor(n, e, i) {
          (this.previousValue = n),
            (this.currentValue = e),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function _t() {
        return k_;
      }
      function k_(t) {
        return t.type.prototype.ngOnChanges && (t.setInput = IE), SE;
      }
      function SE() {
        const t = F_(this),
          n = t?.current;
        if (n) {
          const e = t.previous;
          if (e === Jn) t.previous = n;
          else for (let i in n) e[i] = n[i];
          (t.current = null), this.ngOnChanges(n);
        }
      }
      function IE(t, n, e, i) {
        const o = this.declaredInputs[e],
          r =
            F_(t) ||
            (function DE(t, n) {
              return (t[R_] = n);
            })(t, { previous: Jn, current: null }),
          s = r.current || (r.current = {}),
          a = r.previous,
          l = a[o];
        (s[o] = new A_(l && l.currentValue, n, a === Jn)), (t[i] = n);
      }
      _t.ngInherit = !0;
      const R_ = "__ngSimpleChanges__";
      function F_(t) {
        return t[R_] || null;
      }
      const ti = function (t, n, e) {};
      function je(t) {
        for (; Array.isArray(t); ) t = t[et];
        return t;
      }
      function wl(t, n) {
        return je(n[t]);
      }
      function rn(t, n) {
        return je(n[t.index]);
      }
      function N_(t, n) {
        return t.data[n];
      }
      function hn(t, n) {
        const e = n[t];
        return on(e) ? e : e[et];
      }
      function Ui(t, n) {
        return null == n ? null : t[n];
      }
      function V_(t) {
        t[Zo] = 0;
      }
      function kE(t) {
        1024 & t[pe] || ((t[pe] |= 1024), H_(t, 1));
      }
      function B_(t) {
        1024 & t[pe] && ((t[pe] &= -1025), H_(t, -1));
      }
      function H_(t, n) {
        let e = t[qe];
        if (null === e) return;
        e[vs] += n;
        let i = e;
        for (
          e = e[qe];
          null !== e && ((1 === n && 1 === i[vs]) || (-1 === n && 0 === i[vs]));

        )
          (e[vs] += n), (i = e), (e = e[qe]);
      }
      function z_(t, n) {
        if (256 == (256 & t[pe])) throw new O(911, !1);
        null === t[$i] && (t[$i] = []), t[$i].push(n);
      }
      const se = {
        lFrame: Q_(null),
        bindingsEnabled: !0,
        skipHydrationRootTNode: null,
      };
      function j_() {
        return se.bindingsEnabled;
      }
      function Xo() {
        return null !== se.skipHydrationRootTNode;
      }
      function R() {
        return se.lFrame.lView;
      }
      function Ce() {
        return se.lFrame.tView;
      }
      function T(t) {
        return (se.lFrame.contextLView = t), t[it];
      }
      function S(t) {
        return (se.lFrame.contextLView = null), t;
      }
      function At() {
        let t = U_();
        for (; null !== t && 64 === t.type; ) t = t.parent;
        return t;
      }
      function U_() {
        return se.lFrame.currentTNode;
      }
      function ni(t, n) {
        const e = se.lFrame;
        (e.currentTNode = t), (e.isParent = n);
      }
      function Hd() {
        return se.lFrame.isParent;
      }
      function zd() {
        se.lFrame.isParent = !1;
      }
      function Wt() {
        const t = se.lFrame;
        let n = t.bindingRootIndex;
        return (
          -1 === n && (n = t.bindingRootIndex = t.tView.bindingStartIndex), n
        );
      }
      function er() {
        return se.lFrame.bindingIndex++;
      }
      function bi(t) {
        const n = se.lFrame,
          e = n.bindingIndex;
        return (n.bindingIndex = n.bindingIndex + t), e;
      }
      function UE(t, n) {
        const e = se.lFrame;
        (e.bindingIndex = e.bindingRootIndex = t), $d(n);
      }
      function $d(t) {
        se.lFrame.currentDirectiveIndex = t;
      }
      function q_() {
        return se.lFrame.currentQueryIndex;
      }
      function Ud(t) {
        se.lFrame.currentQueryIndex = t;
      }
      function WE(t) {
        const n = t[$];
        return 2 === n.type ? n.declTNode : 1 === n.type ? t[Lt] : null;
      }
      function Z_(t, n, e) {
        if (e & ye.SkipSelf) {
          let o = n,
            r = t;
          for (
            ;
            !((o = o.parent),
            null !== o ||
              e & ye.Host ||
              ((o = WE(r)), null === o || ((r = r[qo]), 10 & o.type)));

          );
          if (null === o) return !1;
          (n = o), (t = r);
        }
        const i = (se.lFrame = Y_());
        return (i.currentTNode = n), (i.lView = t), !0;
      }
      function Gd(t) {
        const n = Y_(),
          e = t[$];
        (se.lFrame = n),
          (n.currentTNode = e.firstChild),
          (n.lView = t),
          (n.tView = e),
          (n.contextLView = t),
          (n.bindingIndex = e.bindingStartIndex),
          (n.inI18n = !1);
      }
      function Y_() {
        const t = se.lFrame,
          n = null === t ? null : t.child;
        return null === n ? Q_(t) : n;
      }
      function Q_(t) {
        const n = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: t,
          child: null,
          inI18n: !1,
        };
        return null !== t && (t.child = n), n;
      }
      function J_() {
        const t = se.lFrame;
        return (
          (se.lFrame = t.parent), (t.currentTNode = null), (t.lView = null), t
        );
      }
      const X_ = J_;
      function Wd() {
        const t = J_();
        (t.isParent = !0),
          (t.tView = null),
          (t.selectedIndex = -1),
          (t.contextLView = null),
          (t.elementDepthCount = 0),
          (t.currentDirectiveIndex = -1),
          (t.currentNamespace = null),
          (t.bindingRootIndex = -1),
          (t.bindingIndex = -1),
          (t.currentQueryIndex = 0);
      }
      function Kt() {
        return se.lFrame.selectedIndex;
      }
      function vo(t) {
        se.lFrame.selectedIndex = t;
      }
      function Ye() {
        const t = se.lFrame;
        return N_(t.tView, t.selectedIndex);
      }
      function We() {
        se.lFrame.currentNamespace = "svg";
      }
      let ty = !0;
      function Tl() {
        return ty;
      }
      function Gi(t) {
        ty = t;
      }
      function Sl(t, n) {
        for (let e = n.directiveStart, i = n.directiveEnd; e < i; e++) {
          const r = t.data[e].type.prototype,
            {
              ngAfterContentInit: s,
              ngAfterContentChecked: a,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: u,
            } = r;
          s && (t.contentHooks ??= []).push(-e, s),
            a &&
              ((t.contentHooks ??= []).push(e, a),
              (t.contentCheckHooks ??= []).push(e, a)),
            l && (t.viewHooks ??= []).push(-e, l),
            c &&
              ((t.viewHooks ??= []).push(e, c),
              (t.viewCheckHooks ??= []).push(e, c)),
            null != u && (t.destroyHooks ??= []).push(e, u);
        }
      }
      function Il(t, n, e) {
        ny(t, n, 3, e);
      }
      function Dl(t, n, e, i) {
        (3 & t[pe]) === e && ny(t, n, e, i);
      }
      function Kd(t, n) {
        let e = t[pe];
        (3 & e) === n && ((e &= 8191), (e += 1), (t[pe] = e));
      }
      function ny(t, n, e, i) {
        const r = i ?? -1,
          s = n.length - 1;
        let a = 0;
        for (let l = void 0 !== i ? 65535 & t[Zo] : 0; l < s; l++)
          if ("number" == typeof n[l + 1]) {
            if (((a = n[l]), null != i && a >= i)) break;
          } else
            n[l] < 0 && (t[Zo] += 65536),
              (a < r || -1 == r) &&
                (XE(t, e, n, l), (t[Zo] = (4294901760 & t[Zo]) + l + 2)),
              l++;
      }
      function iy(t, n) {
        ti(4, t, n);
        const e = Dn(null);
        try {
          n.call(t);
        } finally {
          Dn(e), ti(5, t, n);
        }
      }
      function XE(t, n, e, i) {
        const o = e[i] < 0,
          r = e[i + 1],
          a = t[o ? -e[i] : e[i]];
        o
          ? t[pe] >> 13 < t[Zo] >> 16 &&
            (3 & t[pe]) === n &&
            ((t[pe] += 8192), iy(a, r))
          : iy(a, r);
      }
      const tr = -1;
      class Ms {
        constructor(n, e, i) {
          (this.factory = n),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = i);
        }
      }
      function Zd(t) {
        return t !== tr;
      }
      function Os(t) {
        return 32767 & t;
      }
      function As(t, n) {
        let e = (function ix(t) {
            return t >> 16;
          })(t),
          i = n;
        for (; e > 0; ) (i = i[qo]), e--;
        return i;
      }
      let Yd = !0;
      function El(t) {
        const n = Yd;
        return (Yd = t), n;
      }
      const oy = 255,
        ry = 5;
      let ox = 0;
      const ii = {};
      function xl(t, n) {
        const e = sy(t, n);
        if (-1 !== e) return e;
        const i = n[$];
        i.firstCreatePass &&
          ((t.injectorIndex = n.length),
          Qd(i.data, t),
          Qd(n, null),
          Qd(i.blueprint, null));
        const o = Ml(t, n),
          r = t.injectorIndex;
        if (Zd(o)) {
          const s = Os(o),
            a = As(o, n),
            l = a[$].data;
          for (let c = 0; c < 8; c++) n[r + c] = a[s + c] | l[s + c];
        }
        return (n[r + 8] = o), r;
      }
      function Qd(t, n) {
        t.push(0, 0, 0, 0, 0, 0, 0, 0, n);
      }
      function sy(t, n) {
        return -1 === t.injectorIndex ||
          (t.parent && t.parent.injectorIndex === t.injectorIndex) ||
          null === n[t.injectorIndex + 8]
          ? -1
          : t.injectorIndex;
      }
      function Ml(t, n) {
        if (t.parent && -1 !== t.parent.injectorIndex)
          return t.parent.injectorIndex;
        let e = 0,
          i = null,
          o = n;
        for (; null !== o; ) {
          if (((i = hy(o)), null === i)) return tr;
          if ((e++, (o = o[qo]), -1 !== i.injectorIndex))
            return i.injectorIndex | (e << 16);
        }
        return tr;
      }
      function Jd(t, n, e) {
        !(function rx(t, n, e) {
          let i;
          "string" == typeof e
            ? (i = e.charCodeAt(0) || 0)
            : e.hasOwnProperty(_s) && (i = e[_s]),
            null == i && (i = e[_s] = ox++);
          const o = i & oy;
          n.data[t + (o >> ry)] |= 1 << o;
        })(t, n, e);
      }
      function ay(t, n, e) {
        if (e & ye.Optional || void 0 !== t) return t;
        yd();
      }
      function ly(t, n, e, i) {
        if (
          (e & ye.Optional && void 0 === i && (i = null),
          !(e & (ye.Self | ye.Host)))
        ) {
          const o = t[zi],
            r = tn(void 0);
          try {
            return o ? o.get(n, i, e & ye.Optional) : Zm(n, i, e & ye.Optional);
          } finally {
            tn(r);
          }
        }
        return ay(i, 0, e);
      }
      function cy(t, n, e, i = ye.Default, o) {
        if (null !== t) {
          if (2048 & n[pe] && !(i & ye.Self)) {
            const s = (function dx(t, n, e, i, o) {
              let r = t,
                s = n;
              for (
                ;
                null !== r && null !== s && 2048 & s[pe] && !(512 & s[pe]);

              ) {
                const a = uy(r, s, e, i | ye.Self, ii);
                if (a !== ii) return a;
                let l = r.parent;
                if (!l) {
                  const c = s[h_];
                  if (c) {
                    const u = c.get(e, ii, i);
                    if (u !== ii) return u;
                  }
                  (l = hy(s)), (s = s[qo]);
                }
                r = l;
              }
              return o;
            })(t, n, e, i, ii);
            if (s !== ii) return s;
          }
          const r = uy(t, n, e, i, ii);
          if (r !== ii) return r;
        }
        return ly(n, e, i, o);
      }
      function uy(t, n, e, i, o) {
        const r = (function lx(t) {
          if ("string" == typeof t) return t.charCodeAt(0) || 0;
          const n = t.hasOwnProperty(_s) ? t[_s] : void 0;
          return "number" == typeof n ? (n >= 0 ? n & oy : ux) : n;
        })(e);
        if ("function" == typeof r) {
          if (!Z_(n, t, i)) return i & ye.Host ? ay(o, 0, i) : ly(n, e, i, o);
          try {
            let s;
            if (((s = r(i)), null != s || i & ye.Optional)) return s;
            yd();
          } finally {
            X_();
          }
        } else if ("number" == typeof r) {
          let s = null,
            a = sy(t, n),
            l = tr,
            c = i & ye.Host ? n[ot][Lt] : null;
          for (
            (-1 === a || i & ye.SkipSelf) &&
            ((l = -1 === a ? Ml(t, n) : n[a + 8]),
            l !== tr && py(i, !1)
              ? ((s = n[$]), (a = Os(l)), (n = As(l, n)))
              : (a = -1));
            -1 !== a;

          ) {
            const u = n[$];
            if (dy(r, a, u.data)) {
              const h = ax(a, n, e, s, i, c);
              if (h !== ii) return h;
            }
            (l = n[a + 8]),
              l !== tr && py(i, n[$].data[a + 8] === c) && dy(r, a, n)
                ? ((s = u), (a = Os(l)), (n = As(l, n)))
                : (a = -1);
          }
        }
        return o;
      }
      function ax(t, n, e, i, o, r) {
        const s = n[$],
          a = s.data[t + 8],
          u = Ol(
            a,
            s,
            e,
            null == i ? _o(a) && Yd : i != s && 0 != (3 & a.type),
            o & ye.Host && r === a
          );
        return null !== u ? bo(n, s, u, a) : ii;
      }
      function Ol(t, n, e, i, o) {
        const r = t.providerIndexes,
          s = n.data,
          a = 1048575 & r,
          l = t.directiveStart,
          u = r >> 20,
          m = o ? a + u : t.directiveEnd;
        for (let _ = i ? a : a + u; _ < m; _++) {
          const b = s[_];
          if ((_ < l && e === b) || (_ >= l && b.type === e)) return _;
        }
        if (o) {
          const _ = s[l];
          if (_ && $n(_) && _.type === e) return l;
        }
        return null;
      }
      function bo(t, n, e, i) {
        let o = t[e];
        const r = n.data;
        if (
          (function ex(t) {
            return t instanceof Ms;
          })(o)
        ) {
          const s = o;
          s.resolving &&
            (function A2(t, n) {
              const e = n ? `. Dependency path: ${n.join(" > ")} > ${t}` : "";
              throw new O(
                -200,
                `Circular dependency in DI detected for ${t}${e}`
              );
            })(
              (function ke(t) {
                return "function" == typeof t
                  ? t.name || t.toString()
                  : "object" == typeof t &&
                    null != t &&
                    "function" == typeof t.type
                  ? t.type.name || t.type.toString()
                  : ce(t);
              })(r[e])
            );
          const a = El(s.canSeeViewProviders);
          s.resolving = !0;
          const c = s.injectImpl ? tn(s.injectImpl) : null;
          Z_(t, i, ye.Default);
          try {
            (o = t[e] = s.factory(void 0, r, t, i)),
              n.firstCreatePass &&
                e >= i.directiveStart &&
                (function JE(t, n, e) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: o,
                    ngDoCheck: r,
                  } = n.type.prototype;
                  if (i) {
                    const s = k_(n);
                    (e.preOrderHooks ??= []).push(t, s),
                      (e.preOrderCheckHooks ??= []).push(t, s);
                  }
                  o && (e.preOrderHooks ??= []).push(0 - t, o),
                    r &&
                      ((e.preOrderHooks ??= []).push(t, r),
                      (e.preOrderCheckHooks ??= []).push(t, r));
                })(e, r[e], n);
          } finally {
            null !== c && tn(c), El(a), (s.resolving = !1), X_();
          }
        }
        return o;
      }
      function dy(t, n, e) {
        return !!(e[n + (t >> ry)] & (1 << t));
      }
      function py(t, n) {
        return !(t & ye.Self || (t & ye.Host && n));
      }
      class qt {
        constructor(n, e) {
          (this._tNode = n), (this._lView = e);
        }
        get(n, e, i) {
          return cy(this._tNode, this._lView, n, ul(i), e);
        }
      }
      function ux() {
        return new qt(At(), R());
      }
      function fe(t) {
        return gi(() => {
          const n = t.prototype.constructor,
            e = n[mi] || Xd(n),
            i = Object.prototype;
          let o = Object.getPrototypeOf(t.prototype).constructor;
          for (; o && o !== i; ) {
            const r = o[mi] || Xd(o);
            if (r && r !== e) return r;
            o = Object.getPrototypeOf(o);
          }
          return (r) => new r();
        });
      }
      function Xd(t) {
        return md(t)
          ? () => {
              const n = Xd(ae(t));
              return n && n();
            }
          : yo(t);
      }
      function hy(t) {
        const n = t[$],
          e = n.type;
        return 2 === e ? n.declTNode : 1 === e ? t[Lt] : null;
      }
      const ir = "__parameters__";
      function rr(t, n, e) {
        return gi(() => {
          const i = (function ep(t) {
            return function (...e) {
              if (t) {
                const i = t(...e);
                for (const o in i) this[o] = i[o];
              }
            };
          })(n);
          function o(...r) {
            if (this instanceof o) return i.apply(this, r), this;
            const s = new o(...r);
            return (a.annotation = s), a;
            function a(l, c, u) {
              const h = l.hasOwnProperty(ir)
                ? l[ir]
                : Object.defineProperty(l, ir, { value: [] })[ir];
              for (; h.length <= u; ) h.push(null);
              return (h[u] = h[u] || []).push(s), l;
            }
          }
          return (
            e && (o.prototype = Object.create(e.prototype)),
            (o.prototype.ngMetadataName = t),
            (o.annotationCls = o),
            o
          );
        });
      }
      function ar(t, n) {
        t.forEach((e) => (Array.isArray(e) ? ar(e, n) : n(e)));
      }
      function gy(t, n, e) {
        n >= t.length ? t.push(e) : t.splice(n, 0, e);
      }
      function kl(t, n) {
        return n >= t.length - 1 ? t.pop() : t.splice(n, 1)[0];
      }
      function Fs(t, n) {
        const e = [];
        for (let i = 0; i < t; i++) e.push(n);
        return e;
      }
      function fn(t, n, e) {
        let i = lr(t, n);
        return (
          i >= 0
            ? (t[1 | i] = e)
            : ((i = ~i),
              (function yx(t, n, e, i) {
                let o = t.length;
                if (o == n) t.push(e, i);
                else if (1 === o) t.push(i, t[0]), (t[0] = e);
                else {
                  for (o--, t.push(t[o - 1], t[o]); o > n; )
                    (t[o] = t[o - 2]), o--;
                  (t[n] = e), (t[n + 1] = i);
                }
              })(t, i, n, e)),
          i
        );
      }
      function tp(t, n) {
        const e = lr(t, n);
        if (e >= 0) return t[1 | e];
      }
      function lr(t, n) {
        return (function my(t, n, e) {
          let i = 0,
            o = t.length >> e;
          for (; o !== i; ) {
            const r = i + ((o - i) >> 1),
              s = t[r << e];
            if (n === s) return r << e;
            s > n ? (o = r) : (i = r + 1);
          }
          return ~(o << e);
        })(t, n, 1);
      }
      const Fl = ms(rr("Optional"), 8),
        Ll = ms(rr("SkipSelf"), 4);
      function Hl(t) {
        return 128 == (128 & t.flags);
      }
      var Wi = (function (t) {
        return (
          (t[(t.Important = 1)] = "Important"),
          (t[(t.DashCase = 2)] = "DashCase"),
          t
        );
      })(Wi || {});
      const Bx = /^>|^->|<!--|-->|--!>|<!-$/g,
        Hx = /(<|>)/g,
        zx = "\u200b$1\u200b";
      const sp = new Map();
      let $x = 0;
      const lp = "__ngContext__";
      function Pt(t, n) {
        on(n)
          ? ((t[lp] = n[ws]),
            (function Ux(t) {
              sp.set(t[ws], t);
            })(n))
          : (t[lp] = n);
      }
      let cp;
      function up(t, n) {
        return cp(t, n);
      }
      function Ns(t) {
        const n = t[qe];
        return Gt(n) ? n[qe] : n;
      }
      function Py(t) {
        return Vy(t[bs]);
      }
      function Ny(t) {
        return Vy(t[zn]);
      }
      function Vy(t) {
        for (; null !== t && !Gt(t); ) t = t[zn];
        return t;
      }
      function dr(t, n, e, i, o) {
        if (null != i) {
          let r,
            s = !1;
          Gt(i) ? (r = i) : on(i) && ((s = !0), (i = i[et]));
          const a = je(i);
          0 === t && null !== e
            ? null == o
              ? $y(n, e, a)
              : Co(n, e, a, o || null, !0)
            : 1 === t && null !== e
            ? Co(n, e, a, o || null, !0)
            : 2 === t
            ? (function Kl(t, n, e) {
                const i = Gl(t, n);
                i &&
                  (function cM(t, n, e, i) {
                    t.removeChild(n, e, i);
                  })(t, i, n, e);
              })(n, a, s)
            : 3 === t && n.destroyNode(a),
            null != r &&
              (function pM(t, n, e, i, o) {
                const r = e[ei];
                r !== je(e) && dr(n, t, i, r, o);
                for (let a = Mt; a < e.length; a++) {
                  const l = e[a];
                  Bs(l[$], l, t, n, i, r);
                }
              })(n, t, r, e, o);
        }
      }
      function dp(t, n) {
        return t.createComment(
          (function xy(t) {
            return t.replace(Bx, (n) => n.replace(Hx, zx));
          })(n)
        );
      }
      function jl(t, n, e) {
        return t.createElement(n, e);
      }
      function Hy(t, n) {
        const e = t[Yo],
          i = e.indexOf(n);
        B_(n), e.splice(i, 1);
      }
      function Ul(t, n) {
        if (t.length <= Mt) return;
        const e = Mt + n,
          i = t[e];
        if (i) {
          const o = i[Cs];
          null !== o && o !== t && Hy(o, i), n > 0 && (t[e - 1][zn] = i[zn]);
          const r = kl(t, Mt + n);
          !(function tM(t, n) {
            Bs(t, n, n[ue], 2, null, null), (n[et] = null), (n[Lt] = null);
          })(i[$], i);
          const s = r[Xn];
          null !== s && s.detachView(r[$]),
            (i[qe] = null),
            (i[zn] = null),
            (i[pe] &= -129);
        }
        return i;
      }
      function pp(t, n) {
        if (!(256 & n[pe])) {
          const e = n[ue];
          n[Ts] && T_(n[Ts]),
            n[Ss] && T_(n[Ss]),
            e.destroyNode && Bs(t, n, e, 3, null, null),
            (function oM(t) {
              let n = t[bs];
              if (!n) return hp(t[$], t);
              for (; n; ) {
                let e = null;
                if (on(n)) e = n[bs];
                else {
                  const i = n[Mt];
                  i && (e = i);
                }
                if (!e) {
                  for (; n && !n[zn] && n !== t; )
                    on(n) && hp(n[$], n), (n = n[qe]);
                  null === n && (n = t), on(n) && hp(n[$], n), (e = n && n[zn]);
                }
                n = e;
              }
            })(n);
        }
      }
      function hp(t, n) {
        if (!(256 & n[pe])) {
          (n[pe] &= -129),
            (n[pe] |= 256),
            (function lM(t, n) {
              let e;
              if (null != t && null != (e = t.destroyHooks))
                for (let i = 0; i < e.length; i += 2) {
                  const o = n[e[i]];
                  if (!(o instanceof Ms)) {
                    const r = e[i + 1];
                    if (Array.isArray(r))
                      for (let s = 0; s < r.length; s += 2) {
                        const a = o[r[s]],
                          l = r[s + 1];
                        ti(4, a, l);
                        try {
                          l.call(a);
                        } finally {
                          ti(5, a, l);
                        }
                      }
                    else {
                      ti(4, o, r);
                      try {
                        r.call(o);
                      } finally {
                        ti(5, o, r);
                      }
                    }
                  }
                }
            })(t, n),
            (function aM(t, n) {
              const e = t.cleanup,
                i = n[Wo];
              if (null !== e)
                for (let r = 0; r < e.length - 1; r += 2)
                  if ("string" == typeof e[r]) {
                    const s = e[r + 3];
                    s >= 0 ? i[s]() : i[-s].unsubscribe(), (r += 2);
                  } else e[r].call(i[e[r + 1]]);
              null !== i && (n[Wo] = null);
              const o = n[$i];
              if (null !== o) {
                n[$i] = null;
                for (let r = 0; r < o.length; r++) (0, o[r])();
              }
            })(t, n),
            1 === n[$].type && n[ue].destroy();
          const e = n[Cs];
          if (null !== e && Gt(n[qe])) {
            e !== n[qe] && Hy(e, n);
            const i = n[Xn];
            null !== i && i.detachView(t);
          }
          !(function Gx(t) {
            sp.delete(t[ws]);
          })(n);
        }
      }
      function fp(t, n, e) {
        return (function zy(t, n, e) {
          let i = n;
          for (; null !== i && 40 & i.type; ) i = (n = i).parent;
          if (null === i) return e[et];
          {
            const { componentOffset: o } = i;
            if (o > -1) {
              const { encapsulation: r } = t.data[i.directiveStart + o];
              if (r === In.None || r === In.Emulated) return null;
            }
            return rn(i, e);
          }
        })(t, n.parent, e);
      }
      function Co(t, n, e, i, o) {
        t.insertBefore(n, e, i, o);
      }
      function $y(t, n, e) {
        t.appendChild(n, e);
      }
      function jy(t, n, e, i, o) {
        null !== i ? Co(t, n, e, i, o) : $y(t, n, e);
      }
      function Gl(t, n) {
        return t.parentNode(n);
      }
      function Uy(t, n, e) {
        return Wy(t, n, e);
      }
      let gp,
        vp,
        Wy = function Gy(t, n, e) {
          return 40 & t.type ? rn(t, e) : null;
        };
      function Wl(t, n, e, i) {
        const o = fp(t, i, n),
          r = n[ue],
          a = Uy(i.parent || n[Lt], i, n);
        if (null != o)
          if (Array.isArray(e))
            for (let l = 0; l < e.length; l++) jy(r, o, e[l], a, !1);
          else jy(r, o, e, a, !1);
        void 0 !== gp && gp(r, i, n, e, o);
      }
      function Vs(t, n) {
        if (null !== n) {
          const e = n.type;
          if (3 & e) return rn(n, t);
          if (4 & e) return mp(-1, t[n.index]);
          if (8 & e) {
            const i = n.child;
            if (null !== i) return Vs(t, i);
            {
              const o = t[n.index];
              return Gt(o) ? mp(-1, o) : je(o);
            }
          }
          if (32 & e) return up(n, t)() || je(t[n.index]);
          {
            const i = qy(t, n);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : Vs(Ns(t[ot]), i)
              : Vs(t, n.next);
          }
        }
        return null;
      }
      function qy(t, n) {
        return null !== n ? t[ot][Lt].projection[n.projection] : null;
      }
      function mp(t, n) {
        const e = Mt + t + 1;
        if (e < n.length) {
          const i = n[e],
            o = i[$].firstChild;
          if (null !== o) return Vs(i, o);
        }
        return n[ei];
      }
      function _p(t, n, e, i, o, r, s) {
        for (; null != e; ) {
          const a = i[e.index],
            l = e.type;
          if (
            (s && 0 === n && (a && Pt(je(a), i), (e.flags |= 2)),
            32 != (32 & e.flags))
          )
            if (8 & l) _p(t, n, e.child, i, o, r, !1), dr(n, t, o, a, r);
            else if (32 & l) {
              const c = up(e, i);
              let u;
              for (; (u = c()); ) dr(n, t, o, u, r);
              dr(n, t, o, a, r);
            } else 16 & l ? Yy(t, n, i, e, o, r) : dr(n, t, o, a, r);
          e = s ? e.projectionNext : e.next;
        }
      }
      function Bs(t, n, e, i, o, r) {
        _p(e, i, t.firstChild, n, o, r, !1);
      }
      function Yy(t, n, e, i, o, r) {
        const s = e[ot],
          l = s[Lt].projection[i.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) dr(n, t, o, l[c], r);
        else {
          let c = l;
          const u = s[qe];
          Hl(i) && (c.flags |= 128), _p(t, n, c, u, o, r, !0);
        }
      }
      function Qy(t, n, e) {
        "" === e
          ? t.removeAttribute(n, "class")
          : t.setAttribute(n, "class", e);
      }
      function Jy(t, n, e) {
        const { mergedAttrs: i, classes: o, styles: r } = e;
        null !== i && Md(t, n, i),
          null !== o && Qy(t, n, o),
          null !== r &&
            (function fM(t, n, e) {
              t.setAttribute(n, "style", e);
            })(t, n, r);
      }
      class n1 {
        constructor(n) {
          this.changingThisBreaksApplicationSecurity = n;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      function Ki(t) {
        return t instanceof n1 ? t.changingThisBreaksApplicationSecurity : t;
      }
      const js = new G("ENVIRONMENT_INITIALIZER"),
        p1 = new G("INJECTOR", -1),
        h1 = new G("INJECTOR_DEF_TYPES");
      class Ip {
        get(n, e = gs) {
          if (e === gs) {
            const i = new Error(`NullInjectorError: No provider for ${mt(n)}!`);
            throw ((i.name = "NullInjectorError"), i);
          }
          return e;
        }
      }
      function zM(...t) {
        return { ɵproviders: f1(0, t), ɵfromNgModule: !0 };
      }
      function f1(t, ...n) {
        const e = [],
          i = new Set();
        let o;
        const r = (s) => {
          e.push(s);
        };
        return (
          ar(n, (s) => {
            const a = s;
            Ql(a, r, [], i) && ((o ||= []), o.push(a));
          }),
          void 0 !== o && g1(o, r),
          e
        );
      }
      function g1(t, n) {
        for (let e = 0; e < t.length; e++) {
          const { ngModule: i, providers: o } = t[e];
          Ep(o, (r) => {
            n(r, i);
          });
        }
      }
      function Ql(t, n, e, i) {
        if (!(t = ae(t))) return !1;
        let o = null,
          r = al(t);
        const s = !r && be(t);
        if (r || s) {
          if (s && !s.standalone) return !1;
          o = t;
        } else {
          const l = t.ngModule;
          if (((r = al(l)), !r)) return !1;
          o = l;
        }
        const a = i.has(o);
        if (s) {
          if (a) return !1;
          if ((i.add(o), s.dependencies)) {
            const l =
              "function" == typeof s.dependencies
                ? s.dependencies()
                : s.dependencies;
            for (const c of l) Ql(c, n, e, i);
          }
        } else {
          if (!r) return !1;
          {
            if (null != r.imports && !a) {
              let c;
              i.add(o);
              try {
                ar(r.imports, (u) => {
                  Ql(u, n, e, i) && ((c ||= []), c.push(u));
                });
              } finally {
              }
              void 0 !== c && g1(c, n);
            }
            if (!a) {
              const c = yo(o) || (() => new o());
              n({ provide: o, useFactory: c, deps: De }, o),
                n({ provide: h1, useValue: o, multi: !0 }, o),
                n({ provide: js, useValue: () => W(o), multi: !0 }, o);
            }
            const l = r.providers;
            if (null != l && !a) {
              const c = t;
              Ep(l, (u) => {
                n(u, c);
              });
            }
          }
        }
        return o !== t && void 0 !== t.providers;
      }
      function Ep(t, n) {
        for (let e of t)
          _d(e) && (e = e.ɵproviders), Array.isArray(e) ? Ep(e, n) : n(e);
      }
      const $M = Pe({ provide: String, useValue: Pe });
      function xp(t) {
        return null !== t && "object" == typeof t && $M in t;
      }
      function wo(t) {
        return "function" == typeof t;
      }
      const Mp = new G("Set Injector scope."),
        Jl = {},
        UM = {};
      let Op;
      function Xl() {
        return void 0 === Op && (Op = new Ip()), Op;
      }
      class gn {}
      class gr extends gn {
        get destroyed() {
          return this._destroyed;
        }
        constructor(n, e, i, o) {
          super(),
            (this.parent = e),
            (this.source = i),
            (this.scopes = o),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            kp(n, (s) => this.processProvider(s)),
            this.records.set(p1, mr(void 0, this)),
            o.has("environment") && this.records.set(gn, mr(void 0, this));
          const r = this.records.get(Mp);
          null != r && "string" == typeof r.value && this.scopes.add(r.value),
            (this.injectorDefTypes = new Set(this.get(h1.multi, De, ye.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const e of this._ngOnDestroyHooks) e.ngOnDestroy();
            const n = this._onDestroyHooks;
            this._onDestroyHooks = [];
            for (const e of n) e();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear();
          }
        }
        onDestroy(n) {
          return (
            this.assertNotDestroyed(),
            this._onDestroyHooks.push(n),
            () => this.removeOnDestroy(n)
          );
        }
        runInContext(n) {
          this.assertNotDestroyed();
          const e = Hi(this),
            i = tn(void 0);
          try {
            return n();
          } finally {
            Hi(e), tn(i);
          }
        }
        get(n, e = gs, i = ye.Default) {
          if ((this.assertNotDestroyed(), n.hasOwnProperty(e_)))
            return n[e_](this);
          i = ul(i);
          const r = Hi(this),
            s = tn(void 0);
          try {
            if (!(i & ye.SkipSelf)) {
              let l = this.records.get(n);
              if (void 0 === l) {
                const c =
                  (function ZM(t) {
                    return (
                      "function" == typeof t ||
                      ("object" == typeof t && t instanceof G)
                    );
                  })(n) && sl(n);
                (l = c && this.injectableDefInScope(c) ? mr(Ap(n), Jl) : null),
                  this.records.set(n, l);
              }
              if (null != l) return this.hydrate(n, l);
            }
            return (i & ye.Self ? Xl() : this.parent).get(
              n,
              (e = i & ye.Optional && e === gs ? null : e)
            );
          } catch (a) {
            if ("NullInjectorError" === a.name) {
              if (((a[cl] = a[cl] || []).unshift(mt(n)), r)) throw a;
              return (function W2(t, n, e, i) {
                const o = t[cl];
                throw (
                  (n[Qm] && o.unshift(n[Qm]),
                  (t.message = (function K2(t, n, e, i = null) {
                    t =
                      t && "\n" === t.charAt(0) && "\u0275" == t.charAt(1)
                        ? t.slice(2)
                        : t;
                    let o = mt(n);
                    if (Array.isArray(n)) o = n.map(mt).join(" -> ");
                    else if ("object" == typeof n) {
                      let r = [];
                      for (let s in n)
                        if (n.hasOwnProperty(s)) {
                          let a = n[s];
                          r.push(
                            s +
                              ":" +
                              ("string" == typeof a ? JSON.stringify(a) : mt(a))
                          );
                        }
                      o = `{${r.join(", ")}}`;
                    }
                    return `${e}${i ? "(" + i + ")" : ""}[${o}]: ${t.replace(
                      z2,
                      "\n  "
                    )}`;
                  })("\n" + t.message, o, e, i)),
                  (t.ngTokenPath = o),
                  (t[cl] = null),
                  t)
                );
              })(a, n, "R3InjectorError", this.source);
            }
            throw a;
          } finally {
            tn(s), Hi(r);
          }
        }
        resolveInjectorInitializers() {
          const n = Hi(this),
            e = tn(void 0);
          try {
            const o = this.get(js.multi, De, ye.Self);
            for (const r of o) r();
          } finally {
            Hi(n), tn(e);
          }
        }
        toString() {
          const n = [],
            e = this.records;
          for (const i of e.keys()) n.push(mt(i));
          return `R3Injector[${n.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new O(205, !1);
        }
        processProvider(n) {
          let e = wo((n = ae(n))) ? n : ae(n && n.provide);
          const i = (function WM(t) {
            return xp(t) ? mr(void 0, t.useValue) : mr(y1(t), Jl);
          })(n);
          if (wo(n) || !0 !== n.multi) this.records.get(e);
          else {
            let o = this.records.get(e);
            o ||
              ((o = mr(void 0, Jl, !0)),
              (o.factory = () => Dd(o.multi)),
              this.records.set(e, o)),
              (e = n),
              o.multi.push(n);
          }
          this.records.set(e, i);
        }
        hydrate(n, e) {
          return (
            e.value === Jl && ((e.value = UM), (e.value = e.factory())),
            "object" == typeof e.value &&
              e.value &&
              (function qM(t) {
                return (
                  null !== t &&
                  "object" == typeof t &&
                  "function" == typeof t.ngOnDestroy
                );
              })(e.value) &&
              this._ngOnDestroyHooks.add(e.value),
            e.value
          );
        }
        injectableDefInScope(n) {
          if (!n.providedIn) return !1;
          const e = ae(n.providedIn);
          return "string" == typeof e
            ? "any" === e || this.scopes.has(e)
            : this.injectorDefTypes.has(e);
        }
        removeOnDestroy(n) {
          const e = this._onDestroyHooks.indexOf(n);
          -1 !== e && this._onDestroyHooks.splice(e, 1);
        }
      }
      function Ap(t) {
        const n = sl(t),
          e = null !== n ? n.factory : yo(t);
        if (null !== e) return e;
        if (t instanceof G) throw new O(204, !1);
        if (t instanceof Function)
          return (function GM(t) {
            const n = t.length;
            if (n > 0) throw (Fs(n, "?"), new O(204, !1));
            const e = (function N2(t) {
              return (t && (t[ll] || t[Km])) || null;
            })(t);
            return null !== e ? () => e.factory(t) : () => new t();
          })(t);
        throw new O(204, !1);
      }
      function y1(t, n, e) {
        let i;
        if (wo(t)) {
          const o = ae(t);
          return yo(o) || Ap(o);
        }
        if (xp(t)) i = () => ae(t.useValue);
        else if (
          (function _1(t) {
            return !(!t || !t.useFactory);
          })(t)
        )
          i = () => t.useFactory(...Dd(t.deps || []));
        else if (
          (function m1(t) {
            return !(!t || !t.useExisting);
          })(t)
        )
          i = () => W(ae(t.useExisting));
        else {
          const o = ae(t && (t.useClass || t.provide));
          if (
            !(function KM(t) {
              return !!t.deps;
            })(t)
          )
            return yo(o) || Ap(o);
          i = () => new o(...Dd(t.deps));
        }
        return i;
      }
      function mr(t, n, e = !1) {
        return { factory: t, value: n, multi: e ? [] : void 0 };
      }
      function kp(t, n) {
        for (const e of t)
          Array.isArray(e) ? kp(e, n) : e && _d(e) ? kp(e.ɵproviders, n) : n(e);
      }
      const ec = new G("AppId", { providedIn: "root", factory: () => YM }),
        YM = "ng",
        v1 = new G("Platform Initializer"),
        xn = new G("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        b1 = new G("AnimationModuleType"),
        C1 = new G("CSP nonce", {
          providedIn: "root",
          factory: () =>
            (function hr() {
              if (void 0 !== vp) return vp;
              if (typeof document < "u") return document;
              throw new O(210, !1);
            })()
              .body?.querySelector("[ngCspNonce]")
              ?.getAttribute("ngCspNonce") || null,
        });
      let w1 = (t, n, e) => null;
      function Hp(t, n, e = !1) {
        return w1(t, n, e);
      }
      class s3 {}
      class I1 {}
      class l3 {
        resolveComponentFactory(n) {
          throw (function a3(t) {
            const n = Error(`No component factory found for ${mt(t)}.`);
            return (n.ngComponent = t), n;
          })(n);
        }
      }
      let vr = (() => {
        class t {
          static #e = (this.NULL = new l3());
        }
        return t;
      })();
      function c3() {
        return br(At(), R());
      }
      function br(t, n) {
        return new Fe(rn(t, n));
      }
      let Fe = (() => {
        class t {
          constructor(e) {
            this.nativeElement = e;
          }
          static #e = (this.__NG_ELEMENT_ID__ = c3);
        }
        return t;
      })();
      function u3(t) {
        return t instanceof Fe ? t.nativeElement : t;
      }
      class Ws {}
      let Tt = (() => {
          class t {
            constructor() {
              this.destroyNode = null;
            }
            static #e = (this.__NG_ELEMENT_ID__ = () =>
              (function d3() {
                const t = R(),
                  e = hn(At().index, t);
                return (on(e) ? e : t)[ue];
              })());
          }
          return t;
        })(),
        p3 = (() => {
          class t {
            static #e = (this.ɵprov = K({
              token: t,
              providedIn: "root",
              factory: () => null,
            }));
          }
          return t;
        })();
      class Cr {
        constructor(n) {
          (this.full = n),
            (this.major = n.split(".")[0]),
            (this.minor = n.split(".")[1]),
            (this.patch = n.split(".").slice(2).join("."));
        }
      }
      const h3 = new Cr("16.2.12"),
        jp = {};
      function O1(t, n = null, e = null, i) {
        const o = A1(t, n, e, i);
        return o.resolveInjectorInitializers(), o;
      }
      function A1(t, n = null, e = null, i, o = new Set()) {
        const r = [e || De, zM(t)];
        return (
          (i = i || ("object" == typeof t ? void 0 : mt(t))),
          new gr(r, n || Xl(), i || null, o)
        );
      }
      let Nt = (() => {
        class t {
          static #e = (this.THROW_IF_NOT_FOUND = gs);
          static #t = (this.NULL = new Ip());
          static create(e, i) {
            if (Array.isArray(e)) return O1({ name: "" }, i, e, "");
            {
              const o = e.name ?? "";
              return O1({ name: o }, e.parent, e.providers, o);
            }
          }
          static #n = (this.ɵprov = K({
            token: t,
            providedIn: "any",
            factory: () => W(p1),
          }));
          static #i = (this.__NG_ELEMENT_ID__ = -1);
        }
        return t;
      })();
      function Gp(t) {
        return t.ngOriginalError;
      }
      class wi {
        constructor() {
          this._console = console;
        }
        handleError(n) {
          const e = this._findOriginalError(n);
          this._console.error("ERROR", n),
            e && this._console.error("ORIGINAL ERROR", e);
        }
        _findOriginalError(n) {
          let e = n && Gp(n);
          for (; e && Gp(e); ) e = Gp(e);
          return e || null;
        }
      }
      let sc = (() => {
        class t {
          static #e = (this.__NG_ELEMENT_ID__ = b3);
          static #t = (this.__NG_ENV_ID__ = (e) => e);
        }
        return t;
      })();
      class v3 extends sc {
        constructor(n) {
          super(), (this._lView = n);
        }
        onDestroy(n) {
          return (
            z_(this._lView, n),
            () =>
              (function RE(t, n) {
                if (null === t[$i]) return;
                const e = t[$i].indexOf(n);
                -1 !== e && t[$i].splice(e, 1);
              })(this._lView, n)
          );
        }
      }
      function b3() {
        return new v3(R());
      }
      function Wp(t) {
        return (n) => {
          setTimeout(t, void 0, n);
        };
      }
      const L = class C3 extends ct {
        constructor(n = !1) {
          super(), (this.__isAsync = n);
        }
        emit(n) {
          super.next(n);
        }
        subscribe(n, e, i) {
          let o = n,
            r = e || (() => null),
            s = i;
          if (n && "object" == typeof n) {
            const l = n;
            (o = l.next?.bind(l)),
              (r = l.error?.bind(l)),
              (s = l.complete?.bind(l));
          }
          this.__isAsync && ((r = Wp(r)), o && (o = Wp(o)), s && (s = Wp(s)));
          const a = super.subscribe({ next: o, error: r, complete: s });
          return n instanceof cn && n.add(a), a;
        }
      };
      function R1(...t) {}
      class _e {
        constructor({
          enableLongStackTrace: n = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new L(!1)),
            (this.onMicrotaskEmpty = new L(!1)),
            (this.onStable = new L(!1)),
            (this.onError = new L(!1)),
            typeof Zone > "u")
          )
            throw new O(908, !1);
          Zone.assertZonePatched();
          const o = this;
          (o._nesting = 0),
            (o._outer = o._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec())),
            n &&
              Zone.longStackTraceZoneSpec &&
              (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)),
            (o.shouldCoalesceEventChangeDetection = !i && e),
            (o.shouldCoalesceRunChangeDetection = i),
            (o.lastRequestAnimationFrameId = -1),
            (o.nativeRequestAnimationFrame = (function w3() {
              const t = "function" == typeof $e.requestAnimationFrame;
              let n = $e[t ? "requestAnimationFrame" : "setTimeout"],
                e = $e[t ? "cancelAnimationFrame" : "clearTimeout"];
              if (typeof Zone < "u" && n && e) {
                const i = n[Zone.__symbol__("OriginalDelegate")];
                i && (n = i);
                const o = e[Zone.__symbol__("OriginalDelegate")];
                o && (e = o);
              }
              return {
                nativeRequestAnimationFrame: n,
                nativeCancelAnimationFrame: e,
              };
            })().nativeRequestAnimationFrame),
            (function I3(t) {
              const n = () => {
                !(function S3(t) {
                  t.isCheckStableRunning ||
                    -1 !== t.lastRequestAnimationFrameId ||
                    ((t.lastRequestAnimationFrameId =
                      t.nativeRequestAnimationFrame.call($e, () => {
                        t.fakeTopEventTask ||
                          (t.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (t.lastRequestAnimationFrameId = -1),
                                qp(t),
                                (t.isCheckStableRunning = !0),
                                Kp(t),
                                (t.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          t.fakeTopEventTask.invoke();
                      })),
                    qp(t));
                })(t);
              };
              t._inner = t._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (e, i, o, r, s, a) => {
                  if (
                    (function E3(t) {
                      return (
                        !(!Array.isArray(t) || 1 !== t.length) &&
                        !0 === t[0].data?.__ignore_ng_zone__
                      );
                    })(a)
                  )
                    return e.invokeTask(o, r, s, a);
                  try {
                    return F1(t), e.invokeTask(o, r, s, a);
                  } finally {
                    ((t.shouldCoalesceEventChangeDetection &&
                      "eventTask" === r.type) ||
                      t.shouldCoalesceRunChangeDetection) &&
                      n(),
                      L1(t);
                  }
                },
                onInvoke: (e, i, o, r, s, a, l) => {
                  try {
                    return F1(t), e.invoke(o, r, s, a, l);
                  } finally {
                    t.shouldCoalesceRunChangeDetection && n(), L1(t);
                  }
                },
                onHasTask: (e, i, o, r) => {
                  e.hasTask(o, r),
                    i === o &&
                      ("microTask" == r.change
                        ? ((t._hasPendingMicrotasks = r.microTask),
                          qp(t),
                          Kp(t))
                        : "macroTask" == r.change &&
                          (t.hasPendingMacrotasks = r.macroTask));
                },
                onHandleError: (e, i, o, r) => (
                  e.handleError(o, r),
                  t.runOutsideAngular(() => t.onError.emit(r)),
                  !1
                ),
              });
            })(o);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!_e.isInAngularZone()) throw new O(909, !1);
        }
        static assertNotInAngularZone() {
          if (_e.isInAngularZone()) throw new O(909, !1);
        }
        run(n, e, i) {
          return this._inner.run(n, e, i);
        }
        runTask(n, e, i, o) {
          const r = this._inner,
            s = r.scheduleEventTask("NgZoneEvent: " + o, n, T3, R1, R1);
          try {
            return r.runTask(s, e, i);
          } finally {
            r.cancelTask(s);
          }
        }
        runGuarded(n, e, i) {
          return this._inner.runGuarded(n, e, i);
        }
        runOutsideAngular(n) {
          return this._outer.run(n);
        }
      }
      const T3 = {};
      function Kp(t) {
        if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable)
          try {
            t._nesting++, t.onMicrotaskEmpty.emit(null);
          } finally {
            if ((t._nesting--, !t.hasPendingMicrotasks))
              try {
                t.runOutsideAngular(() => t.onStable.emit(null));
              } finally {
                t.isStable = !0;
              }
          }
      }
      function qp(t) {
        t.hasPendingMicrotasks = !!(
          t._hasPendingMicrotasks ||
          ((t.shouldCoalesceEventChangeDetection ||
            t.shouldCoalesceRunChangeDetection) &&
            -1 !== t.lastRequestAnimationFrameId)
        );
      }
      function F1(t) {
        t._nesting++,
          t.isStable && ((t.isStable = !1), t.onUnstable.emit(null));
      }
      function L1(t) {
        t._nesting--, Kp(t);
      }
      class D3 {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new L()),
            (this.onMicrotaskEmpty = new L()),
            (this.onStable = new L()),
            (this.onError = new L());
        }
        run(n, e, i) {
          return n.apply(e, i);
        }
        runGuarded(n, e, i) {
          return n.apply(e, i);
        }
        runOutsideAngular(n) {
          return n();
        }
        runTask(n, e, i, o) {
          return n.apply(e, i);
        }
      }
      const P1 = new G("", { providedIn: "root", factory: N1 });
      function N1() {
        const t = U(_e);
        let n = !0;
        return jm(
          new nt((o) => {
            (n =
              t.isStable && !t.hasPendingMacrotasks && !t.hasPendingMicrotasks),
              t.runOutsideAngular(() => {
                o.next(n), o.complete();
              });
          }),
          new nt((o) => {
            let r;
            t.runOutsideAngular(() => {
              r = t.onStable.subscribe(() => {
                _e.assertNotInAngularZone(),
                  queueMicrotask(() => {
                    !n &&
                      !t.hasPendingMacrotasks &&
                      !t.hasPendingMicrotasks &&
                      ((n = !0), o.next(!0));
                  });
              });
            });
            const s = t.onUnstable.subscribe(() => {
              _e.assertInAngularZone(),
                n &&
                  ((n = !1),
                  t.runOutsideAngular(() => {
                    o.next(!1);
                  }));
            });
            return () => {
              r.unsubscribe(), s.unsubscribe();
            };
          }).pipe(Um())
        );
      }
      function V1(t) {
        return t.ownerDocument.defaultView;
      }
      function B1(t) {
        return t.ownerDocument;
      }
      function Ti(t) {
        return t instanceof Function ? t() : t;
      }
      let Zp = (() => {
        class t {
          constructor() {
            (this.renderDepth = 0), (this.handler = null);
          }
          begin() {
            this.handler?.validateBegin(), this.renderDepth++;
          }
          end() {
            this.renderDepth--,
              0 === this.renderDepth && this.handler?.execute();
          }
          ngOnDestroy() {
            this.handler?.destroy(), (this.handler = null);
          }
          static #e = (this.ɵprov = K({
            token: t,
            providedIn: "root",
            factory: () => new t(),
          }));
        }
        return t;
      })();
      function Ks(t) {
        for (; t; ) {
          t[pe] |= 64;
          const n = Ns(t);
          if (kd(t) && !n) return t;
          t = n;
        }
        return null;
      }
      const U1 = new G("", { providedIn: "root", factory: () => !1 });
      let lc = null;
      function q1(t, n) {
        return t[n] ?? Q1();
      }
      function Z1(t, n) {
        const e = Q1();
        e.producerNode?.length && ((t[n] = lc), (e.lView = t), (lc = Y1()));
      }
      const L3 = {
        ..._l,
        consumerIsAlwaysLive: !0,
        consumerMarkedDirty: (t) => {
          Ks(t.lView);
        },
        lView: null,
      };
      function Y1() {
        return Object.create(L3);
      }
      function Q1() {
        return (lc ??= Y1()), lc;
      }
      const de = {};
      function g(t) {
        J1(Ce(), R(), Kt() + t, !1);
      }
      function J1(t, n, e, i) {
        if (!i)
          if (3 == (3 & n[pe])) {
            const r = t.preOrderCheckHooks;
            null !== r && Il(n, r, e);
          } else {
            const r = t.preOrderHooks;
            null !== r && Dl(n, r, 0, e);
          }
        vo(e);
      }
      function D(t, n = ye.Default) {
        const e = R();
        return null === e ? W(t, n) : cy(At(), e, ae(t), n);
      }
      function cc(t, n, e, i, o, r, s, a, l, c, u) {
        const h = n.blueprint.slice();
        return (
          (h[et] = o),
          (h[pe] = 140 | i),
          (null !== c || (t && 2048 & t[pe])) && (h[pe] |= 2048),
          V_(h),
          (h[qe] = h[qo] = t),
          (h[it] = e),
          (h[Ko] = s || (t && t[Ko])),
          (h[ue] = a || (t && t[ue])),
          (h[zi] = l || (t && t[zi]) || null),
          (h[Lt] = r),
          (h[ws] = (function jx() {
            return $x++;
          })()),
          (h[_i] = u),
          (h[h_] = c),
          (h[ot] = 2 == n.type ? t[ot] : h),
          h
        );
      }
      function Sr(t, n, e, i, o) {
        let r = t.data[n];
        if (null === r)
          (r = (function Yp(t, n, e, i, o) {
            const r = U_(),
              s = Hd(),
              l = (t.data[n] = (function j3(t, n, e, i, o, r) {
                let s = n ? n.injectorIndex : -1,
                  a = 0;
                return (
                  Xo() && (a |= 128),
                  {
                    type: e,
                    index: i,
                    insertBeforeIndex: null,
                    injectorIndex: s,
                    directiveStart: -1,
                    directiveEnd: -1,
                    directiveStylingLast: -1,
                    componentOffset: -1,
                    propertyBindings: null,
                    flags: a,
                    providerIndexes: 0,
                    value: o,
                    attrs: r,
                    mergedAttrs: null,
                    localNames: null,
                    initialInputs: void 0,
                    inputs: null,
                    outputs: null,
                    tView: null,
                    next: null,
                    prev: null,
                    projectionNext: null,
                    child: null,
                    parent: n,
                    projection: null,
                    styles: null,
                    stylesWithoutHost: null,
                    residualStyles: void 0,
                    classes: null,
                    classesWithoutHost: null,
                    residualClasses: void 0,
                    classBindings: 0,
                    styleBindings: 0,
                  }
                );
              })(0, s ? r : r && r.parent, e, n, i, o));
            return (
              null === t.firstChild && (t.firstChild = l),
              null !== r &&
                (s
                  ? null == r.child && null !== l.parent && (r.child = l)
                  : null === r.next && ((r.next = l), (l.prev = r))),
              l
            );
          })(t, n, e, i, o)),
            (function jE() {
              return se.lFrame.inI18n;
            })() && (r.flags |= 32);
        else if (64 & r.type) {
          (r.type = e), (r.value = i), (r.attrs = o);
          const s = (function xs() {
            const t = se.lFrame,
              n = t.currentTNode;
            return t.isParent ? n : n.parent;
          })();
          r.injectorIndex = null === s ? -1 : s.injectorIndex;
        }
        return ni(r, !0), r;
      }
      function qs(t, n, e, i) {
        if (0 === e) return -1;
        const o = n.length;
        for (let r = 0; r < e; r++)
          n.push(i), t.blueprint.push(i), t.data.push(null);
        return o;
      }
      function ev(t, n, e, i, o) {
        const r = q1(n, Ts),
          s = Kt(),
          a = 2 & i;
        try {
          vo(-1), a && n.length > ve && J1(t, n, ve, !1), ti(a ? 2 : 0, o);
          const c = a ? r : null,
            u = yl(c);
          try {
            null !== c && (c.dirty = !1), e(i, o);
          } finally {
            vl(c, u);
          }
        } finally {
          a && null === n[Ts] && Z1(n, Ts), vo(s), ti(a ? 3 : 1, o);
        }
      }
      function Qp(t, n, e) {
        if (Ad(n)) {
          const i = Dn(null);
          try {
            const r = n.directiveEnd;
            for (let s = n.directiveStart; s < r; s++) {
              const a = t.data[s];
              a.contentQueries && a.contentQueries(1, e[s], s);
            }
          } finally {
            Dn(i);
          }
        }
      }
      function Jp(t, n, e) {
        j_() &&
          ((function Y3(t, n, e, i) {
            const o = e.directiveStart,
              r = e.directiveEnd;
            _o(e) &&
              (function iO(t, n, e) {
                const i = rn(n, t),
                  o = tv(e);
                let s = 16;
                e.signals ? (s = 4096) : e.onPush && (s = 64);
                const a = uc(
                  t,
                  cc(
                    t,
                    o,
                    null,
                    s,
                    i,
                    n,
                    null,
                    t[Ko].rendererFactory.createRenderer(i, e),
                    null,
                    null,
                    null
                  )
                );
                t[n.index] = a;
              })(n, e, t.data[o + e.componentOffset]),
              t.firstCreatePass || xl(e, n),
              Pt(i, n);
            const s = e.initialInputs;
            for (let a = o; a < r; a++) {
              const l = t.data[a],
                c = bo(n, t, a, e);
              Pt(c, n),
                null !== s && oO(0, a - o, c, l, 0, s),
                $n(l) && (hn(e.index, n)[it] = bo(n, t, a, e));
            }
          })(t, n, e, rn(e, n)),
          64 == (64 & e.flags) && sv(t, n, e));
      }
      function Xp(t, n, e = rn) {
        const i = n.localNames;
        if (null !== i) {
          let o = n.index + 1;
          for (let r = 0; r < i.length; r += 2) {
            const s = i[r + 1],
              a = -1 === s ? e(n, t) : t[s];
            t[o++] = a;
          }
        }
      }
      function tv(t) {
        const n = t.tView;
        return null === n || n.incompleteFirstPass
          ? (t.tView = eh(
              1,
              null,
              t.template,
              t.decls,
              t.vars,
              t.directiveDefs,
              t.pipeDefs,
              t.viewQuery,
              t.schemas,
              t.consts,
              t.id
            ))
          : n;
      }
      function eh(t, n, e, i, o, r, s, a, l, c, u) {
        const h = ve + i,
          m = h + o,
          _ = (function N3(t, n) {
            const e = [];
            for (let i = 0; i < n; i++) e.push(i < t ? null : de);
            return e;
          })(h, m),
          b = "function" == typeof c ? c() : c;
        return (_[$] = {
          type: t,
          blueprint: _,
          template: e,
          queries: null,
          viewQuery: a,
          declTNode: n,
          data: _.slice().fill(null, h),
          bindingStartIndex: h,
          expandoStartIndex: m,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof r ? r() : r,
          pipeRegistry: "function" == typeof s ? s() : s,
          firstChild: null,
          schemas: l,
          consts: b,
          incompleteFirstPass: !1,
          ssrId: u,
        });
      }
      let nv = (t) => null;
      function iv(t, n, e, i) {
        for (let o in t)
          if (t.hasOwnProperty(o)) {
            e = null === e ? {} : e;
            const r = t[o];
            null === i
              ? ov(e, n, o, r)
              : i.hasOwnProperty(o) && ov(e, n, i[o], r);
          }
        return e;
      }
      function ov(t, n, e, i) {
        t.hasOwnProperty(e) ? t[e].push(n, i) : (t[e] = [n, i]);
      }
      function th(t, n, e, i) {
        if (j_()) {
          const o = null === i ? null : { "": -1 },
            r = (function J3(t, n) {
              const e = t.directiveRegistry;
              let i = null,
                o = null;
              if (e)
                for (let r = 0; r < e.length; r++) {
                  const s = e[r];
                  if (a_(n, s.selectors, !1))
                    if ((i || (i = []), $n(s)))
                      if (null !== s.findHostDirectiveDefs) {
                        const a = [];
                        (o = o || new Map()),
                          s.findHostDirectiveDefs(s, a, o),
                          i.unshift(...a, s),
                          nh(t, n, a.length);
                      } else i.unshift(s), nh(t, n, 0);
                    else
                      (o = o || new Map()),
                        s.findHostDirectiveDefs?.(s, i, o),
                        i.push(s);
                }
              return null === i ? null : [i, o];
            })(t, e);
          let s, a;
          null === r ? (s = a = null) : ([s, a] = r),
            null !== s && rv(t, n, e, s, o, a),
            o &&
              (function X3(t, n, e) {
                if (n) {
                  const i = (t.localNames = []);
                  for (let o = 0; o < n.length; o += 2) {
                    const r = e[n[o + 1]];
                    if (null == r) throw new O(-301, !1);
                    i.push(n[o], r);
                  }
                }
              })(e, i, o);
        }
        e.mergedAttrs = ys(e.mergedAttrs, e.attrs);
      }
      function rv(t, n, e, i, o, r) {
        for (let c = 0; c < i.length; c++) Jd(xl(e, n), t, i[c].type);
        !(function tO(t, n, e) {
          (t.flags |= 1),
            (t.directiveStart = n),
            (t.directiveEnd = n + e),
            (t.providerIndexes = n);
        })(e, t.data.length, i.length);
        for (let c = 0; c < i.length; c++) {
          const u = i[c];
          u.providersResolver && u.providersResolver(u);
        }
        let s = !1,
          a = !1,
          l = qs(t, n, i.length, null);
        for (let c = 0; c < i.length; c++) {
          const u = i[c];
          (e.mergedAttrs = ys(e.mergedAttrs, u.hostAttrs)),
            nO(t, e, n, l, u),
            eO(l, u, o),
            null !== u.contentQueries && (e.flags |= 4),
            (null !== u.hostBindings ||
              null !== u.hostAttrs ||
              0 !== u.hostVars) &&
              (e.flags |= 64);
          const h = u.type.prototype;
          !s &&
            (h.ngOnChanges || h.ngOnInit || h.ngDoCheck) &&
            ((t.preOrderHooks ??= []).push(e.index), (s = !0)),
            !a &&
              (h.ngOnChanges || h.ngDoCheck) &&
              ((t.preOrderCheckHooks ??= []).push(e.index), (a = !0)),
            l++;
        }
        !(function U3(t, n, e) {
          const o = n.directiveEnd,
            r = t.data,
            s = n.attrs,
            a = [];
          let l = null,
            c = null;
          for (let u = n.directiveStart; u < o; u++) {
            const h = r[u],
              m = e ? e.get(h) : null,
              b = m ? m.outputs : null;
            (l = iv(h.inputs, u, l, m ? m.inputs : null)),
              (c = iv(h.outputs, u, c, b));
            const C = null === l || null === s || s_(n) ? null : rO(l, u, s);
            a.push(C);
          }
          null !== l &&
            (l.hasOwnProperty("class") && (n.flags |= 8),
            l.hasOwnProperty("style") && (n.flags |= 16)),
            (n.initialInputs = a),
            (n.inputs = l),
            (n.outputs = c);
        })(t, e, r);
      }
      function sv(t, n, e) {
        const i = e.directiveStart,
          o = e.directiveEnd,
          r = e.index,
          s = (function GE() {
            return se.lFrame.currentDirectiveIndex;
          })();
        try {
          vo(r);
          for (let a = i; a < o; a++) {
            const l = t.data[a],
              c = n[a];
            $d(a),
              (null !== l.hostBindings ||
                0 !== l.hostVars ||
                null !== l.hostAttrs) &&
                Q3(l, c);
          }
        } finally {
          vo(-1), $d(s);
        }
      }
      function Q3(t, n) {
        null !== t.hostBindings && t.hostBindings(1, n);
      }
      function nh(t, n, e) {
        (n.componentOffset = e), (t.components ??= []).push(n.index);
      }
      function eO(t, n, e) {
        if (e) {
          if (n.exportAs)
            for (let i = 0; i < n.exportAs.length; i++) e[n.exportAs[i]] = t;
          $n(n) && (e[""] = t);
        }
      }
      function nO(t, n, e, i, o) {
        t.data[i] = o;
        const r = o.factory || (o.factory = yo(o.type)),
          s = new Ms(r, $n(o), D);
        (t.blueprint[i] = s),
          (e[i] = s),
          (function q3(t, n, e, i, o) {
            const r = o.hostBindings;
            if (r) {
              let s = t.hostBindingOpCodes;
              null === s && (s = t.hostBindingOpCodes = []);
              const a = ~n.index;
              (function Z3(t) {
                let n = t.length;
                for (; n > 0; ) {
                  const e = t[--n];
                  if ("number" == typeof e && e < 0) return e;
                }
                return 0;
              })(s) != a && s.push(a),
                s.push(e, i, r);
            }
          })(t, n, i, qs(t, e, o.hostVars, de), o);
      }
      function oi(t, n, e, i, o, r) {
        const s = rn(t, n);
        !(function ih(t, n, e, i, o, r, s) {
          if (null == r) t.removeAttribute(n, o, e);
          else {
            const a = null == s ? ce(r) : s(r, i || "", o);
            t.setAttribute(n, o, a, e);
          }
        })(n[ue], s, r, t.value, e, i, o);
      }
      function oO(t, n, e, i, o, r) {
        const s = r[n];
        if (null !== s)
          for (let a = 0; a < s.length; ) av(i, e, s[a++], s[a++], s[a++]);
      }
      function av(t, n, e, i, o) {
        const r = Dn(null);
        try {
          const s = t.inputTransforms;
          null !== s && s.hasOwnProperty(i) && (o = s[i].call(n, o)),
            null !== t.setInput ? t.setInput(n, o, e, i) : (n[i] = o);
        } finally {
          Dn(r);
        }
      }
      function rO(t, n, e) {
        let i = null,
          o = 0;
        for (; o < e.length; ) {
          const r = e[o];
          if (0 !== r)
            if (5 !== r) {
              if ("number" == typeof r) break;
              if (t.hasOwnProperty(r)) {
                null === i && (i = []);
                const s = t[r];
                for (let a = 0; a < s.length; a += 2)
                  if (s[a] === n) {
                    i.push(r, s[a + 1], e[o + 1]);
                    break;
                  }
              }
              o += 2;
            } else o += 2;
          else o += 4;
        }
        return i;
      }
      function lv(t, n, e, i) {
        return [t, !0, !1, n, null, 0, i, e, null, null, null];
      }
      function cv(t, n) {
        const e = t.contentQueries;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) {
            const r = e[i + 1];
            if (-1 !== r) {
              const s = t.data[r];
              Ud(e[i]), s.contentQueries(2, n[r], r);
            }
          }
      }
      function uc(t, n) {
        return t[bs] ? (t[p_][zn] = n) : (t[bs] = n), (t[p_] = n), n;
      }
      function oh(t, n, e) {
        Ud(0);
        const i = Dn(null);
        try {
          n(t, e);
        } finally {
          Dn(i);
        }
      }
      function uv(t) {
        return t[Wo] || (t[Wo] = []);
      }
      function dv(t) {
        return t.cleanup || (t.cleanup = []);
      }
      function hv(t, n) {
        const e = t[zi],
          i = e ? e.get(wi, null) : null;
        i && i.handleError(n);
      }
      function rh(t, n, e, i, o) {
        for (let r = 0; r < e.length; ) {
          const s = e[r++],
            a = e[r++];
          av(t.data[s], n[s], i, a, o);
        }
      }
      function Si(t, n, e) {
        const i = wl(n, t);
        !(function By(t, n, e) {
          t.setValue(n, e);
        })(t[ue], i, e);
      }
      function sO(t, n) {
        const e = hn(n, t),
          i = e[$];
        !(function aO(t, n) {
          for (let e = n.length; e < t.blueprint.length; e++)
            n.push(t.blueprint[e]);
        })(i, e);
        const o = e[et];
        null !== o && null === e[_i] && (e[_i] = Hp(o, e[zi])), sh(i, e, e[it]);
      }
      function sh(t, n, e) {
        Gd(n);
        try {
          const i = t.viewQuery;
          null !== i && oh(1, i, e);
          const o = t.template;
          null !== o && ev(t, n, o, 1, e),
            t.firstCreatePass && (t.firstCreatePass = !1),
            t.staticContentQueries && cv(t, n),
            t.staticViewQueries && oh(2, t.viewQuery, e);
          const r = t.components;
          null !== r &&
            (function lO(t, n) {
              for (let e = 0; e < n.length; e++) sO(t, n[e]);
            })(n, r);
        } catch (i) {
          throw (
            (t.firstCreatePass &&
              ((t.incompleteFirstPass = !0), (t.firstCreatePass = !1)),
            i)
          );
        } finally {
          (n[pe] &= -5), Wd();
        }
      }
      let fv = (() => {
        class t {
          constructor() {
            (this.all = new Set()), (this.queue = new Map());
          }
          create(e, i, o) {
            const r = typeof Zone > "u" ? null : Zone.current,
              s = (function wE(t, n, e) {
                const i = Object.create(TE);
                e && (i.consumerAllowSignalWrites = !0),
                  (i.fn = t),
                  (i.schedule = n);
                const o = (s) => {
                  i.cleanupFn = s;
                };
                return (
                  (i.ref = {
                    notify: () => C_(i),
                    run: () => {
                      if (((i.dirty = !1), i.hasRun && !w_(i))) return;
                      i.hasRun = !0;
                      const s = yl(i);
                      try {
                        i.cleanupFn(), (i.cleanupFn = O_), i.fn(o);
                      } finally {
                        vl(i, s);
                      }
                    },
                    cleanup: () => i.cleanupFn(),
                  }),
                  i.ref
                );
              })(
                e,
                (c) => {
                  this.all.has(c) && this.queue.set(c, r);
                },
                o
              );
            let a;
            this.all.add(s), s.notify();
            const l = () => {
              s.cleanup(), a?.(), this.all.delete(s), this.queue.delete(s);
            };
            return (a = i?.onDestroy(l)), { destroy: l };
          }
          flush() {
            if (0 !== this.queue.size)
              for (const [e, i] of this.queue)
                this.queue.delete(e), i ? i.run(() => e.run()) : e.run();
          }
          get isQueueEmpty() {
            return 0 === this.queue.size;
          }
          static #e = (this.ɵprov = K({
            token: t,
            providedIn: "root",
            factory: () => new t(),
          }));
        }
        return t;
      })();
      function ah(t, n) {
        !n?.injector &&
          (function Up(t) {
            if (
              !qm() &&
              !(function j2() {
                return Uo;
              })()
            )
              throw new O(-203, !1);
          })();
        const e = n?.injector ?? U(Nt),
          i = e.get(fv),
          o = !0 !== n?.manualCleanup ? e.get(sc) : null;
        return i.create(t, o, !!n?.allowSignalWrites);
      }
      function dc(t, n, e) {
        let i = e ? t.styles : null,
          o = e ? t.classes : null,
          r = 0;
        if (null !== n)
          for (let s = 0; s < n.length; s++) {
            const a = n[s];
            "number" == typeof a
              ? (r = a)
              : 1 == r
              ? (o = gd(o, a))
              : 2 == r && (i = gd(i, a + ": " + n[++s] + ";"));
          }
        e ? (t.styles = i) : (t.stylesWithoutHost = i),
          e ? (t.classes = o) : (t.classesWithoutHost = o);
      }
      function Zs(t, n, e, i, o = !1) {
        for (; null !== e; ) {
          const r = n[e.index];
          null !== r && i.push(je(r)), Gt(r) && gv(r, i);
          const s = e.type;
          if (8 & s) Zs(t, n, e.child, i);
          else if (32 & s) {
            const a = up(e, n);
            let l;
            for (; (l = a()); ) i.push(l);
          } else if (16 & s) {
            const a = qy(n, e);
            if (Array.isArray(a)) i.push(...a);
            else {
              const l = Ns(n[ot]);
              Zs(l[$], l, a, i, !0);
            }
          }
          e = o ? e.projectionNext : e.next;
        }
        return i;
      }
      function gv(t, n) {
        for (let e = Mt; e < t.length; e++) {
          const i = t[e],
            o = i[$].firstChild;
          null !== o && Zs(i[$], i, o, n);
        }
        t[ei] !== t[et] && n.push(t[ei]);
      }
      function pc(t, n, e, i = !0) {
        const o = n[Ko],
          r = o.rendererFactory,
          s = o.afterRenderEventManager;
        r.begin?.(), s?.begin();
        try {
          mv(t, n, t.template, e);
        } catch (l) {
          throw (i && hv(n, l), l);
        } finally {
          r.end?.(), o.effectManager?.flush(), s?.end();
        }
      }
      function mv(t, n, e, i) {
        const o = n[pe];
        if (256 != (256 & o)) {
          n[Ko].effectManager?.flush(), Gd(n);
          try {
            V_(n),
              (function W_(t) {
                return (se.lFrame.bindingIndex = t);
              })(t.bindingStartIndex),
              null !== e && ev(t, n, e, 2, i);
            const s = 3 == (3 & o);
            if (s) {
              const c = t.preOrderCheckHooks;
              null !== c && Il(n, c, null);
            } else {
              const c = t.preOrderHooks;
              null !== c && Dl(n, c, 0, null), Kd(n, 0);
            }
            if (
              ((function uO(t) {
                for (let n = Py(t); null !== n; n = Ny(n)) {
                  if (!n[f_]) continue;
                  const e = n[Yo];
                  for (let i = 0; i < e.length; i++) {
                    kE(e[i]);
                  }
                }
              })(n),
              _v(n, 2),
              null !== t.contentQueries && cv(t, n),
              s)
            ) {
              const c = t.contentCheckHooks;
              null !== c && Il(n, c);
            } else {
              const c = t.contentHooks;
              null !== c && Dl(n, c, 1), Kd(n, 1);
            }
            !(function P3(t, n) {
              const e = t.hostBindingOpCodes;
              if (null === e) return;
              const i = q1(n, Ss);
              try {
                for (let o = 0; o < e.length; o++) {
                  const r = e[o];
                  if (r < 0) vo(~r);
                  else {
                    const s = r,
                      a = e[++o],
                      l = e[++o];
                    UE(a, s), (i.dirty = !1);
                    const c = yl(i);
                    try {
                      l(2, n[s]);
                    } finally {
                      vl(i, c);
                    }
                  }
                }
              } finally {
                null === n[Ss] && Z1(n, Ss), vo(-1);
              }
            })(t, n);
            const a = t.components;
            null !== a && vv(n, a, 0);
            const l = t.viewQuery;
            if ((null !== l && oh(2, l, i), s)) {
              const c = t.viewCheckHooks;
              null !== c && Il(n, c);
            } else {
              const c = t.viewHooks;
              null !== c && Dl(n, c, 2), Kd(n, 2);
            }
            !0 === t.firstUpdatePass && (t.firstUpdatePass = !1),
              (n[pe] &= -73),
              B_(n);
          } finally {
            Wd();
          }
        }
      }
      function _v(t, n) {
        for (let e = Py(t); null !== e; e = Ny(e))
          for (let i = Mt; i < e.length; i++) yv(e[i], n);
      }
      function dO(t, n, e) {
        yv(hn(n, t), e);
      }
      function yv(t, n) {
        if (
          !(function OE(t) {
            return 128 == (128 & t[pe]);
          })(t)
        )
          return;
        const e = t[$],
          i = t[pe];
        if ((80 & i && 0 === n) || 1024 & i || 2 === n)
          mv(e, t, e.template, t[it]);
        else if (t[vs] > 0) {
          _v(t, 1);
          const o = e.components;
          null !== o && vv(t, o, 1);
        }
      }
      function vv(t, n, e) {
        for (let i = 0; i < n.length; i++) dO(t, n[i], e);
      }
      class Ys {
        get rootNodes() {
          const n = this._lView,
            e = n[$];
          return Zs(e, n, e.firstChild, []);
        }
        constructor(n, e) {
          (this._lView = n),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[it];
        }
        set context(n) {
          this._lView[it] = n;
        }
        get destroyed() {
          return 256 == (256 & this._lView[pe]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const n = this._lView[qe];
            if (Gt(n)) {
              const e = n[8],
                i = e ? e.indexOf(this) : -1;
              i > -1 && (Ul(n, i), kl(e, i));
            }
            this._attachedToViewContainer = !1;
          }
          pp(this._lView[$], this._lView);
        }
        onDestroy(n) {
          z_(this._lView, n);
        }
        markForCheck() {
          Ks(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[pe] &= -129;
        }
        reattach() {
          this._lView[pe] |= 128;
        }
        detectChanges() {
          pc(this._lView[$], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new O(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function iM(t, n) {
              Bs(t, n, n[ue], 2, null, null);
            })(this._lView[$], this._lView);
        }
        attachToAppRef(n) {
          if (this._attachedToViewContainer) throw new O(902, !1);
          this._appRef = n;
        }
      }
      class pO extends Ys {
        constructor(n) {
          super(n), (this._view = n);
        }
        detectChanges() {
          const n = this._view;
          pc(n[$], n, n[it], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class bv extends vr {
        constructor(n) {
          super(), (this.ngModule = n);
        }
        resolveComponentFactory(n) {
          const e = be(n);
          return new Qs(e, this.ngModule);
        }
      }
      function Cv(t) {
        const n = [];
        for (let e in t)
          t.hasOwnProperty(e) && n.push({ propName: t[e], templateName: e });
        return n;
      }
      class fO {
        constructor(n, e) {
          (this.injector = n), (this.parentInjector = e);
        }
        get(n, e, i) {
          i = ul(i);
          const o = this.injector.get(n, jp, i);
          return o !== jp || e === jp ? o : this.parentInjector.get(n, e, i);
        }
      }
      class Qs extends I1 {
        get inputs() {
          const n = this.componentDef,
            e = n.inputTransforms,
            i = Cv(n.inputs);
          if (null !== e)
            for (const o of i)
              e.hasOwnProperty(o.propName) && (o.transform = e[o.propName]);
          return i;
        }
        get outputs() {
          return Cv(this.componentDef.outputs);
        }
        constructor(n, e) {
          super(),
            (this.componentDef = n),
            (this.ngModule = e),
            (this.componentType = n.type),
            (this.selector = (function iE(t) {
              return t.map(nE).join(",");
            })(n.selectors)),
            (this.ngContentSelectors = n.ngContentSelectors
              ? n.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        create(n, e, i, o) {
          let r = (o = o || this.ngModule) instanceof gn ? o : o?.injector;
          r &&
            null !== this.componentDef.getStandaloneInjector &&
            (r = this.componentDef.getStandaloneInjector(r) || r);
          const s = r ? new fO(n, r) : n,
            a = s.get(Ws, null);
          if (null === a) throw new O(407, !1);
          const h = {
              rendererFactory: a,
              sanitizer: s.get(p3, null),
              effectManager: s.get(fv, null),
              afterRenderEventManager: s.get(Zp, null),
            },
            m = a.createRenderer(null, this.componentDef),
            _ = this.componentDef.selectors[0][0] || "div",
            b = i
              ? (function V3(t, n, e, i) {
                  const r = i.get(U1, !1) || e === In.ShadowDom,
                    s = t.selectRootElement(n, r);
                  return (
                    (function B3(t) {
                      nv(t);
                    })(s),
                    s
                  );
                })(m, i, this.componentDef.encapsulation, s)
              : jl(
                  m,
                  _,
                  (function hO(t) {
                    const n = t.toLowerCase();
                    return "svg" === n ? "svg" : "math" === n ? "math" : null;
                  })(_)
                ),
            M = this.componentDef.signals
              ? 4608
              : this.componentDef.onPush
              ? 576
              : 528;
          let E = null;
          null !== b && (E = Hp(b, s, !0));
          const F = eh(0, null, null, 1, 0, null, null, null, null, null, null),
            V = cc(null, F, null, M, null, null, h, m, s, null, E);
          let Z, ge;
          Gd(V);
          try {
            const Ae = this.componentDef;
            let ze,
              Ke = null;
            Ae.findHostDirectiveDefs
              ? ((ze = []),
                (Ke = new Map()),
                Ae.findHostDirectiveDefs(Ae, ze, Ke),
                ze.push(Ae))
              : (ze = [Ae]);
            const Ft = (function mO(t, n) {
                const e = t[$],
                  i = ve;
                return (t[i] = n), Sr(e, i, 2, "#host", null);
              })(V, b),
              td = (function _O(t, n, e, i, o, r, s) {
                const a = o[$];
                !(function yO(t, n, e, i) {
                  for (const o of t)
                    n.mergedAttrs = ys(n.mergedAttrs, o.hostAttrs);
                  null !== n.mergedAttrs &&
                    (dc(n, n.mergedAttrs, !0), null !== e && Jy(i, e, n));
                })(i, t, n, s);
                let l = null;
                null !== n && (l = Hp(n, o[zi]));
                const c = r.rendererFactory.createRenderer(n, e);
                let u = 16;
                e.signals ? (u = 4096) : e.onPush && (u = 64);
                const h = cc(
                  o,
                  tv(e),
                  null,
                  u,
                  o[t.index],
                  t,
                  r,
                  c,
                  null,
                  null,
                  l
                );
                return (
                  a.firstCreatePass && nh(a, t, i.length - 1),
                  uc(o, h),
                  (o[t.index] = h)
                );
              })(Ft, b, Ae, ze, V, h, m);
            (ge = N_(F, ve)),
              b &&
                (function bO(t, n, e, i) {
                  if (i) Md(t, e, ["ng-version", h3.full]);
                  else {
                    const { attrs: o, classes: r } = (function oE(t) {
                      const n = [],
                        e = [];
                      let i = 1,
                        o = 2;
                      for (; i < t.length; ) {
                        let r = t[i];
                        if ("string" == typeof r)
                          2 === o
                            ? "" !== r && n.push(r, t[++i])
                            : 8 === o && e.push(r);
                        else {
                          if (!Hn(o)) break;
                          o = r;
                        }
                        i++;
                      }
                      return { attrs: n, classes: e };
                    })(n.selectors[0]);
                    o && Md(t, e, o),
                      r && r.length > 0 && Qy(t, e, r.join(" "));
                  }
                })(m, Ae, b, i),
              void 0 !== e &&
                (function CO(t, n, e) {
                  const i = (t.projection = []);
                  for (let o = 0; o < n.length; o++) {
                    const r = e[o];
                    i.push(null != r ? Array.from(r) : null);
                  }
                })(ge, this.ngContentSelectors, e),
              (Z = (function vO(t, n, e, i, o, r) {
                const s = At(),
                  a = o[$],
                  l = rn(s, o);
                rv(a, o, s, e, null, i);
                for (let u = 0; u < e.length; u++)
                  Pt(bo(o, a, s.directiveStart + u, s), o);
                sv(a, o, s), l && Pt(l, o);
                const c = bo(o, a, s.directiveStart + s.componentOffset, s);
                if (((t[it] = o[it] = c), null !== r))
                  for (const u of r) u(c, n);
                return Qp(a, s, t), c;
              })(td, Ae, ze, Ke, V, [wO])),
              sh(F, V, null);
          } finally {
            Wd();
          }
          return new gO(this.componentType, Z, br(ge, V), V, ge);
        }
      }
      class gO extends s3 {
        constructor(n, e, i, o, r) {
          super(),
            (this.location = i),
            (this._rootLView = o),
            (this._tNode = r),
            (this.previousInputValues = null),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new pO(o)),
            (this.componentType = n);
        }
        setInput(n, e) {
          const i = this._tNode.inputs;
          let o;
          if (null !== i && (o = i[n])) {
            if (
              ((this.previousInputValues ??= new Map()),
              this.previousInputValues.has(n) &&
                Object.is(this.previousInputValues.get(n), e))
            )
              return;
            const r = this._rootLView;
            rh(r[$], r, o, n, e),
              this.previousInputValues.set(n, e),
              Ks(hn(this._tNode.index, r));
          }
        }
        get injector() {
          return new qt(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(n) {
          this.hostView.onDestroy(n);
        }
      }
      function wO() {
        const t = At();
        Sl(R()[$], t);
      }
      function te(t) {
        let n = (function wv(t) {
            return Object.getPrototypeOf(t.prototype).constructor;
          })(t.type),
          e = !0;
        const i = [t];
        for (; n; ) {
          let o;
          if ($n(t)) o = n.ɵcmp || n.ɵdir;
          else {
            if (n.ɵcmp) throw new O(903, !1);
            o = n.ɵdir;
          }
          if (o) {
            if (e) {
              i.push(o);
              const s = t;
              (s.inputs = hc(t.inputs)),
                (s.inputTransforms = hc(t.inputTransforms)),
                (s.declaredInputs = hc(t.declaredInputs)),
                (s.outputs = hc(t.outputs));
              const a = o.hostBindings;
              a && DO(t, a);
              const l = o.viewQuery,
                c = o.contentQueries;
              if (
                (l && SO(t, l),
                c && IO(t, c),
                ol(t.inputs, o.inputs),
                ol(t.declaredInputs, o.declaredInputs),
                ol(t.outputs, o.outputs),
                null !== o.inputTransforms &&
                  (null === s.inputTransforms && (s.inputTransforms = {}),
                  ol(s.inputTransforms, o.inputTransforms)),
                $n(o) && o.data.animation)
              ) {
                const u = t.data;
                u.animation = (u.animation || []).concat(o.data.animation);
              }
            }
            const r = o.features;
            if (r)
              for (let s = 0; s < r.length; s++) {
                const a = r[s];
                a && a.ngInherit && a(t), a === te && (e = !1);
              }
          }
          n = Object.getPrototypeOf(n);
        }
        !(function TO(t) {
          let n = 0,
            e = null;
          for (let i = t.length - 1; i >= 0; i--) {
            const o = t[i];
            (o.hostVars = n += o.hostVars),
              (o.hostAttrs = ys(o.hostAttrs, (e = ys(e, o.hostAttrs))));
          }
        })(i);
      }
      function hc(t) {
        return t === Jn ? {} : t === De ? [] : t;
      }
      function SO(t, n) {
        const e = t.viewQuery;
        t.viewQuery = e
          ? (i, o) => {
              n(i, o), e(i, o);
            }
          : n;
      }
      function IO(t, n) {
        const e = t.contentQueries;
        t.contentQueries = e
          ? (i, o, r) => {
              n(i, o, r), e(i, o, r);
            }
          : n;
      }
      function DO(t, n) {
        const e = t.hostBindings;
        t.hostBindings = e
          ? (i, o) => {
              n(i, o), e(i, o);
            }
          : n;
      }
      function fc(t) {
        return (
          !!lh(t) &&
          (Array.isArray(t) || (!(t instanceof Map) && Symbol.iterator in t))
        );
      }
      function lh(t) {
        return null !== t && ("function" == typeof t || "object" == typeof t);
      }
      function ri(t, n, e) {
        return (t[n] = e);
      }
      function Js(t, n) {
        return t[n];
      }
      function Vt(t, n, e) {
        return !Object.is(t[n], e) && ((t[n] = e), !0);
      }
      function To(t, n, e, i) {
        const o = Vt(t, n, e);
        return Vt(t, n + 1, i) || o;
      }
      function gc(t, n, e, i, o) {
        const r = To(t, n, e, i);
        return Vt(t, n + 2, o) || r;
      }
      function Mn(t, n, e, i, o, r) {
        const s = To(t, n, e, i);
        return To(t, n + 2, o, r) || s;
      }
      function x(t, n, e, i) {
        const o = R();
        return Vt(o, er(), n) && (Ce(), oi(Ye(), o, t, n, e, i)), x;
      }
      function Er(t, n, e, i, o, r) {
        const a = To(
          t,
          (function vi() {
            return se.lFrame.bindingIndex;
          })(),
          e,
          o
        );
        return bi(2), a ? n + ce(e) + i + ce(o) + r : de;
      }
      function f(t, n, e, i, o, r, s, a) {
        const l = R(),
          c = Ce(),
          u = t + ve,
          h = c.firstCreatePass
            ? (function QO(t, n, e, i, o, r, s, a, l) {
                const c = n.consts,
                  u = Sr(n, t, 4, s || null, Ui(c, a));
                th(n, e, u, Ui(c, l)), Sl(n, u);
                const h = (u.tView = eh(
                  2,
                  u,
                  i,
                  o,
                  r,
                  n.directiveRegistry,
                  n.pipeRegistry,
                  null,
                  n.schemas,
                  c,
                  null
                ));
                return (
                  null !== n.queries &&
                    (n.queries.template(n, u),
                    (h.queries = n.queries.embeddedTView(u))),
                  u
                );
              })(u, c, l, n, e, i, o, r, s)
            : c.data[u];
        ni(h, !1);
        const m = Bv(c, l, h, t);
        Tl() && Wl(c, l, m, h),
          Pt(m, l),
          uc(l, (l[u] = lv(m, l, m, h))),
          gl(h) && Jp(c, l, h),
          null != s && Xp(l, h, a);
      }
      let Bv = function Hv(t, n, e, i) {
        return Gi(!0), n[ue].createComment("");
      };
      function rt(t) {
        return (function Jo(t, n) {
          return t[n];
        })(
          (function $E() {
            return se.lFrame.contextLView;
          })(),
          ve + t
        );
      }
      function d(t, n, e) {
        const i = R();
        return (
          Vt(i, er(), n) &&
            (function mn(t, n, e, i, o, r, s, a) {
              const l = rn(n, e);
              let u,
                c = n.inputs;
              !a && null != c && (u = c[i])
                ? (rh(t, e, u, i, o),
                  _o(n) &&
                    (function W3(t, n) {
                      const e = hn(n, t);
                      16 & e[pe] || (e[pe] |= 64);
                    })(e, n.index))
                : 3 & n.type &&
                  ((i = (function G3(t) {
                    return "class" === t
                      ? "className"
                      : "for" === t
                      ? "htmlFor"
                      : "formaction" === t
                      ? "formAction"
                      : "innerHtml" === t
                      ? "innerHTML"
                      : "readonly" === t
                      ? "readOnly"
                      : "tabindex" === t
                      ? "tabIndex"
                      : t;
                  })(i)),
                  (o = null != s ? s(o, n.value || "", i) : o),
                  r.setProperty(l, i, o));
            })(Ce(), Ye(), i, t, n, i[ue], e, !1),
          d
        );
      }
      function fh(t, n, e, i, o) {
        const s = o ? "class" : "style";
        rh(t, e, n.inputs[s], s, i);
      }
      function y(t, n, e, i) {
        const o = R(),
          r = Ce(),
          s = ve + t,
          a = o[ue],
          l = r.firstCreatePass
            ? (function tA(t, n, e, i, o, r) {
                const s = n.consts,
                  l = Sr(n, t, 2, i, Ui(s, o));
                return (
                  th(n, e, l, Ui(s, r)),
                  null !== l.attrs && dc(l, l.attrs, !1),
                  null !== l.mergedAttrs && dc(l, l.mergedAttrs, !0),
                  null !== n.queries && n.queries.elementStart(n, l),
                  l
                );
              })(s, r, o, n, e, i)
            : r.data[s],
          c = zv(r, o, l, a, n, t);
        o[s] = c;
        const u = gl(l);
        return (
          ni(l, !0),
          Jy(a, c, l),
          32 != (32 & l.flags) && Tl() && Wl(r, o, c, l),
          0 ===
            (function FE() {
              return se.lFrame.elementDepthCount;
            })() && Pt(c, o),
          (function LE() {
            se.lFrame.elementDepthCount++;
          })(),
          u && (Jp(r, o, l), Qp(r, l, o)),
          null !== i && Xp(o, l),
          y
        );
      }
      function v() {
        let t = At();
        Hd() ? zd() : ((t = t.parent), ni(t, !1));
        const n = t;
        (function NE(t) {
          return se.skipHydrationRootTNode === t;
        })(n) &&
          (function zE() {
            se.skipHydrationRootTNode = null;
          })(),
          (function PE() {
            se.lFrame.elementDepthCount--;
          })();
        const e = Ce();
        return (
          e.firstCreatePass && (Sl(e, t), Ad(t) && e.queries.elementEnd(t)),
          null != n.classesWithoutHost &&
            (function tx(t) {
              return 0 != (8 & t.flags);
            })(n) &&
            fh(e, n, R(), n.classesWithoutHost, !0),
          null != n.stylesWithoutHost &&
            (function nx(t) {
              return 0 != (16 & t.flags);
            })(n) &&
            fh(e, n, R(), n.stylesWithoutHost, !1),
          v
        );
      }
      function k(t, n, e, i) {
        return y(t, n, e, i), v(), k;
      }
      let zv = (t, n, e, i, o, r) => (
        Gi(!0),
        jl(
          i,
          o,
          (function ey() {
            return se.lFrame.currentNamespace;
          })()
        )
      );
      function H(t, n, e) {
        const i = R(),
          o = Ce(),
          r = t + ve,
          s = o.firstCreatePass
            ? (function oA(t, n, e, i, o) {
                const r = n.consts,
                  s = Ui(r, i),
                  a = Sr(n, t, 8, "ng-container", s);
                return (
                  null !== s && dc(a, s, !0),
                  th(n, e, a, Ui(r, o)),
                  null !== n.queries && n.queries.elementStart(n, a),
                  a
                );
              })(r, o, i, n, e)
            : o.data[r];
        ni(s, !0);
        const a = $v(o, i, s, t);
        return (
          (i[r] = a),
          Tl() && Wl(o, i, a, s),
          Pt(a, i),
          gl(s) && (Jp(o, i, s), Qp(o, s, i)),
          null != e && Xp(i, s),
          H
        );
      }
      function z() {
        let t = At();
        const n = Ce();
        return (
          Hd() ? zd() : ((t = t.parent), ni(t, !1)),
          n.firstCreatePass && (Sl(n, t), Ad(t) && n.queries.elementEnd(t)),
          z
        );
      }
      function j(t, n, e) {
        return H(t, n, e), z(), j;
      }
      let $v = (t, n, e, i) => (Gi(!0), dp(n[ue], ""));
      function N() {
        return R();
      }
      function na(t) {
        return !!t && "function" == typeof t.then;
      }
      function jv(t) {
        return !!t && "function" == typeof t.subscribe;
      }
      function A(t, n, e, i) {
        const o = R(),
          r = Ce(),
          s = At();
        return (
          (function Gv(t, n, e, i, o, r, s) {
            const a = gl(i),
              c = t.firstCreatePass && dv(t),
              u = n[it],
              h = uv(n);
            let m = !0;
            if (3 & i.type || s) {
              const C = rn(i, n),
                I = s ? s(C) : C,
                M = h.length,
                E = s ? (V) => s(je(V[i.index])) : i.index;
              let F = null;
              if (
                (!s &&
                  a &&
                  (F = (function aA(t, n, e, i) {
                    const o = t.cleanup;
                    if (null != o)
                      for (let r = 0; r < o.length - 1; r += 2) {
                        const s = o[r];
                        if (s === e && o[r + 1] === i) {
                          const a = n[Wo],
                            l = o[r + 2];
                          return a.length > l ? a[l] : null;
                        }
                        "string" == typeof s && (r += 2);
                      }
                    return null;
                  })(t, n, o, i.index)),
                null !== F)
              )
                ((F.__ngLastListenerFn__ || F).__ngNextListenerFn__ = r),
                  (F.__ngLastListenerFn__ = r),
                  (m = !1);
              else {
                r = Kv(i, n, u, r, !1);
                const V = e.listen(I, o, r);
                h.push(r, V), c && c.push(o, E, M, M + 1);
              }
            } else r = Kv(i, n, u, r, !1);
            const _ = i.outputs;
            let b;
            if (m && null !== _ && (b = _[o])) {
              const C = b.length;
              if (C)
                for (let I = 0; I < C; I += 2) {
                  const Z = n[b[I]][b[I + 1]].subscribe(r),
                    ge = h.length;
                  h.push(r, Z), c && c.push(o, i.index, ge, -(ge + 1));
                }
            }
          })(r, o, o[ue], s, t, n, i),
          A
        );
      }
      function Wv(t, n, e, i) {
        try {
          return ti(6, n, e), !1 !== e(i);
        } catch (o) {
          return hv(t, o), !1;
        } finally {
          ti(7, n, e);
        }
      }
      function Kv(t, n, e, i, o) {
        return function r(s) {
          if (s === Function) return i;
          Ks(t.componentOffset > -1 ? hn(t.index, n) : n);
          let l = Wv(n, e, i, s),
            c = r.__ngNextListenerFn__;
          for (; c; ) (l = Wv(n, e, c, s) && l), (c = c.__ngNextListenerFn__);
          return o && !1 === l && s.preventDefault(), l;
        };
      }
      function p(t = 1) {
        return (function KE(t) {
          return (se.lFrame.contextLView = (function qE(t, n) {
            for (; t > 0; ) (n = n[qo]), t--;
            return n;
          })(t, se.lFrame.contextLView))[it];
        })(t);
      }
      function lA(t, n) {
        let e = null;
        const i = (function J2(t) {
          const n = t.attrs;
          if (null != n) {
            const e = n.indexOf(5);
            if (!(1 & e)) return n[e + 1];
          }
          return null;
        })(t);
        for (let o = 0; o < n.length; o++) {
          const r = n[o];
          if ("*" !== r) {
            if (null === i ? a_(t, r, !0) : tE(i, r)) return o;
          } else e = o;
        }
        return e;
      }
      function Ii(t) {
        const n = R()[ot][Lt];
        if (!n.projection) {
          const i = (n.projection = Fs(t ? t.length : 1, null)),
            o = i.slice();
          let r = n.child;
          for (; null !== r; ) {
            const s = t ? lA(r, t) : 0;
            null !== s &&
              (o[s] ? (o[s].projectionNext = r) : (i[s] = r), (o[s] = r)),
              (r = r.next);
          }
        }
      }
      function jn(t, n = 0, e) {
        const i = R(),
          o = Ce(),
          r = Sr(o, ve + t, 16, null, e || null);
        null === r.projection && (r.projection = n),
          zd(),
          (!i[_i] || Xo()) &&
            32 != (32 & r.flags) &&
            (function dM(t, n, e) {
              Yy(n[ue], 0, n, e, fp(t, e, n), Uy(e.parent || n[Lt], e, n));
            })(o, i, r);
      }
      function vc(t, n) {
        return (t << 17) | (n << 2);
      }
      function qi(t) {
        return (t >> 17) & 32767;
      }
      function mh(t) {
        return 2 | t;
      }
      function So(t) {
        return (131068 & t) >> 2;
      }
      function _h(t, n) {
        return (-131069 & t) | (n << 2);
      }
      function yh(t) {
        return 1 | t;
      }
      function o0(t, n, e, i, o) {
        const r = t[e + 1],
          s = null === n;
        let a = i ? qi(r) : So(r),
          l = !1;
        for (; 0 !== a && (!1 === l || s); ) {
          const u = t[a + 1];
          fA(t[a], n) && ((l = !0), (t[a + 1] = i ? yh(u) : mh(u))),
            (a = i ? qi(u) : So(u));
        }
        l && (t[e + 1] = i ? mh(r) : yh(r));
      }
      function fA(t, n) {
        return (
          null === t ||
          null == n ||
          (Array.isArray(t) ? t[1] : t) === n ||
          (!(!Array.isArray(t) || "string" != typeof n) && lr(t, n) >= 0)
        );
      }
      const vt = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function r0(t) {
        return t.substring(vt.key, vt.keyEnd);
      }
      function gA(t) {
        return t.substring(vt.value, vt.valueEnd);
      }
      function s0(t, n) {
        const e = vt.textEnd;
        return e === n
          ? -1
          : ((n = vt.keyEnd =
              (function yA(t, n, e) {
                for (; n < e && t.charCodeAt(n) > 32; ) n++;
                return n;
              })(t, (vt.key = n), e)),
            Fr(t, n, e));
      }
      function a0(t, n) {
        const e = vt.textEnd;
        let i = (vt.key = Fr(t, n, e));
        return e === i
          ? -1
          : ((i = vt.keyEnd =
              (function vA(t, n, e) {
                let i;
                for (
                  ;
                  n < e &&
                  (45 === (i = t.charCodeAt(n)) ||
                    95 === i ||
                    ((-33 & i) >= 65 && (-33 & i) <= 90) ||
                    (i >= 48 && i <= 57));

                )
                  n++;
                return n;
              })(t, i, e)),
            (i = c0(t, i, e)),
            (i = vt.value = Fr(t, i, e)),
            (i = vt.valueEnd =
              (function bA(t, n, e) {
                let i = -1,
                  o = -1,
                  r = -1,
                  s = n,
                  a = s;
                for (; s < e; ) {
                  const l = t.charCodeAt(s++);
                  if (59 === l) return a;
                  34 === l || 39 === l
                    ? (a = s = u0(t, l, s, e))
                    : n === s - 4 &&
                      85 === r &&
                      82 === o &&
                      76 === i &&
                      40 === l
                    ? (a = s = u0(t, 41, s, e))
                    : l > 32 && (a = s),
                    (r = o),
                    (o = i),
                    (i = -33 & l);
                }
                return a;
              })(t, i, e)),
            c0(t, i, e));
      }
      function l0(t) {
        (vt.key = 0),
          (vt.keyEnd = 0),
          (vt.value = 0),
          (vt.valueEnd = 0),
          (vt.textEnd = t.length);
      }
      function Fr(t, n, e) {
        for (; n < e && t.charCodeAt(n) <= 32; ) n++;
        return n;
      }
      function c0(t, n, e, i) {
        return (n = Fr(t, n, e)) < e && n++, n;
      }
      function u0(t, n, e, i) {
        let o = -1,
          r = e;
        for (; r < i; ) {
          const s = t.charCodeAt(r++);
          if (s == n && 92 !== o) return r;
          o = 92 == s && 92 === o ? 0 : s;
        }
        throw new Error();
      }
      function Lr(t, n, e) {
        return Un(t, n, e, !1), Lr;
      }
      function On(t, n) {
        return Un(t, n, null, !0), On;
      }
      function bt(t) {
        Gn(h0, CA, t, !1);
      }
      function CA(t, n) {
        for (
          let e = (function _A(t) {
            return l0(t), a0(t, Fr(t, 0, vt.textEnd));
          })(n);
          e >= 0;
          e = a0(n, e)
        )
          h0(t, r0(n), gA(n));
      }
      function ne(t) {
        Gn(EA, si, t, !0);
      }
      function si(t, n) {
        for (
          let e = (function mA(t) {
            return l0(t), s0(t, Fr(t, 0, vt.textEnd));
          })(n);
          e >= 0;
          e = s0(n, e)
        )
          fn(t, r0(n), !0);
      }
      function Un(t, n, e, i) {
        const o = R(),
          r = Ce(),
          s = bi(2);
        r.firstUpdatePass && p0(r, t, s, i),
          n !== de &&
            Vt(o, s, n) &&
            f0(
              r,
              r.data[Kt()],
              o,
              o[ue],
              t,
              (o[s + 1] = (function MA(t, n) {
                return (
                  null == t ||
                    "" === t ||
                    ("string" == typeof n
                      ? (t += n)
                      : "object" == typeof t && (t = mt(Ki(t)))),
                  t
                );
              })(n, e)),
              i,
              s
            );
      }
      function Gn(t, n, e, i) {
        const o = Ce(),
          r = bi(2);
        o.firstUpdatePass && p0(o, null, r, i);
        const s = R();
        if (e !== de && Vt(s, r, e)) {
          const a = o.data[Kt()];
          if (m0(a, i) && !d0(o, r)) {
            let l = i ? a.classesWithoutHost : a.stylesWithoutHost;
            null !== l && (e = gd(l, e || "")), fh(o, a, s, e, i);
          } else
            !(function xA(t, n, e, i, o, r, s, a) {
              o === de && (o = De);
              let l = 0,
                c = 0,
                u = 0 < o.length ? o[0] : null,
                h = 0 < r.length ? r[0] : null;
              for (; null !== u || null !== h; ) {
                const m = l < o.length ? o[l + 1] : void 0,
                  _ = c < r.length ? r[c + 1] : void 0;
                let C,
                  b = null;
                u === h
                  ? ((l += 2), (c += 2), m !== _ && ((b = h), (C = _)))
                  : null === h || (null !== u && u < h)
                  ? ((l += 2), (b = u))
                  : ((c += 2), (b = h), (C = _)),
                  null !== b && f0(t, n, e, i, b, C, s, a),
                  (u = l < o.length ? o[l] : null),
                  (h = c < r.length ? r[c] : null);
              }
            })(
              o,
              a,
              s,
              s[ue],
              s[r + 1],
              (s[r + 1] = (function DA(t, n, e) {
                if (null == e || "" === e) return De;
                const i = [],
                  o = Ki(e);
                if (Array.isArray(o))
                  for (let r = 0; r < o.length; r++) t(i, o[r], !0);
                else if ("object" == typeof o)
                  for (const r in o) o.hasOwnProperty(r) && t(i, r, o[r]);
                else "string" == typeof o && n(i, o);
                return i;
              })(t, n, e)),
              i,
              r
            );
        }
      }
      function d0(t, n) {
        return n >= t.expandoStartIndex;
      }
      function p0(t, n, e, i) {
        const o = t.data;
        if (null === o[e + 1]) {
          const r = o[Kt()],
            s = d0(t, e);
          m0(r, i) && null === n && !s && (n = !1),
            (n = (function wA(t, n, e, i) {
              const o = (function jd(t) {
                const n = se.lFrame.currentDirectiveIndex;
                return -1 === n ? null : t[n];
              })(t);
              let r = i ? n.residualClasses : n.residualStyles;
              if (null === o)
                0 === (i ? n.classBindings : n.styleBindings) &&
                  ((e = ia((e = vh(null, t, n, e, i)), n.attrs, i)),
                  (r = null));
              else {
                const s = n.directiveStylingLast;
                if (-1 === s || t[s] !== o)
                  if (((e = vh(o, t, n, e, i)), null === r)) {
                    let l = (function TA(t, n, e) {
                      const i = e ? n.classBindings : n.styleBindings;
                      if (0 !== So(i)) return t[qi(i)];
                    })(t, n, i);
                    void 0 !== l &&
                      Array.isArray(l) &&
                      ((l = vh(null, t, n, l[1], i)),
                      (l = ia(l, n.attrs, i)),
                      (function SA(t, n, e, i) {
                        t[qi(e ? n.classBindings : n.styleBindings)] = i;
                      })(t, n, i, l));
                  } else
                    r = (function IA(t, n, e) {
                      let i;
                      const o = n.directiveEnd;
                      for (let r = 1 + n.directiveStylingLast; r < o; r++)
                        i = ia(i, t[r].hostAttrs, e);
                      return ia(i, n.attrs, e);
                    })(t, n, i);
              }
              return (
                void 0 !== r &&
                  (i ? (n.residualClasses = r) : (n.residualStyles = r)),
                e
              );
            })(o, r, n, i)),
            (function pA(t, n, e, i, o, r) {
              let s = r ? n.classBindings : n.styleBindings,
                a = qi(s),
                l = So(s);
              t[i] = e;
              let u,
                c = !1;
              if (
                (Array.isArray(e)
                  ? ((u = e[1]), (null === u || lr(e, u) > 0) && (c = !0))
                  : (u = e),
                o)
              )
                if (0 !== l) {
                  const m = qi(t[a + 1]);
                  (t[i + 1] = vc(m, a)),
                    0 !== m && (t[m + 1] = _h(t[m + 1], i)),
                    (t[a + 1] = (function uA(t, n) {
                      return (131071 & t) | (n << 17);
                    })(t[a + 1], i));
                } else
                  (t[i + 1] = vc(a, 0)),
                    0 !== a && (t[a + 1] = _h(t[a + 1], i)),
                    (a = i);
              else
                (t[i + 1] = vc(l, 0)),
                  0 === a ? (a = i) : (t[l + 1] = _h(t[l + 1], i)),
                  (l = i);
              c && (t[i + 1] = mh(t[i + 1])),
                o0(t, u, i, !0),
                o0(t, u, i, !1),
                (function hA(t, n, e, i, o) {
                  const r = o ? t.residualClasses : t.residualStyles;
                  null != r &&
                    "string" == typeof n &&
                    lr(r, n) >= 0 &&
                    (e[i + 1] = yh(e[i + 1]));
                })(n, u, t, i, r),
                (s = vc(a, l)),
                r ? (n.classBindings = s) : (n.styleBindings = s);
            })(o, r, n, e, s, i);
        }
      }
      function vh(t, n, e, i, o) {
        let r = null;
        const s = e.directiveEnd;
        let a = e.directiveStylingLast;
        for (
          -1 === a ? (a = e.directiveStart) : a++;
          a < s && ((r = n[a]), (i = ia(i, r.hostAttrs, o)), r !== t);

        )
          a++;
        return null !== t && (e.directiveStylingLast = a), i;
      }
      function ia(t, n, e) {
        const i = e ? 1 : 2;
        let o = -1;
        if (null !== n)
          for (let r = 0; r < n.length; r++) {
            const s = n[r];
            "number" == typeof s
              ? (o = s)
              : o === i &&
                (Array.isArray(t) || (t = void 0 === t ? [] : ["", t]),
                fn(t, s, !!e || n[++r]));
          }
        return void 0 === t ? null : t;
      }
      function h0(t, n, e) {
        fn(t, n, Ki(e));
      }
      function EA(t, n, e) {
        const i = String(n);
        "" !== i && !i.includes(" ") && fn(t, i, e);
      }
      function f0(t, n, e, i, o, r, s, a) {
        if (!(3 & n.type)) return;
        const l = t.data,
          c = l[a + 1],
          u = (function dA(t) {
            return 1 == (1 & t);
          })(c)
            ? g0(l, n, e, o, So(c), s)
            : void 0;
        bc(u) ||
          (bc(r) ||
            ((function cA(t) {
              return 2 == (2 & t);
            })(c) &&
              (r = g0(l, null, e, o, a, s))),
          (function hM(t, n, e, i, o) {
            if (n) o ? t.addClass(e, i) : t.removeClass(e, i);
            else {
              let r = -1 === i.indexOf("-") ? void 0 : Wi.DashCase;
              null == o
                ? t.removeStyle(e, i, r)
                : ("string" == typeof o &&
                    o.endsWith("!important") &&
                    ((o = o.slice(0, -10)), (r |= Wi.Important)),
                  t.setStyle(e, i, o, r));
            }
          })(i, s, wl(Kt(), e), o, r));
      }
      function g0(t, n, e, i, o, r) {
        const s = null === n;
        let a;
        for (; o > 0; ) {
          const l = t[o],
            c = Array.isArray(l),
            u = c ? l[1] : l,
            h = null === u;
          let m = e[o + 1];
          m === de && (m = h ? De : void 0);
          let _ = h ? tp(m, i) : u === i ? m : void 0;
          if ((c && !bc(_) && (_ = tp(l, i)), bc(_) && ((a = _), s))) return a;
          const b = t[o + 1];
          o = s ? qi(b) : So(b);
        }
        if (null !== n) {
          let l = r ? n.residualClasses : n.residualStyles;
          null != l && (a = tp(l, i));
        }
        return a;
      }
      function bc(t) {
        return void 0 !== t;
      }
      function m0(t, n) {
        return 0 != (t.flags & (n ? 8 : 16));
      }
      function B(t, n = "") {
        const e = R(),
          i = Ce(),
          o = t + ve,
          r = i.firstCreatePass ? Sr(i, o, 1, n, null) : i.data[o],
          s = _0(i, e, r, n, t);
        (e[o] = s), Tl() && Wl(i, e, s, r), ni(r, !1);
      }
      let _0 = (t, n, e, i, o) => (
        Gi(!0),
        (function $l(t, n) {
          return t.createText(n);
        })(n[ue], i)
      );
      function Le(t) {
        return we("", t, ""), Le;
      }
      function we(t, n, e) {
        const i = R(),
          o = (function Dr(t, n, e, i) {
            return Vt(t, er(), e) ? n + ce(e) + i : de;
          })(i, t, n, e);
        return o !== de && Si(i, Kt(), o), we;
      }
      function bh(t, n, e, i, o) {
        const r = R(),
          s = Er(r, t, n, e, i, o);
        return s !== de && Si(r, Kt(), s), bh;
      }
      const Nr = "en-US";
      let V0 = Nr;
      function Th(t, n, e, i, o) {
        if (((t = ae(t)), Array.isArray(t)))
          for (let r = 0; r < t.length; r++) Th(t[r], n, e, i, o);
        else {
          const r = Ce(),
            s = R(),
            a = At();
          let l = wo(t) ? t : ae(t.provide);
          const c = y1(t),
            u = 1048575 & a.providerIndexes,
            h = a.directiveStart,
            m = a.providerIndexes >> 20;
          if (wo(t) || !t.multi) {
            const _ = new Ms(c, o, D),
              b = Ih(l, n, o ? u : u + m, h);
            -1 === b
              ? (Jd(xl(a, s), r, l),
                Sh(r, t, n.length),
                n.push(l),
                a.directiveStart++,
                a.directiveEnd++,
                o && (a.providerIndexes += 1048576),
                e.push(_),
                s.push(_))
              : ((e[b] = _), (s[b] = _));
          } else {
            const _ = Ih(l, n, u + m, h),
              b = Ih(l, n, u, u + m),
              I = b >= 0 && e[b];
            if ((o && !I) || (!o && !(_ >= 0 && e[_]))) {
              Jd(xl(a, s), r, l);
              const M = (function Yk(t, n, e, i, o) {
                const r = new Ms(t, e, D);
                return (
                  (r.multi = []),
                  (r.index = n),
                  (r.componentProviders = 0),
                  cb(r, o, i && !e),
                  r
                );
              })(o ? Zk : qk, e.length, o, i, c);
              !o && I && (e[b].providerFactory = M),
                Sh(r, t, n.length, 0),
                n.push(l),
                a.directiveStart++,
                a.directiveEnd++,
                o && (a.providerIndexes += 1048576),
                e.push(M),
                s.push(M);
            } else Sh(r, t, _ > -1 ? _ : b, cb(e[o ? b : _], c, !o && i));
            !o && i && I && e[b].componentProviders++;
          }
        }
      }
      function Sh(t, n, e, i) {
        const o = wo(n),
          r = (function jM(t) {
            return !!t.useClass;
          })(n);
        if (o || r) {
          const l = (r ? ae(n.useClass) : n).prototype.ngOnDestroy;
          if (l) {
            const c = t.destroyHooks || (t.destroyHooks = []);
            if (!o && n.multi) {
              const u = c.indexOf(e);
              -1 === u ? c.push(e, [i, l]) : c[u + 1].push(i, l);
            } else c.push(e, l);
          }
        }
      }
      function cb(t, n, e) {
        return e && t.componentProviders++, t.multi.push(n) - 1;
      }
      function Ih(t, n, e, i) {
        for (let o = e; o < i; o++) if (n[o] === t) return o;
        return -1;
      }
      function qk(t, n, e, i) {
        return Dh(this.multi, []);
      }
      function Zk(t, n, e, i) {
        const o = this.multi;
        let r;
        if (this.providerFactory) {
          const s = this.providerFactory.componentProviders,
            a = bo(e, e[$], this.providerFactory.index, i);
          (r = a.slice(0, s)), Dh(o, r);
          for (let l = s; l < a.length; l++) r.push(a[l]);
        } else (r = []), Dh(o, r);
        return r;
      }
      function Dh(t, n) {
        for (let e = 0; e < t.length; e++) n.push((0, t[e])());
        return n;
      }
      function Ee(t, n = []) {
        return (e) => {
          e.providersResolver = (i, o) =>
            (function Kk(t, n, e) {
              const i = Ce();
              if (i.firstCreatePass) {
                const o = $n(t);
                Th(e, i.data, i.blueprint, o, !0),
                  Th(n, i.data, i.blueprint, o, !1);
              }
            })(i, o ? o(t) : t, n);
        };
      }
      class Do {}
      class ub {}
      class Eh extends Do {
        constructor(n, e, i) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new bv(this));
          const o = pn(n);
          (this._bootstrapComponents = Ti(o.bootstrap)),
            (this._r3Injector = A1(
              n,
              e,
              [
                { provide: Do, useValue: this },
                { provide: vr, useValue: this.componentFactoryResolver },
                ...i,
              ],
              mt(n),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(n));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const n = this._r3Injector;
          !n.destroyed && n.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(n) {
          this.destroyCbs.push(n);
        }
      }
      class xh extends ub {
        constructor(n) {
          super(), (this.moduleType = n);
        }
        create(n) {
          return new Eh(this.moduleType, n, []);
        }
      }
      class db extends Do {
        constructor(n) {
          super(),
            (this.componentFactoryResolver = new bv(this)),
            (this.instance = null);
          const e = new gr(
            [
              ...n.providers,
              { provide: Do, useValue: this },
              { provide: vr, useValue: this.componentFactoryResolver },
            ],
            n.parent || Xl(),
            n.debugName,
            new Set(["environment"])
          );
          (this.injector = e),
            n.runEnvironmentInitializers && e.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(n) {
          this.injector.onDestroy(n);
        }
      }
      function Mh(t, n, e = null) {
        return new db({
          providers: t,
          parent: n,
          debugName: e,
          runEnvironmentInitializers: !0,
        }).injector;
      }
      let Xk = (() => {
        class t {
          constructor(e) {
            (this._injector = e), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(e) {
            if (!e.standalone) return null;
            if (!this.cachedInjectors.has(e)) {
              const i = f1(0, e.type),
                o =
                  i.length > 0
                    ? Mh([i], this._injector, `Standalone[${e.type.name}]`)
                    : null;
              this.cachedInjectors.set(e, o);
            }
            return this.cachedInjectors.get(e);
          }
          ngOnDestroy() {
            try {
              for (const e of this.cachedInjectors.values())
                null !== e && e.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
          static #e = (this.ɵprov = K({
            token: t,
            providedIn: "environment",
            factory: () => new t(W(gn)),
          }));
        }
        return t;
      })();
      function Be(t) {
        t.getStandaloneInjector = (n) =>
          n.get(Xk).getOrCreateStandaloneInjector(t);
      }
      function An(t, n, e) {
        const i = Wt() + t,
          o = R();
        return o[i] === de ? ri(o, i, e ? n.call(e) : n()) : Js(o, i);
      }
      function Q(t, n, e, i) {
        return (function vb(t, n, e, i, o, r) {
          const s = n + e;
          return Vt(t, s, o)
            ? ri(t, s + 1, r ? i.call(r, o) : i(o))
            : ca(t, s + 1);
        })(R(), Wt(), t, n, e, i);
      }
      function Ze(t, n, e, i, o) {
        return (function bb(t, n, e, i, o, r, s) {
          const a = n + e;
          return To(t, a, o, r)
            ? ri(t, a + 2, s ? i.call(s, o, r) : i(o, r))
            : ca(t, a + 2);
        })(R(), Wt(), t, n, e, i, o);
      }
      function kn(t, n, e, i, o, r) {
        return (function Cb(t, n, e, i, o, r, s, a) {
          const l = n + e;
          return gc(t, l, o, r, s)
            ? ri(t, l + 3, a ? i.call(a, o, r, s) : i(o, r, s))
            : ca(t, l + 3);
        })(R(), Wt(), t, n, e, i, o, r);
      }
      function Ic(t, n, e, i, o, r, s) {
        return (function wb(t, n, e, i, o, r, s, a, l) {
          const c = n + e;
          return Mn(t, c, o, r, s, a)
            ? ri(t, c + 4, l ? i.call(l, o, r, s, a) : i(o, r, s, a))
            : ca(t, c + 4);
        })(R(), Wt(), t, n, e, i, o, r, s);
      }
      function Dc(t, n, e, i, o, r, s, a) {
        const l = Wt() + t,
          c = R(),
          u = Mn(c, l, e, i, o, r);
        return Vt(c, l + 4, s) || u
          ? ri(c, l + 5, a ? n.call(a, e, i, o, r, s) : n(e, i, o, r, s))
          : Js(c, l + 5);
      }
      function Vr(t, n, e, i, o, r, s, a, l) {
        const c = Wt() + t,
          u = R(),
          h = Mn(u, c, e, i, o, r);
        return To(u, c + 4, s, a) || h
          ? ri(u, c + 6, l ? n.call(l, e, i, o, r, s, a) : n(e, i, o, r, s, a))
          : Js(u, c + 6);
      }
      function Ah(t, n, e, i) {
        return (function Tb(t, n, e, i, o, r) {
          let s = n + e,
            a = !1;
          for (let l = 0; l < o.length; l++) Vt(t, s++, o[l]) && (a = !0);
          return a ? ri(t, s, i.apply(r, o)) : ca(t, s);
        })(R(), Wt(), t, n, e, i);
      }
      function ca(t, n) {
        const e = t[n];
        return e === de ? void 0 : e;
      }
      function mR() {
        return this._results[Symbol.iterator]();
      }
      class kh {
        static #e = Symbol.iterator;
        get changes() {
          return this._changes || (this._changes = new L());
        }
        constructor(n = !1) {
          (this._emitDistinctChangesOnly = n),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = kh.prototype;
          e[Symbol.iterator] || (e[Symbol.iterator] = mR);
        }
        get(n) {
          return this._results[n];
        }
        map(n) {
          return this._results.map(n);
        }
        filter(n) {
          return this._results.filter(n);
        }
        find(n) {
          return this._results.find(n);
        }
        reduce(n, e) {
          return this._results.reduce(n, e);
        }
        forEach(n) {
          this._results.forEach(n);
        }
        some(n) {
          return this._results.some(n);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(n, e) {
          const i = this;
          i.dirty = !1;
          const o = (function En(t) {
            return t.flat(Number.POSITIVE_INFINITY);
          })(n);
          (this._changesDetected = !(function mx(t, n, e) {
            if (t.length !== n.length) return !1;
            for (let i = 0; i < t.length; i++) {
              let o = t[i],
                r = n[i];
              if ((e && ((o = e(o)), (r = e(r))), r !== o)) return !1;
            }
            return !0;
          })(i._results, o, e)) &&
            ((i._results = o),
            (i.length = o.length),
            (i.last = o[this.length - 1]),
            (i.first = o[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      function yR(t, n, e, i = !0) {
        const o = n[$];
        if (
          ((function rM(t, n, e, i) {
            const o = Mt + i,
              r = e.length;
            i > 0 && (e[o - 1][zn] = n),
              i < r - Mt
                ? ((n[zn] = e[o]), gy(e, Mt + i, n))
                : (e.push(n), (n[zn] = null)),
              (n[qe] = e);
            const s = n[Cs];
            null !== s &&
              e !== s &&
              (function sM(t, n) {
                const e = t[Yo];
                n[ot] !== n[qe][qe][ot] && (t[f_] = !0),
                  null === e ? (t[Yo] = [n]) : e.push(n);
              })(s, n);
            const a = n[Xn];
            null !== a && a.insertView(t), (n[pe] |= 128);
          })(o, n, t, e),
          i)
        ) {
          const r = mp(e, t),
            s = n[ue],
            a = Gl(s, t[ei]);
          null !== a &&
            (function nM(t, n, e, i, o, r) {
              (i[et] = o), (i[Lt] = n), Bs(t, i, e, 1, o, r);
            })(o, t[Lt], s, n, a, r);
        }
      }
      let Wn = (() => {
        class t {
          static #e = (this.__NG_ELEMENT_ID__ = CR);
        }
        return t;
      })();
      const vR = Wn,
        bR = class extends vR {
          constructor(n, e, i) {
            super(),
              (this._declarationLView = n),
              (this._declarationTContainer = e),
              (this.elementRef = i);
          }
          get ssrId() {
            return this._declarationTContainer.tView?.ssrId || null;
          }
          createEmbeddedView(n, e) {
            return this.createEmbeddedViewImpl(n, e);
          }
          createEmbeddedViewImpl(n, e, i) {
            const o = (function _R(t, n, e, i) {
              const o = n.tView,
                a = cc(
                  t,
                  o,
                  e,
                  4096 & t[pe] ? 4096 : 16,
                  null,
                  n,
                  null,
                  null,
                  null,
                  i?.injector ?? null,
                  i?.hydrationInfo ?? null
                );
              a[Cs] = t[n.index];
              const c = t[Xn];
              return (
                null !== c && (a[Xn] = c.createEmbeddedView(o)), sh(o, a, e), a
              );
            })(this._declarationLView, this._declarationTContainer, n, {
              injector: e,
              hydrationInfo: i,
            });
            return new Ys(o);
          }
        };
      function CR() {
        return Ec(At(), R());
      }
      function Ec(t, n) {
        return 4 & t.type ? new bR(n, t, br(t, n)) : null;
      }
      let Rn = (() => {
        class t {
          static #e = (this.__NG_ELEMENT_ID__ = ER);
        }
        return t;
      })();
      function ER() {
        return Ob(At(), R());
      }
      const xR = Rn,
        xb = class extends xR {
          constructor(n, e, i) {
            super(),
              (this._lContainer = n),
              (this._hostTNode = e),
              (this._hostLView = i);
          }
          get element() {
            return br(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new qt(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const n = Ml(this._hostTNode, this._hostLView);
            if (Zd(n)) {
              const e = As(n, this._hostLView),
                i = Os(n);
              return new qt(e[$].data[i + 8], e);
            }
            return new qt(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(n) {
            const e = Mb(this._lContainer);
            return (null !== e && e[n]) || null;
          }
          get length() {
            return this._lContainer.length - Mt;
          }
          createEmbeddedView(n, e, i) {
            let o, r;
            "number" == typeof i
              ? (o = i)
              : null != i && ((o = i.index), (r = i.injector));
            const a = n.createEmbeddedViewImpl(e || {}, r, null);
            return this.insertImpl(a, o, false), a;
          }
          createComponent(n, e, i, o, r) {
            const s =
              n &&
              !(function Rs(t) {
                return "function" == typeof t;
              })(n);
            let a;
            if (s) a = e;
            else {
              const C = e || {};
              (a = C.index),
                (i = C.injector),
                (o = C.projectableNodes),
                (r = C.environmentInjector || C.ngModuleRef);
            }
            const l = s ? n : new Qs(be(n)),
              c = i || this.parentInjector;
            if (!r && null == l.ngModule) {
              const I = (s ? c : this.parentInjector).get(gn, null);
              I && (r = I);
            }
            be(l.componentType ?? {});
            const _ = l.create(c, o, null, r);
            return this.insertImpl(_.hostView, a, false), _;
          }
          insert(n, e) {
            return this.insertImpl(n, e, !1);
          }
          insertImpl(n, e, i) {
            const o = n._lView;
            if (
              (function AE(t) {
                return Gt(t[qe]);
              })(o)
            ) {
              const l = this.indexOf(n);
              if (-1 !== l) this.detach(l);
              else {
                const c = o[qe],
                  u = new xb(c, c[Lt], c[qe]);
                u.detach(u.indexOf(n));
              }
            }
            const s = this._adjustIndex(e),
              a = this._lContainer;
            return (
              yR(a, o, s, !i), n.attachToViewContainerRef(), gy(Rh(a), s, n), n
            );
          }
          move(n, e) {
            return this.insert(n, e);
          }
          indexOf(n) {
            const e = Mb(this._lContainer);
            return null !== e ? e.indexOf(n) : -1;
          }
          remove(n) {
            const e = this._adjustIndex(n, -1),
              i = Ul(this._lContainer, e);
            i && (kl(Rh(this._lContainer), e), pp(i[$], i));
          }
          detach(n) {
            const e = this._adjustIndex(n, -1),
              i = Ul(this._lContainer, e);
            return i && null != kl(Rh(this._lContainer), e) ? new Ys(i) : null;
          }
          _adjustIndex(n, e = 0) {
            return n ?? this.length + e;
          }
        };
      function Mb(t) {
        return t[8];
      }
      function Rh(t) {
        return t[8] || (t[8] = []);
      }
      function Ob(t, n) {
        let e;
        const i = n[t.index];
        return (
          Gt(i)
            ? (e = i)
            : ((e = lv(i, n, null, t)), (n[t.index] = e), uc(n, e)),
          Ab(e, n, t, i),
          new xb(e, t, n)
        );
      }
      let Ab = function kb(t, n, e, i) {
        if (t[ei]) return;
        let o;
        (o =
          8 & e.type
            ? je(i)
            : (function MR(t, n) {
                const e = t[ue],
                  i = e.createComment(""),
                  o = rn(n, t);
                return (
                  Co(
                    e,
                    Gl(e, o),
                    i,
                    (function uM(t, n) {
                      return t.nextSibling(n);
                    })(e, o),
                    !1
                  ),
                  i
                );
              })(n, e)),
          (t[ei] = o);
      };
      class Fh {
        constructor(n) {
          (this.queryList = n), (this.matches = null);
        }
        clone() {
          return new Fh(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Lh {
        constructor(n = []) {
          this.queries = n;
        }
        createEmbeddedView(n) {
          const e = n.queries;
          if (null !== e) {
            const i =
                null !== n.contentQueries ? n.contentQueries[0] : e.length,
              o = [];
            for (let r = 0; r < i; r++) {
              const s = e.getByIndex(r);
              o.push(this.queries[s.indexInDeclarationView].clone());
            }
            return new Lh(o);
          }
          return null;
        }
        insertView(n) {
          this.dirtyQueriesWithMatches(n);
        }
        detachView(n) {
          this.dirtyQueriesWithMatches(n);
        }
        dirtyQueriesWithMatches(n) {
          for (let e = 0; e < this.queries.length; e++)
            null !== Nb(n, e).matches && this.queries[e].setDirty();
        }
      }
      class Rb {
        constructor(n, e, i = null) {
          (this.predicate = n), (this.flags = e), (this.read = i);
        }
      }
      class Ph {
        constructor(n = []) {
          this.queries = n;
        }
        elementStart(n, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(n, e);
        }
        elementEnd(n) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(n);
        }
        embeddedTView(n) {
          let e = null;
          for (let i = 0; i < this.length; i++) {
            const o = null !== e ? e.length : 0,
              r = this.getByIndex(i).embeddedTView(n, o);
            r &&
              ((r.indexInDeclarationView = i),
              null !== e ? e.push(r) : (e = [r]));
          }
          return null !== e ? new Ph(e) : null;
        }
        template(n, e) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(n, e);
        }
        getByIndex(n) {
          return this.queries[n];
        }
        get length() {
          return this.queries.length;
        }
        track(n) {
          this.queries.push(n);
        }
      }
      class Nh {
        constructor(n, e = -1) {
          (this.metadata = n),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(n, e) {
          this.isApplyingToNode(e) && this.matchTNode(n, e);
        }
        elementEnd(n) {
          this._declarationNodeIndex === n.index &&
            (this._appliesToNextNode = !1);
        }
        template(n, e) {
          this.elementStart(n, e);
        }
        embeddedTView(n, e) {
          return this.isApplyingToNode(n)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-n.index, e),
              new Nh(this.metadata))
            : null;
        }
        isApplyingToNode(n) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let i = n.parent;
            for (; null !== i && 8 & i.type && i.index !== e; ) i = i.parent;
            return e === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(n, e) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let o = 0; o < i.length; o++) {
              const r = i[o];
              this.matchTNodeWithReadOption(n, e, kR(e, r)),
                this.matchTNodeWithReadOption(n, e, Ol(e, n, r, !1, !1));
            }
          else
            i === Wn
              ? 4 & e.type && this.matchTNodeWithReadOption(n, e, -1)
              : this.matchTNodeWithReadOption(n, e, Ol(e, n, i, !1, !1));
        }
        matchTNodeWithReadOption(n, e, i) {
          if (null !== i) {
            const o = this.metadata.read;
            if (null !== o)
              if (o === Fe || o === Rn || (o === Wn && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const r = Ol(e, n, o, !1, !1);
                null !== r && this.addMatch(e.index, r);
              }
            else this.addMatch(e.index, i);
          }
        }
        addMatch(n, e) {
          null === this.matches
            ? (this.matches = [n, e])
            : this.matches.push(n, e);
        }
      }
      function kR(t, n) {
        const e = t.localNames;
        if (null !== e)
          for (let i = 0; i < e.length; i += 2) if (e[i] === n) return e[i + 1];
        return null;
      }
      function FR(t, n, e, i) {
        return -1 === e
          ? (function RR(t, n) {
              return 11 & t.type ? br(t, n) : 4 & t.type ? Ec(t, n) : null;
            })(n, t)
          : -2 === e
          ? (function LR(t, n, e) {
              return e === Fe
                ? br(n, t)
                : e === Wn
                ? Ec(n, t)
                : e === Rn
                ? Ob(n, t)
                : void 0;
            })(t, n, i)
          : bo(t, t[$], e, n);
      }
      function Fb(t, n, e, i) {
        const o = n[Xn].queries[i];
        if (null === o.matches) {
          const r = t.data,
            s = e.matches,
            a = [];
          for (let l = 0; l < s.length; l += 2) {
            const c = s[l];
            a.push(c < 0 ? null : FR(n, r[c], s[l + 1], e.metadata.read));
          }
          o.matches = a;
        }
        return o.matches;
      }
      function Vh(t, n, e, i) {
        const o = t.queries.getByIndex(e),
          r = o.matches;
        if (null !== r) {
          const s = Fb(t, n, o, e);
          for (let a = 0; a < r.length; a += 2) {
            const l = r[a];
            if (l > 0) i.push(s[a / 2]);
            else {
              const c = r[a + 1],
                u = n[-l];
              for (let h = Mt; h < u.length; h++) {
                const m = u[h];
                m[Cs] === m[qe] && Vh(m[$], m, c, i);
              }
              if (null !== u[Yo]) {
                const h = u[Yo];
                for (let m = 0; m < h.length; m++) {
                  const _ = h[m];
                  Vh(_[$], _, c, i);
                }
              }
            }
          }
        }
        return i;
      }
      function J(t) {
        const n = R(),
          e = Ce(),
          i = q_();
        Ud(i + 1);
        const o = Nb(e, i);
        if (
          t.dirty &&
          (function ME(t) {
            return 4 == (4 & t[pe]);
          })(n) ===
            (2 == (2 & o.metadata.flags))
        ) {
          if (null === o.matches) t.reset([]);
          else {
            const r = o.crossesNgTemplate ? Vh(e, n, i, []) : Fb(e, n, o, i);
            t.reset(r, u3), t.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function me(t, n, e) {
        const i = Ce();
        i.firstCreatePass &&
          (Pb(i, new Rb(t, n, e), -1),
          2 == (2 & n) && (i.staticViewQueries = !0)),
          Lb(i, R(), n);
      }
      function kt(t, n, e, i) {
        const o = Ce();
        if (o.firstCreatePass) {
          const r = At();
          Pb(o, new Rb(n, e, i), r.index),
            (function NR(t, n) {
              const e = t.contentQueries || (t.contentQueries = []);
              n !== (e.length ? e[e.length - 1] : -1) &&
                e.push(t.queries.length - 1, n);
            })(o, t),
            2 == (2 & e) && (o.staticContentQueries = !0);
        }
        Lb(o, R(), e);
      }
      function X() {
        return (function PR(t, n) {
          return t[Xn].queries[n].queryList;
        })(R(), q_());
      }
      function Lb(t, n, e) {
        const i = new kh(4 == (4 & e));
        (function $3(t, n, e, i) {
          const o = uv(n);
          o.push(e), t.firstCreatePass && dv(t).push(i, o.length - 1);
        })(t, n, i, i.destroy),
          null === n[Xn] && (n[Xn] = new Lh()),
          n[Xn].queries.push(new Fh(i));
      }
      function Pb(t, n, e) {
        null === t.queries && (t.queries = new Ph()),
          t.queries.track(new Nh(n, e));
      }
      function Nb(t, n) {
        return t.queries.getByIndex(n);
      }
      function Yt(t, n) {
        return Ec(t, n);
      }
      const Uh = new G("Application Initializer");
      let Gh = (() => {
          class t {
            constructor() {
              (this.initialized = !1),
                (this.done = !1),
                (this.donePromise = new Promise((e, i) => {
                  (this.resolve = e), (this.reject = i);
                })),
                (this.appInits = U(Uh, { optional: !0 }) ?? []);
            }
            runInitializers() {
              if (this.initialized) return;
              const e = [];
              for (const o of this.appInits) {
                const r = o();
                if (na(r)) e.push(r);
                else if (jv(r)) {
                  const s = new Promise((a, l) => {
                    r.subscribe({ complete: a, error: l });
                  });
                  e.push(s);
                }
              }
              const i = () => {
                (this.done = !0), this.resolve();
              };
              Promise.all(e)
                .then(() => {
                  i();
                })
                .catch((o) => {
                  this.reject(o);
                }),
                0 === e.length && i(),
                (this.initialized = !0);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        eC = (() => {
          class t {
            log(e) {
              console.log(e);
            }
            warn(e) {
              console.warn(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: t.ɵfac,
              providedIn: "platform",
            }));
          }
          return t;
        })();
      const Di = new G("LocaleId", {
        providedIn: "root",
        factory: () =>
          U(Di, ye.Optional | ye.SkipSelf) ||
          (function o4() {
            return (typeof $localize < "u" && $localize.locale) || Nr;
          })(),
      });
      let Oc = (() => {
        class t {
          constructor() {
            (this.taskId = 0),
              (this.pendingTasks = new Set()),
              (this.hasPendingTasks = new wn(!1));
          }
          add() {
            this.hasPendingTasks.next(!0);
            const e = this.taskId++;
            return this.pendingTasks.add(e), e;
          }
          remove(e) {
            this.pendingTasks.delete(e),
              0 === this.pendingTasks.size && this.hasPendingTasks.next(!1);
          }
          ngOnDestroy() {
            this.pendingTasks.clear(), this.hasPendingTasks.next(!1);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      class a4 {
        constructor(n, e) {
          (this.ngModuleFactory = n), (this.componentFactories = e);
        }
      }
      let tC = (() => {
        class t {
          compileModuleSync(e) {
            return new xh(e);
          }
          compileModuleAsync(e) {
            return Promise.resolve(this.compileModuleSync(e));
          }
          compileModuleAndAllComponentsSync(e) {
            const i = this.compileModuleSync(e),
              r = Ti(pn(e).declarations).reduce((s, a) => {
                const l = be(a);
                return l && s.push(new Qs(l)), s;
              }, []);
            return new a4(i, r);
          }
          compileModuleAndAllComponentsAsync(e) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(e));
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const rC = new G(""),
        kc = new G("");
      let Yh,
        qh = (() => {
          class t {
            constructor(e, i, o) {
              (this._ngZone = e),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Yh ||
                  ((function M4(t) {
                    Yh = t;
                  })(o),
                  o.addToWindow(i)),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      _e.assertNotInAngularZone(),
                        queueMicrotask(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                queueMicrotask(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(e) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, i, o) {
              let r = -1;
              i &&
                i > 0 &&
                (r = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (s) => s.timeoutId !== r
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: e, timeoutId: r, updateCb: o });
            }
            whenStable(e, i, o) {
              if (o && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(e, i, o), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(e) {
              this.registry.registerApplication(e, this);
            }
            unregisterApplication(e) {
              this.registry.unregisterApplication(e);
            }
            findProviders(e, i, o) {
              return [];
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(W(_e), W(Zh), W(kc));
            });
            static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
          }
          return t;
        })(),
        Zh = (() => {
          class t {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(e, i) {
              this._applications.set(e, i);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, i = !0) {
              return Yh?.findTestabilityInTree(this, e, i) ?? null;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: t.ɵfac,
              providedIn: "platform",
            }));
          }
          return t;
        })(),
        Zi = null;
      const sC = new G("AllowMultipleToken"),
        Qh = new G("PlatformDestroyListeners"),
        Jh = new G("appBootstrapListener");
      class lC {
        constructor(n, e) {
          (this.name = n), (this.token = e);
        }
      }
      function uC(t, n, e = []) {
        const i = `Platform: ${n}`,
          o = new G(i);
        return (r = []) => {
          let s = Xh();
          if (!s || s.injector.get(sC, !1)) {
            const a = [...e, ...r, { provide: o, useValue: !0 }];
            t
              ? t(a)
              : (function k4(t) {
                  if (Zi && !Zi.get(sC, !1)) throw new O(400, !1);
                  (function aC() {
                    !(function _E(t) {
                      D_ = t;
                    })(() => {
                      throw new O(600, !1);
                    });
                  })(),
                    (Zi = t);
                  const n = t.get(pC);
                  (function cC(t) {
                    t.get(v1, null)?.forEach((e) => e());
                  })(t);
                })(
                  (function dC(t = [], n) {
                    return Nt.create({
                      name: n,
                      providers: [
                        { provide: Mp, useValue: "platform" },
                        { provide: Qh, useValue: new Set([() => (Zi = null)]) },
                        ...t,
                      ],
                    });
                  })(a, i)
                );
          }
          return (function F4(t) {
            const n = Xh();
            if (!n) throw new O(401, !1);
            return n;
          })();
        };
      }
      function Xh() {
        return Zi?.get(pC) ?? null;
      }
      let pC = (() => {
        class t {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, i) {
            const o = (function L4(t = "zone.js", n) {
              return "noop" === t ? new D3() : "zone.js" === t ? new _e(n) : t;
            })(
              i?.ngZone,
              (function hC(t) {
                return {
                  enableLongStackTrace: !1,
                  shouldCoalesceEventChangeDetection: t?.eventCoalescing ?? !1,
                  shouldCoalesceRunChangeDetection: t?.runCoalescing ?? !1,
                };
              })({
                eventCoalescing: i?.ngZoneEventCoalescing,
                runCoalescing: i?.ngZoneRunCoalescing,
              })
            );
            return o.run(() => {
              const r = (function Jk(t, n, e) {
                  return new Eh(t, n, e);
                })(
                  e.moduleType,
                  this.injector,
                  (function yC(t) {
                    return [
                      { provide: _e, useFactory: t },
                      {
                        provide: js,
                        multi: !0,
                        useFactory: () => {
                          const n = U(N4, { optional: !0 });
                          return () => n.initialize();
                        },
                      },
                      { provide: _C, useFactory: P4 },
                      { provide: P1, useFactory: N1 },
                    ];
                  })(() => o)
                ),
                s = r.injector.get(wi, null);
              return (
                o.runOutsideAngular(() => {
                  const a = o.onError.subscribe({
                    next: (l) => {
                      s.handleError(l);
                    },
                  });
                  r.onDestroy(() => {
                    Rc(this._modules, r), a.unsubscribe();
                  });
                }),
                (function fC(t, n, e) {
                  try {
                    const i = e();
                    return na(i)
                      ? i.catch((o) => {
                          throw (
                            (n.runOutsideAngular(() => t.handleError(o)), o)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (n.runOutsideAngular(() => t.handleError(i)), i);
                  }
                })(s, o, () => {
                  const a = r.injector.get(Gh);
                  return (
                    a.runInitializers(),
                    a.donePromise.then(
                      () => (
                        (function B0(t) {
                          Sn(t, "Expected localeId to be defined"),
                            "string" == typeof t &&
                              (V0 = t.toLowerCase().replace(/_/g, "-"));
                        })(r.injector.get(Di, Nr) || Nr),
                        this._moduleDoBootstrap(r),
                        r
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, i = []) {
            const o = gC({}, i);
            return (function O4(t, n, e) {
              const i = new xh(e);
              return Promise.resolve(i);
            })(0, 0, e).then((r) => this.bootstrapModuleFactory(r, o));
          }
          _moduleDoBootstrap(e) {
            const i = e.injector.get(Yi);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((o) => i.bootstrap(o));
            else {
              if (!e.instance.ngDoBootstrap) throw new O(-403, !1);
              e.instance.ngDoBootstrap(i);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new O(404, !1);
            this._modules.slice().forEach((i) => i.destroy()),
              this._destroyListeners.forEach((i) => i());
            const e = this._injector.get(Qh, null);
            e && (e.forEach((i) => i()), e.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Nt));
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "platform",
          }));
        }
        return t;
      })();
      function gC(t, n) {
        return Array.isArray(n) ? n.reduce(gC, t) : { ...t, ...n };
      }
      let Yi = (() => {
        class t {
          constructor() {
            (this._bootstrapListeners = []),
              (this._runningTick = !1),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this._views = []),
              (this.internalErrorHandler = U(_C)),
              (this.zoneIsStable = U(P1)),
              (this.componentTypes = []),
              (this.components = []),
              (this.isStable = U(Oc).hasPendingTasks.pipe(
                Tn((e) => (e ? oe(!1) : this.zoneIsStable)),
                (function x2(t, n = Vi) {
                  return (
                    (t = t ?? M2),
                    ft((e, i) => {
                      let o,
                        r = !0;
                      e.subscribe(
                        ut(i, (s) => {
                          const a = n(s);
                          (r || !t(o, a)) && ((r = !1), (o = a), i.next(s));
                        })
                      );
                    })
                  );
                })(),
                Um()
              )),
              (this._injector = U(gn));
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(e, i) {
            const o = e instanceof I1;
            if (!this._injector.get(Gh).done)
              throw (
                (!o &&
                  (function Go(t) {
                    const n = be(t) || xt(t) || Ut(t);
                    return null !== n && n.standalone;
                  })(e),
                new O(405, !1))
              );
            let s;
            (s = o ? e : this._injector.get(vr).resolveComponentFactory(e)),
              this.componentTypes.push(s.componentType);
            const a = (function A4(t) {
                return t.isBoundToModule;
              })(s)
                ? void 0
                : this._injector.get(Do),
              c = s.create(Nt.NULL, [], i || s.selector, a),
              u = c.location.nativeElement,
              h = c.injector.get(rC, null);
            return (
              h?.registerApplication(u),
              c.onDestroy(() => {
                this.detachView(c.hostView),
                  Rc(this.components, c),
                  h?.unregisterApplication(u);
              }),
              this._loadComponent(c),
              c
            );
          }
          tick() {
            if (this._runningTick) throw new O(101, !1);
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
            } catch (e) {
              this.internalErrorHandler(e);
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const i = e;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(e) {
            const i = e;
            Rc(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView), this.tick(), this.components.push(e);
            const i = this._injector.get(Jh, []);
            i.push(...this._bootstrapListeners), i.forEach((o) => o(e));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((e) => e()),
                  this._views.slice().forEach((e) => e.destroy());
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(e) {
            return (
              this._destroyListeners.push(e),
              () => Rc(this._destroyListeners, e)
            );
          }
          destroy() {
            if (this._destroyed) throw new O(406, !1);
            const e = this._injector;
            e.destroy && !e.destroyed && e.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function Rc(t, n) {
        const e = t.indexOf(n);
        e > -1 && t.splice(e, 1);
      }
      const _C = new G("", {
        providedIn: "root",
        factory: () => U(wi).handleError.bind(void 0),
      });
      function P4() {
        const t = U(_e),
          n = U(wi);
        return (e) => t.runOutsideAngular(() => n.handleError(e));
      }
      let N4 = (() => {
        class t {
          constructor() {
            (this.zone = U(_e)), (this.applicationRef = U(Yi));
          }
          initialize() {
            this._onMicrotaskEmptySubscription ||
              (this._onMicrotaskEmptySubscription =
                this.zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this.zone.run(() => {
                      this.applicationRef.tick();
                    });
                  },
                }));
          }
          ngOnDestroy() {
            this._onMicrotaskEmptySubscription?.unsubscribe();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      let Ct = (() => {
        class t {
          static #e = (this.__NG_ELEMENT_ID__ = B4);
        }
        return t;
      })();
      function B4(t) {
        return (function H4(t, n, e) {
          if (_o(t) && !e) {
            const i = hn(t.index, n);
            return new Ys(i, i);
          }
          return 47 & t.type ? new Ys(n[ot], n) : null;
        })(At(), R(), 16 == (16 & t));
      }
      class wC {
        constructor() {}
        supports(n) {
          return fc(n);
        }
        create(n) {
          return new W4(n);
        }
      }
      const G4 = (t, n) => n;
      class W4 {
        constructor(n) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = n || G4);
        }
        forEachItem(n) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) n(e);
        }
        forEachOperation(n) {
          let e = this._itHead,
            i = this._removalsHead,
            o = 0,
            r = null;
          for (; e || i; ) {
            const s = !i || (e && e.currentIndex < SC(i, o, r)) ? e : i,
              a = SC(s, o, r),
              l = s.currentIndex;
            if (s === i) o--, (i = i._nextRemoved);
            else if (((e = e._next), null == s.previousIndex)) o++;
            else {
              r || (r = []);
              const c = a - o,
                u = l - o;
              if (c != u) {
                for (let m = 0; m < c; m++) {
                  const _ = m < r.length ? r[m] : (r[m] = 0),
                    b = _ + m;
                  u <= b && b < c && (r[m] = _ + 1);
                }
                r[s.previousIndex] = u - c;
              }
            }
            a !== l && n(s, a, l);
          }
        }
        forEachPreviousItem(n) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) n(e);
        }
        forEachAddedItem(n) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e);
        }
        forEachMovedItem(n) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) n(e);
        }
        forEachRemovedItem(n) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e);
        }
        forEachIdentityChange(n) {
          let e;
          for (
            e = this._identityChangesHead;
            null !== e;
            e = e._nextIdentityChange
          )
            n(e);
        }
        diff(n) {
          if ((null == n && (n = []), !fc(n))) throw new O(900, !1);
          return this.check(n) ? this : null;
        }
        onDestroy() {}
        check(n) {
          this._reset();
          let o,
            r,
            s,
            e = this._itHead,
            i = !1;
          if (Array.isArray(n)) {
            this.length = n.length;
            for (let a = 0; a < this.length; a++)
              (r = n[a]),
                (s = this._trackByFn(a, r)),
                null !== e && Object.is(e.trackById, s)
                  ? (i && (e = this._verifyReinsertion(e, r, s, a)),
                    Object.is(e.item, r) || this._addIdentityChange(e, r))
                  : ((e = this._mismatch(e, r, s, a)), (i = !0)),
                (e = e._next);
          } else
            (o = 0),
              (function RO(t, n) {
                if (Array.isArray(t))
                  for (let e = 0; e < t.length; e++) n(t[e]);
                else {
                  const e = t[Symbol.iterator]();
                  let i;
                  for (; !(i = e.next()).done; ) n(i.value);
                }
              })(n, (a) => {
                (s = this._trackByFn(o, a)),
                  null !== e && Object.is(e.trackById, s)
                    ? (i && (e = this._verifyReinsertion(e, a, s, o)),
                      Object.is(e.item, a) || this._addIdentityChange(e, a))
                    : ((e = this._mismatch(e, a, s, o)), (i = !0)),
                  (e = e._next),
                  o++;
              }),
              (this.length = o);
          return this._truncate(e), (this.collection = n), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let n;
            for (
              n = this._previousItHead = this._itHead;
              null !== n;
              n = n._next
            )
              n._nextPrevious = n._next;
            for (n = this._additionsHead; null !== n; n = n._nextAdded)
              n.previousIndex = n.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                n = this._movesHead;
              null !== n;
              n = n._nextMoved
            )
              n.previousIndex = n.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(n, e, i, o) {
          let r;
          return (
            null === n ? (r = this._itTail) : ((r = n._prev), this._remove(n)),
            null !==
            (n =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(n.item, e) || this._addIdentityChange(n, e),
                this._reinsertAfter(n, r, o))
              : null !==
                (n =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, o))
              ? (Object.is(n.item, e) || this._addIdentityChange(n, e),
                this._moveAfter(n, r, o))
              : (n = this._addAfter(new K4(e, i), r, o)),
            n
          );
        }
        _verifyReinsertion(n, e, i, o) {
          let r =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== r
              ? (n = this._reinsertAfter(r, n._prev, o))
              : n.currentIndex != o &&
                ((n.currentIndex = o), this._addToMoves(n, o)),
            n
          );
        }
        _truncate(n) {
          for (; null !== n; ) {
            const e = n._next;
            this._addToRemovals(this._unlink(n)), (n = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(n, e, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(n);
          const o = n._prevRemoved,
            r = n._nextRemoved;
          return (
            null === o ? (this._removalsHead = r) : (o._nextRemoved = r),
            null === r ? (this._removalsTail = o) : (r._prevRemoved = o),
            this._insertAfter(n, e, i),
            this._addToMoves(n, i),
            n
          );
        }
        _moveAfter(n, e, i) {
          return (
            this._unlink(n),
            this._insertAfter(n, e, i),
            this._addToMoves(n, i),
            n
          );
        }
        _addAfter(n, e, i) {
          return (
            this._insertAfter(n, e, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = n)
                : (this._additionsTail._nextAdded = n)),
            n
          );
        }
        _insertAfter(n, e, i) {
          const o = null === e ? this._itHead : e._next;
          return (
            (n._next = o),
            (n._prev = e),
            null === o ? (this._itTail = n) : (o._prev = n),
            null === e ? (this._itHead = n) : (e._next = n),
            null === this._linkedRecords && (this._linkedRecords = new TC()),
            this._linkedRecords.put(n),
            (n.currentIndex = i),
            n
          );
        }
        _remove(n) {
          return this._addToRemovals(this._unlink(n));
        }
        _unlink(n) {
          null !== this._linkedRecords && this._linkedRecords.remove(n);
          const e = n._prev,
            i = n._next;
          return (
            null === e ? (this._itHead = i) : (e._next = i),
            null === i ? (this._itTail = e) : (i._prev = e),
            n
          );
        }
        _addToMoves(n, e) {
          return (
            n.previousIndex === e ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = n)
                  : (this._movesTail._nextMoved = n)),
            n
          );
        }
        _addToRemovals(n) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new TC()),
            this._unlinkedRecords.put(n),
            (n.currentIndex = null),
            (n._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = n),
                (n._prevRemoved = null))
              : ((n._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = n)),
            n
          );
        }
        _addIdentityChange(n, e) {
          return (
            (n.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = n)
                : (this._identityChangesTail._nextIdentityChange = n)),
            n
          );
        }
      }
      class K4 {
        constructor(n, e) {
          (this.item = n),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class q4 {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(n) {
          null === this._head
            ? ((this._head = this._tail = n),
              (n._nextDup = null),
              (n._prevDup = null))
            : ((this._tail._nextDup = n),
              (n._prevDup = this._tail),
              (n._nextDup = null),
              (this._tail = n));
        }
        get(n, e) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === e || e <= i.currentIndex) &&
              Object.is(i.trackById, n)
            )
              return i;
          return null;
        }
        remove(n) {
          const e = n._prevDup,
            i = n._nextDup;
          return (
            null === e ? (this._head = i) : (e._nextDup = i),
            null === i ? (this._tail = e) : (i._prevDup = e),
            null === this._head
          );
        }
      }
      class TC {
        constructor() {
          this.map = new Map();
        }
        put(n) {
          const e = n.trackById;
          let i = this.map.get(e);
          i || ((i = new q4()), this.map.set(e, i)), i.add(n);
        }
        get(n, e) {
          const o = this.map.get(n);
          return o ? o.get(n, e) : null;
        }
        remove(n) {
          const e = n.trackById;
          return this.map.get(e).remove(n) && this.map.delete(e), n;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function SC(t, n, e) {
        const i = t.previousIndex;
        if (null === i) return i;
        let o = 0;
        return e && i < e.length && (o = e[i]), i + n + o;
      }
      class IC {
        constructor() {}
        supports(n) {
          return n instanceof Map || lh(n);
        }
        create() {
          return new Z4();
        }
      }
      class Z4 {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(n) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) n(e);
        }
        forEachPreviousItem(n) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) n(e);
        }
        forEachChangedItem(n) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) n(e);
        }
        forEachAddedItem(n) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e);
        }
        forEachRemovedItem(n) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e);
        }
        diff(n) {
          if (n) {
            if (!(n instanceof Map || lh(n))) throw new O(900, !1);
          } else n = new Map();
          return this.check(n) ? this : null;
        }
        onDestroy() {}
        check(n) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(n, (i, o) => {
              if (e && e.key === o)
                this._maybeAddToChanges(e, i),
                  (this._appendAfter = e),
                  (e = e._next);
              else {
                const r = this._getOrCreateRecordForKey(o, i);
                e = this._insertBeforeOrAppend(e, r);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let i = e; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(n, e) {
          if (n) {
            const i = n._prev;
            return (
              (e._next = n),
              (e._prev = i),
              (n._prev = e),
              i && (i._next = e),
              n === this._mapHead && (this._mapHead = e),
              (this._appendAfter = n),
              n
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = e), (e._prev = this._appendAfter))
              : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(n, e) {
          if (this._records.has(n)) {
            const o = this._records.get(n);
            this._maybeAddToChanges(o, e);
            const r = o._prev,
              s = o._next;
            return (
              r && (r._next = s),
              s && (s._prev = r),
              (o._next = null),
              (o._prev = null),
              o
            );
          }
          const i = new Y4(n);
          return (
            this._records.set(n, i),
            (i.currentValue = e),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let n;
            for (
              this._previousMapHead = this._mapHead, n = this._previousMapHead;
              null !== n;
              n = n._next
            )
              n._nextPrevious = n._next;
            for (n = this._changesHead; null !== n; n = n._nextChanged)
              n.previousValue = n.currentValue;
            for (n = this._additionsHead; null != n; n = n._nextAdded)
              n.previousValue = n.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(n, e) {
          Object.is(e, n.currentValue) ||
            ((n.previousValue = n.currentValue),
            (n.currentValue = e),
            this._addToChanges(n));
        }
        _addToAdditions(n) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = n)
            : ((this._additionsTail._nextAdded = n), (this._additionsTail = n));
        }
        _addToChanges(n) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = n)
            : ((this._changesTail._nextChanged = n), (this._changesTail = n));
        }
        _forEach(n, e) {
          n instanceof Map
            ? n.forEach(e)
            : Object.keys(n).forEach((i) => e(n[i], i));
        }
      }
      class Y4 {
        constructor(n) {
          (this.key = n),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function DC() {
        return new Pc([new wC()]);
      }
      let Pc = (() => {
        class t {
          static #e = (this.ɵprov = K({
            token: t,
            providedIn: "root",
            factory: DC,
          }));
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (null != i) {
              const o = i.factories.slice();
              e = e.concat(o);
            }
            return new t(e);
          }
          static extend(e) {
            return {
              provide: t,
              useFactory: (i) => t.create(e, i || DC()),
              deps: [[t, new Ll(), new Fl()]],
            };
          }
          find(e) {
            const i = this.factories.find((o) => o.supports(e));
            if (null != i) return i;
            throw new O(901, !1);
          }
        }
        return t;
      })();
      function EC() {
        return new ha([new IC()]);
      }
      let ha = (() => {
        class t {
          static #e = (this.ɵprov = K({
            token: t,
            providedIn: "root",
            factory: EC,
          }));
          constructor(e) {
            this.factories = e;
          }
          static create(e, i) {
            if (i) {
              const o = i.factories.slice();
              e = e.concat(o);
            }
            return new t(e);
          }
          static extend(e) {
            return {
              provide: t,
              useFactory: (i) => t.create(e, i || EC()),
              deps: [[t, new Ll(), new Fl()]],
            };
          }
          find(e) {
            const i = this.factories.find((o) => o.supports(e));
            if (i) return i;
            throw new O(901, !1);
          }
        }
        return t;
      })();
      const X4 = uC(null, "core", []);
      let eF = (() => {
        class t {
          constructor(e) {}
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Yi));
          });
          static #t = (this.ɵmod = Re({ type: t }));
          static #n = (this.ɵinj = xe({}));
        }
        return t;
      })();
      function zr(t) {
        return "boolean" == typeof t ? t : null != t && "false" !== t;
      }
      let af = null;
      function Qi() {
        return af;
      }
      class fF {}
      const Qe = new G("DocumentToken");
      let lf = (() => {
        class t {
          historyGo(e) {
            throw new Error("Not implemented");
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: function () {
              return U(mF);
            },
            providedIn: "platform",
          }));
        }
        return t;
      })();
      const gF = new G("Location Initialized");
      let mF = (() => {
        class t extends lf {
          constructor() {
            super(),
              (this._doc = U(Qe)),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return Qi().getBaseHref(this._doc);
          }
          onPopState(e) {
            const i = Qi().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("popstate", e, !1),
              () => i.removeEventListener("popstate", e)
            );
          }
          onHashChange(e) {
            const i = Qi().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("hashchange", e, !1),
              () => i.removeEventListener("hashchange", e)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(e) {
            this._location.pathname = e;
          }
          pushState(e, i, o) {
            this._history.pushState(e, i, o);
          }
          replaceState(e, i, o) {
            this._history.replaceState(e, i, o);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(e = 0) {
            this._history.go(e);
          }
          getState() {
            return this._history.state;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: function () {
              return new t();
            },
            providedIn: "platform",
          }));
        }
        return t;
      })();
      function cf(t, n) {
        if (0 == t.length) return n;
        if (0 == n.length) return t;
        let e = 0;
        return (
          t.endsWith("/") && e++,
          n.startsWith("/") && e++,
          2 == e ? t + n.substring(1) : 1 == e ? t + n : t + "/" + n
        );
      }
      function PC(t) {
        const n = t.match(/#|\?|$/),
          e = (n && n.index) || t.length;
        return t.slice(0, e - ("/" === t[e - 1] ? 1 : 0)) + t.slice(e);
      }
      function Ei(t) {
        return t && "?" !== t[0] ? "?" + t : t;
      }
      let xo = (() => {
        class t {
          historyGo(e) {
            throw new Error("Not implemented");
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: function () {
              return U(VC);
            },
            providedIn: "root",
          }));
        }
        return t;
      })();
      const NC = new G("appBaseHref");
      let VC = (() => {
          class t extends xo {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                (this._baseHref =
                  i ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  U(Qe).location?.origin ??
                  "");
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return cf(this._baseHref, e);
            }
            path(e = !1) {
              const i =
                  this._platformLocation.pathname +
                  Ei(this._platformLocation.search),
                o = this._platformLocation.hash;
              return o && e ? `${i}${o}` : i;
            }
            pushState(e, i, o, r) {
              const s = this.prepareExternalUrl(o + Ei(r));
              this._platformLocation.pushState(e, i, s);
            }
            replaceState(e, i, o, r) {
              const s = this.prepareExternalUrl(o + Ei(r));
              this._platformLocation.replaceState(e, i, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(W(lf), W(NC, 8));
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        _F = (() => {
          class t extends xo {
            constructor(e, i) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(e) {
              const i = cf(this._baseHref, e);
              return i.length > 0 ? "#" + i : i;
            }
            pushState(e, i, o, r) {
              let s = this.prepareExternalUrl(o + Ei(r));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.pushState(e, i, s);
            }
            replaceState(e, i, o, r) {
              let s = this.prepareExternalUrl(o + Ei(r));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, i, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(W(lf), W(NC, 8));
            });
            static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
          }
          return t;
        })(),
        uf = (() => {
          class t {
            constructor(e) {
              (this._subject = new L()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = e);
              const i = this._locationStrategy.getBaseHref();
              (this._basePath = (function bF(t) {
                if (new RegExp("^(https?:)?//").test(t)) {
                  const [, e] = t.split(/\/\/[^\/]+/);
                  return e;
                }
                return t;
              })(PC(BC(i)))),
                this._locationStrategy.onPopState((o) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: o.state,
                    type: o.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(e = !1) {
              return this.normalize(this._locationStrategy.path(e));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(e, i = "") {
              return this.path() == this.normalize(e + Ei(i));
            }
            normalize(e) {
              return t.stripTrailingSlash(
                (function vF(t, n) {
                  if (!t || !n.startsWith(t)) return n;
                  const e = n.substring(t.length);
                  return "" === e || ["/", ";", "?", "#"].includes(e[0])
                    ? e
                    : n;
                })(this._basePath, BC(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._locationStrategy.prepareExternalUrl(e)
              );
            }
            go(e, i = "", o = null) {
              this._locationStrategy.pushState(o, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Ei(i)),
                  o
                );
            }
            replaceState(e, i = "", o = null) {
              this._locationStrategy.replaceState(o, "", e, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Ei(i)),
                  o
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(e = 0) {
              this._locationStrategy.historyGo?.(e);
            }
            onUrlChange(e) {
              return (
                this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  })),
                () => {
                  const i = this._urlChangeListeners.indexOf(e);
                  this._urlChangeListeners.splice(i, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(e = "", i) {
              this._urlChangeListeners.forEach((o) => o(e, i));
            }
            subscribe(e, i, o) {
              return this._subject.subscribe({
                next: e,
                error: i,
                complete: o,
              });
            }
            static #e = (this.normalizeQueryParams = Ei);
            static #t = (this.joinWithSlash = cf);
            static #n = (this.stripTrailingSlash = PC);
            static #i = (this.ɵfac = function (i) {
              return new (i || t)(W(xo));
            });
            static #o = (this.ɵprov = K({
              token: t,
              factory: function () {
                return (function yF() {
                  return new uf(W(xo));
                })();
              },
              providedIn: "root",
            }));
          }
          return t;
        })();
      function BC(t) {
        return t.replace(/\/index.html$/, "");
      }
      function qC(t, n) {
        n = encodeURIComponent(n);
        for (const e of t.split(";")) {
          const i = e.indexOf("="),
            [o, r] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
          if (o.trim() === n) return decodeURIComponent(r);
        }
        return null;
      }
      const bf = /\s+/,
        ZC = [];
      let Bt = (() => {
        class t {
          constructor(e, i, o, r) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = i),
              (this._ngEl = o),
              (this._renderer = r),
              (this.initialClasses = ZC),
              (this.stateMap = new Map());
          }
          set klass(e) {
            this.initialClasses = null != e ? e.trim().split(bf) : ZC;
          }
          set ngClass(e) {
            this.rawClass = "string" == typeof e ? e.trim().split(bf) : e;
          }
          ngDoCheck() {
            for (const i of this.initialClasses) this._updateState(i, !0);
            const e = this.rawClass;
            if (Array.isArray(e) || e instanceof Set)
              for (const i of e) this._updateState(i, !0);
            else if (null != e)
              for (const i of Object.keys(e)) this._updateState(i, !!e[i]);
            this._applyStateDiff();
          }
          _updateState(e, i) {
            const o = this.stateMap.get(e);
            void 0 !== o
              ? (o.enabled !== i && ((o.changed = !0), (o.enabled = i)),
                (o.touched = !0))
              : this.stateMap.set(e, { enabled: i, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const e of this.stateMap) {
              const i = e[0],
                o = e[1];
              o.changed
                ? (this._toggleClass(i, o.enabled), (o.changed = !1))
                : o.touched ||
                  (o.enabled && this._toggleClass(i, !1),
                  this.stateMap.delete(i)),
                (o.touched = !1);
            }
          }
          _toggleClass(e, i) {
            (e = e.trim()).length > 0 &&
              e.split(bf).forEach((o) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, o)
                  : this._renderer.removeClass(this._ngEl.nativeElement, o);
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(D(Pc), D(ha), D(Fe), D(Tt));
          });
          static #t = (this.ɵdir = Y({
            type: t,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            standalone: !0,
          }));
        }
        return t;
      })();
      class rL {
        constructor(n, e, i, o) {
          (this.$implicit = n),
            (this.ngForOf = e),
            (this.index = i),
            (this.count = o);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let Oi = (() => {
        class t {
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            this._trackByFn = e;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(e, i, o) {
            (this._viewContainer = e),
              (this._template = i),
              (this._differs = o),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const e = this._ngForOf;
              !this._differ &&
                e &&
                (this._differ = this._differs
                  .find(e)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const i = this._viewContainer;
            e.forEachOperation((o, r, s) => {
              if (null == o.previousIndex)
                i.createEmbeddedView(
                  this._template,
                  new rL(o.item, this._ngForOf, -1, -1),
                  null === s ? void 0 : s
                );
              else if (null == s) i.remove(null === r ? void 0 : r);
              else if (null !== r) {
                const a = i.get(r);
                i.move(a, s), QC(a, o);
              }
            });
            for (let o = 0, r = i.length; o < r; o++) {
              const a = i.get(o).context;
              (a.index = o), (a.count = r), (a.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((o) => {
              QC(i.get(o.currentIndex), o);
            });
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(D(Rn), D(Wn), D(Pc));
          });
          static #t = (this.ɵdir = Y({
            type: t,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          }));
        }
        return t;
      })();
      function QC(t, n) {
        t.context.$implicit = n.item;
      }
      let wt = (() => {
        class t {
          constructor(e, i) {
            (this._viewContainer = e),
              (this._context = new sL()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            JC("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            JC("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, i) {
            return !0;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(D(Rn), D(Wn));
          });
          static #t = (this.ɵdir = Y({
            type: t,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          }));
        }
        return t;
      })();
      class sL {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function JC(t, n) {
        if (n && !n.createEmbeddedView)
          throw new Error(
            `${t} must be a TemplateRef, but received '${mt(n)}'.`
          );
      }
      class Cf {
        constructor(n, e) {
          (this._viewContainerRef = n),
            (this._templateRef = e),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(n) {
          n && !this._created
            ? this.create()
            : !n && this._created && this.destroy();
        }
      }
      let qc = (() => {
          class t {
            constructor() {
              (this._defaultViews = []),
                (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews.push(e);
            }
            _matchCase(e) {
              const i = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || i),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                i
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews.length > 0 && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (const i of this._defaultViews) i.enforceState(e);
              }
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵdir = Y({
              type: t,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
              standalone: !0,
            }));
          }
          return t;
        })(),
        XC = (() => {
          class t {
            constructor(e, i, o) {
              (this.ngSwitch = o), o._addCase(), (this._view = new Cf(e, i));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(D(Rn), D(Wn), D(qc, 9));
            });
            static #t = (this.ɵdir = Y({
              type: t,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
              standalone: !0,
            }));
          }
          return t;
        })(),
        Xt = (() => {
          class t {
            constructor(e, i, o) {
              (this._ngEl = e),
                (this._differs = i),
                (this._renderer = o),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle(e) {
              (this._ngStyle = e),
                !this._differ &&
                  e &&
                  (this._differ = this._differs.find(e).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const e = this._differ.diff(this._ngStyle);
                e && this._applyChanges(e);
              }
            }
            _setStyle(e, i) {
              const [o, r] = e.split("."),
                s = -1 === o.indexOf("-") ? void 0 : Wi.DashCase;
              null != i
                ? this._renderer.setStyle(
                    this._ngEl.nativeElement,
                    o,
                    r ? `${i}${r}` : i,
                    s
                  )
                : this._renderer.removeStyle(this._ngEl.nativeElement, o, s);
            }
            _applyChanges(e) {
              e.forEachRemovedItem((i) => this._setStyle(i.key, null)),
                e.forEachAddedItem((i) =>
                  this._setStyle(i.key, i.currentValue)
                ),
                e.forEachChangedItem((i) =>
                  this._setStyle(i.key, i.currentValue)
                );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(D(Fe), D(ha), D(Tt));
            });
            static #t = (this.ɵdir = Y({
              type: t,
              selectors: [["", "ngStyle", ""]],
              inputs: { ngStyle: "ngStyle" },
              standalone: !0,
            }));
          }
          return t;
        })(),
        St = (() => {
          class t {
            constructor(e) {
              (this._viewContainerRef = e),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(e) {
              if (e.ngTemplateOutlet || e.ngTemplateOutletInjector) {
                const i = this._viewContainerRef;
                if (
                  (this._viewRef && i.remove(i.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: o,
                    ngTemplateOutletContext: r,
                    ngTemplateOutletInjector: s,
                  } = this;
                  this._viewRef = i.createEmbeddedView(
                    o,
                    r,
                    s ? { injector: s } : void 0
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  e.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(D(Rn));
            });
            static #t = (this.ɵdir = Y({
              type: t,
              selectors: [["", "ngTemplateOutlet", ""]],
              inputs: {
                ngTemplateOutletContext: "ngTemplateOutletContext",
                ngTemplateOutlet: "ngTemplateOutlet",
                ngTemplateOutletInjector: "ngTemplateOutletInjector",
              },
              standalone: !0,
              features: [_t],
            }));
          }
          return t;
        })(),
        pt = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = Re({ type: t }));
            static #n = (this.ɵinj = xe({}));
          }
          return t;
        })();
      const nw = "browser";
      function Ai(t) {
        return t === nw;
      }
      function iw(t) {
        return "server" === t;
      }
      let FL = (() => {
        class t {
          static #e = (this.ɵprov = K({
            token: t,
            providedIn: "root",
            factory: () => new LL(W(Qe), window),
          }));
        }
        return t;
      })();
      class LL {
        constructor(n, e) {
          (this.document = n), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(n) {
          this.offset = Array.isArray(n) ? () => n : n;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(n) {
          this.supportsScrolling() && this.window.scrollTo(n[0], n[1]);
        }
        scrollToAnchor(n) {
          if (!this.supportsScrolling()) return;
          const e = (function PL(t, n) {
            const e = t.getElementById(n) || t.getElementsByName(n)[0];
            if (e) return e;
            if (
              "function" == typeof t.createTreeWalker &&
              t.body &&
              "function" == typeof t.body.attachShadow
            ) {
              const i = t.createTreeWalker(t.body, NodeFilter.SHOW_ELEMENT);
              let o = i.currentNode;
              for (; o; ) {
                const r = o.shadowRoot;
                if (r) {
                  const s =
                    r.getElementById(n) || r.querySelector(`[name="${n}"]`);
                  if (s) return s;
                }
                o = i.nextNode();
              }
            }
            return null;
          })(this.document, n);
          e && (this.scrollToElement(e), e.focus());
        }
        setHistoryScrollRestoration(n) {
          this.supportsScrolling() &&
            (this.window.history.scrollRestoration = n);
        }
        scrollToElement(n) {
          const e = n.getBoundingClientRect(),
            i = e.left + this.window.pageXOffset,
            o = e.top + this.window.pageYOffset,
            r = this.offset();
          this.window.scrollTo(i - r[0], o - r[1]);
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      class ow {}
      class r6 extends fF {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class Df extends r6 {
        static makeCurrent() {
          !(function hF(t) {
            af || (af = t);
          })(new Df());
        }
        onAndCancel(n, e, i) {
          return (
            n.addEventListener(e, i),
            () => {
              n.removeEventListener(e, i);
            }
          );
        }
        dispatchEvent(n, e) {
          n.dispatchEvent(e);
        }
        remove(n) {
          n.parentNode && n.parentNode.removeChild(n);
        }
        createElement(n, e) {
          return (e = e || this.getDefaultDocument()).createElement(n);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(n) {
          return n.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(n) {
          return n instanceof DocumentFragment;
        }
        getGlobalEventTarget(n, e) {
          return "window" === e
            ? window
            : "document" === e
            ? n
            : "body" === e
            ? n.body
            : null;
        }
        getBaseHref(n) {
          const e = (function s6() {
            return (
              (_a = _a || document.querySelector("base")),
              _a ? _a.getAttribute("href") : null
            );
          })();
          return null == e
            ? null
            : (function a6(t) {
                (Qc = Qc || document.createElement("a")),
                  Qc.setAttribute("href", t);
                const n = Qc.pathname;
                return "/" === n.charAt(0) ? n : `/${n}`;
              })(e);
        }
        resetBaseElement() {
          _a = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(n) {
          return qC(document.cookie, n);
        }
      }
      let Qc,
        _a = null,
        c6 = (() => {
          class t {
            build() {
              return new XMLHttpRequest();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
          }
          return t;
        })();
      const Ef = new G("EventManagerPlugins");
      let cw = (() => {
        class t {
          constructor(e, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              e.forEach((o) => {
                o.manager = this;
              }),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, i, o) {
            return this._findPluginFor(i).addEventListener(e, i, o);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            let i = this._eventNameToPlugin.get(e);
            if (i) return i;
            if (((i = this._plugins.find((r) => r.supports(e))), !i))
              throw new O(5101, !1);
            return this._eventNameToPlugin.set(e, i), i;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Ef), W(_e));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      class uw {
        constructor(n) {
          this._doc = n;
        }
      }
      const xf = "ng-app-id";
      let dw = (() => {
        class t {
          constructor(e, i, o, r = {}) {
            (this.doc = e),
              (this.appId = i),
              (this.nonce = o),
              (this.platformId = r),
              (this.styleRef = new Map()),
              (this.hostNodes = new Set()),
              (this.styleNodesInDOM = this.collectServerRenderedStyles()),
              (this.platformIsServer = iw(r)),
              this.resetHostNodes();
          }
          addStyles(e) {
            for (const i of e)
              1 === this.changeUsageCount(i, 1) && this.onStyleAdded(i);
          }
          removeStyles(e) {
            for (const i of e)
              this.changeUsageCount(i, -1) <= 0 && this.onStyleRemoved(i);
          }
          ngOnDestroy() {
            const e = this.styleNodesInDOM;
            e && (e.forEach((i) => i.remove()), e.clear());
            for (const i of this.getAllStyles()) this.onStyleRemoved(i);
            this.resetHostNodes();
          }
          addHost(e) {
            this.hostNodes.add(e);
            for (const i of this.getAllStyles()) this.addStyleToHost(e, i);
          }
          removeHost(e) {
            this.hostNodes.delete(e);
          }
          getAllStyles() {
            return this.styleRef.keys();
          }
          onStyleAdded(e) {
            for (const i of this.hostNodes) this.addStyleToHost(i, e);
          }
          onStyleRemoved(e) {
            const i = this.styleRef;
            i.get(e)?.elements?.forEach((o) => o.remove()), i.delete(e);
          }
          collectServerRenderedStyles() {
            const e = this.doc.head?.querySelectorAll(
              `style[${xf}="${this.appId}"]`
            );
            if (e?.length) {
              const i = new Map();
              return (
                e.forEach((o) => {
                  null != o.textContent && i.set(o.textContent, o);
                }),
                i
              );
            }
            return null;
          }
          changeUsageCount(e, i) {
            const o = this.styleRef;
            if (o.has(e)) {
              const r = o.get(e);
              return (r.usage += i), r.usage;
            }
            return o.set(e, { usage: i, elements: [] }), i;
          }
          getStyleElement(e, i) {
            const o = this.styleNodesInDOM,
              r = o?.get(i);
            if (r?.parentNode === e)
              return o.delete(i), r.removeAttribute(xf), r;
            {
              const s = this.doc.createElement("style");
              return (
                this.nonce && s.setAttribute("nonce", this.nonce),
                (s.textContent = i),
                this.platformIsServer && s.setAttribute(xf, this.appId),
                s
              );
            }
          }
          addStyleToHost(e, i) {
            const o = this.getStyleElement(e, i);
            e.appendChild(o);
            const r = this.styleRef,
              s = r.get(i)?.elements;
            s ? s.push(o) : r.set(i, { elements: [o], usage: 1 });
          }
          resetHostNodes() {
            const e = this.hostNodes;
            e.clear(), e.add(this.doc.head);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Qe), W(ec), W(C1, 8), W(xn));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const Mf = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        Of = /%COMP%/g,
        h6 = new G("RemoveStylesOnCompDestroy", {
          providedIn: "root",
          factory: () => !1,
        });
      function hw(t, n) {
        return n.map((e) => e.replace(Of, t));
      }
      let Af = (() => {
        class t {
          constructor(e, i, o, r, s, a, l, c = null) {
            (this.eventManager = e),
              (this.sharedStylesHost = i),
              (this.appId = o),
              (this.removeStylesOnCompDestroy = r),
              (this.doc = s),
              (this.platformId = a),
              (this.ngZone = l),
              (this.nonce = c),
              (this.rendererByCompId = new Map()),
              (this.platformIsServer = iw(a)),
              (this.defaultRenderer = new kf(e, s, l, this.platformIsServer));
          }
          createRenderer(e, i) {
            if (!e || !i) return this.defaultRenderer;
            this.platformIsServer &&
              i.encapsulation === In.ShadowDom &&
              (i = { ...i, encapsulation: In.Emulated });
            const o = this.getOrCreateRenderer(e, i);
            return (
              o instanceof gw
                ? o.applyToHost(e)
                : o instanceof Rf && o.applyStyles(),
              o
            );
          }
          getOrCreateRenderer(e, i) {
            const o = this.rendererByCompId;
            let r = o.get(i.id);
            if (!r) {
              const s = this.doc,
                a = this.ngZone,
                l = this.eventManager,
                c = this.sharedStylesHost,
                u = this.removeStylesOnCompDestroy,
                h = this.platformIsServer;
              switch (i.encapsulation) {
                case In.Emulated:
                  r = new gw(l, c, i, this.appId, u, s, a, h);
                  break;
                case In.ShadowDom:
                  return new _6(l, c, e, i, s, a, this.nonce, h);
                default:
                  r = new Rf(l, c, i, u, s, a, h);
              }
              o.set(i.id, r);
            }
            return r;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(
              W(cw),
              W(dw),
              W(ec),
              W(h6),
              W(Qe),
              W(xn),
              W(_e),
              W(C1)
            );
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      class kf {
        constructor(n, e, i, o) {
          (this.eventManager = n),
            (this.doc = e),
            (this.ngZone = i),
            (this.platformIsServer = o),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(n, e) {
          return e
            ? this.doc.createElementNS(Mf[e] || e, n)
            : this.doc.createElement(n);
        }
        createComment(n) {
          return this.doc.createComment(n);
        }
        createText(n) {
          return this.doc.createTextNode(n);
        }
        appendChild(n, e) {
          (fw(n) ? n.content : n).appendChild(e);
        }
        insertBefore(n, e, i) {
          n && (fw(n) ? n.content : n).insertBefore(e, i);
        }
        removeChild(n, e) {
          n && n.removeChild(e);
        }
        selectRootElement(n, e) {
          let i = "string" == typeof n ? this.doc.querySelector(n) : n;
          if (!i) throw new O(-5104, !1);
          return e || (i.textContent = ""), i;
        }
        parentNode(n) {
          return n.parentNode;
        }
        nextSibling(n) {
          return n.nextSibling;
        }
        setAttribute(n, e, i, o) {
          if (o) {
            e = o + ":" + e;
            const r = Mf[o];
            r ? n.setAttributeNS(r, e, i) : n.setAttribute(e, i);
          } else n.setAttribute(e, i);
        }
        removeAttribute(n, e, i) {
          if (i) {
            const o = Mf[i];
            o ? n.removeAttributeNS(o, e) : n.removeAttribute(`${i}:${e}`);
          } else n.removeAttribute(e);
        }
        addClass(n, e) {
          n.classList.add(e);
        }
        removeClass(n, e) {
          n.classList.remove(e);
        }
        setStyle(n, e, i, o) {
          o & (Wi.DashCase | Wi.Important)
            ? n.style.setProperty(e, i, o & Wi.Important ? "important" : "")
            : (n.style[e] = i);
        }
        removeStyle(n, e, i) {
          i & Wi.DashCase ? n.style.removeProperty(e) : (n.style[e] = "");
        }
        setProperty(n, e, i) {
          n[e] = i;
        }
        setValue(n, e) {
          n.nodeValue = e;
        }
        listen(n, e, i) {
          if (
            "string" == typeof n &&
            !(n = Qi().getGlobalEventTarget(this.doc, n))
          )
            throw new Error(`Unsupported event target ${n} for event ${e}`);
          return this.eventManager.addEventListener(
            n,
            e,
            this.decoratePreventDefault(i)
          );
        }
        decoratePreventDefault(n) {
          return (e) => {
            if ("__ngUnwrap__" === e) return n;
            !1 ===
              (this.platformIsServer
                ? this.ngZone.runGuarded(() => n(e))
                : n(e)) && e.preventDefault();
          };
        }
      }
      function fw(t) {
        return "TEMPLATE" === t.tagName && void 0 !== t.content;
      }
      class _6 extends kf {
        constructor(n, e, i, o, r, s, a, l) {
          super(n, r, s, l),
            (this.sharedStylesHost = e),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const c = hw(o.id, o.styles);
          for (const u of c) {
            const h = document.createElement("style");
            a && h.setAttribute("nonce", a),
              (h.textContent = u),
              this.shadowRoot.appendChild(h);
          }
        }
        nodeOrShadowRoot(n) {
          return n === this.hostEl ? this.shadowRoot : n;
        }
        appendChild(n, e) {
          return super.appendChild(this.nodeOrShadowRoot(n), e);
        }
        insertBefore(n, e, i) {
          return super.insertBefore(this.nodeOrShadowRoot(n), e, i);
        }
        removeChild(n, e) {
          return super.removeChild(this.nodeOrShadowRoot(n), e);
        }
        parentNode(n) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(n))
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class Rf extends kf {
        constructor(n, e, i, o, r, s, a, l) {
          super(n, r, s, a),
            (this.sharedStylesHost = e),
            (this.removeStylesOnCompDestroy = o),
            (this.styles = l ? hw(l, i.styles) : i.styles);
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles);
        }
        destroy() {
          this.removeStylesOnCompDestroy &&
            this.sharedStylesHost.removeStyles(this.styles);
        }
      }
      class gw extends Rf {
        constructor(n, e, i, o, r, s, a, l) {
          const c = o + "-" + i.id;
          super(n, e, i, r, s, a, l, c),
            (this.contentAttr = (function f6(t) {
              return "_ngcontent-%COMP%".replace(Of, t);
            })(c)),
            (this.hostAttr = (function g6(t) {
              return "_nghost-%COMP%".replace(Of, t);
            })(c));
        }
        applyToHost(n) {
          this.applyStyles(), this.setAttribute(n, this.hostAttr, "");
        }
        createElement(n, e) {
          const i = super.createElement(n, e);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      let y6 = (() => {
        class t extends uw {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, i, o) {
            return (
              e.addEventListener(i, o, !1),
              () => this.removeEventListener(e, i, o)
            );
          }
          removeEventListener(e, i, o) {
            return e.removeEventListener(i, o);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Qe));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const mw = ["alt", "control", "meta", "shift"],
        v6 = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        b6 = {
          alt: (t) => t.altKey,
          control: (t) => t.ctrlKey,
          meta: (t) => t.metaKey,
          shift: (t) => t.shiftKey,
        };
      let C6 = (() => {
        class t extends uw {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return null != t.parseEventName(e);
          }
          addEventListener(e, i, o) {
            const r = t.parseEventName(i),
              s = t.eventCallback(r.fullKey, o, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => Qi().onAndCancel(e, r.domEventName, s));
          }
          static parseEventName(e) {
            const i = e.toLowerCase().split("."),
              o = i.shift();
            if (0 === i.length || ("keydown" !== o && "keyup" !== o))
              return null;
            const r = t._normalizeKey(i.pop());
            let s = "",
              a = i.indexOf("code");
            if (
              (a > -1 && (i.splice(a, 1), (s = "code.")),
              mw.forEach((c) => {
                const u = i.indexOf(c);
                u > -1 && (i.splice(u, 1), (s += c + "."));
              }),
              (s += r),
              0 != i.length || 0 === r.length)
            )
              return null;
            const l = {};
            return (l.domEventName = o), (l.fullKey = s), l;
          }
          static matchEventFullKeyCode(e, i) {
            let o = v6[e.key] || e.key,
              r = "";
            return (
              i.indexOf("code.") > -1 && ((o = e.code), (r = "code.")),
              !(null == o || !o) &&
                ((o = o.toLowerCase()),
                " " === o ? (o = "space") : "." === o && (o = "dot"),
                mw.forEach((s) => {
                  s !== o && (0, b6[s])(e) && (r += s + ".");
                }),
                (r += o),
                r === i)
            );
          }
          static eventCallback(e, i, o) {
            return (r) => {
              t.matchEventFullKeyCode(r, e) && o.runGuarded(() => i(r));
            };
          }
          static _normalizeKey(e) {
            return "esc" === e ? "escape" : e;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Qe));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const I6 = uC(X4, "browser", [
          { provide: xn, useValue: nw },
          {
            provide: v1,
            useValue: function w6() {
              Df.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: Qe,
            useFactory: function S6() {
              return (
                (function yM(t) {
                  vp = t;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        D6 = new G(""),
        vw = [
          {
            provide: kc,
            useClass: class l6 {
              addToWindow(n) {
                ($e.getAngularTestability = (i, o = !0) => {
                  const r = n.findTestabilityInTree(i, o);
                  if (null == r) throw new O(5103, !1);
                  return r;
                }),
                  ($e.getAllAngularTestabilities = () =>
                    n.getAllTestabilities()),
                  ($e.getAllAngularRootElements = () => n.getAllRootElements()),
                  $e.frameworkStabilizers || ($e.frameworkStabilizers = []),
                  $e.frameworkStabilizers.push((i) => {
                    const o = $e.getAllAngularTestabilities();
                    let r = o.length,
                      s = !1;
                    const a = function (l) {
                      (s = s || l), r--, 0 == r && i(s);
                    };
                    o.forEach((l) => {
                      l.whenStable(a);
                    });
                  });
              }
              findTestabilityInTree(n, e, i) {
                return null == e
                  ? null
                  : n.getTestability(e) ??
                      (i
                        ? Qi().isShadowRoot(e)
                          ? this.findTestabilityInTree(n, e.host, !0)
                          : this.findTestabilityInTree(n, e.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: rC, useClass: qh, deps: [_e, Zh, kc] },
          { provide: qh, useClass: qh, deps: [_e, Zh, kc] },
        ],
        bw = [
          { provide: Mp, useValue: "root" },
          {
            provide: wi,
            useFactory: function T6() {
              return new wi();
            },
            deps: [],
          },
          { provide: Ef, useClass: y6, multi: !0, deps: [Qe, _e, xn] },
          { provide: Ef, useClass: C6, multi: !0, deps: [Qe] },
          Af,
          dw,
          cw,
          { provide: Ws, useExisting: Af },
          { provide: ow, useClass: c6, deps: [] },
          [],
        ];
      let Cw = (() => {
          class t {
            constructor(e) {}
            static withServerTransition(e) {
              return {
                ngModule: t,
                providers: [{ provide: ec, useValue: e.appId }],
              };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(W(D6, 12));
            });
            static #t = (this.ɵmod = Re({ type: t }));
            static #n = (this.ɵinj = xe({
              providers: [...bw, ...vw],
              imports: [pt, eF],
            }));
          }
          return t;
        })(),
        ww = (() => {
          class t {
            constructor(e) {
              this._doc = e;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(e) {
              this._doc.title = e || "";
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(W(Qe));
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: function (i) {
                let o = null;
                return (
                  (o = i
                    ? new i()
                    : (function x6() {
                        return new ww(W(Qe));
                      })()),
                  o
                );
              },
              providedIn: "root",
            }));
          }
          return t;
        })();
      typeof window < "u" && window;
      class Dw {}
      class R6 {}
      const ki = "*";
      function Lf(t, n) {
        return { type: 7, name: t, definitions: n, options: {} };
      }
      function Xi(t, n = null) {
        return { type: 4, styles: n, timings: t };
      }
      function Ew(t, n = null) {
        return { type: 2, steps: t, options: n };
      }
      function Pn(t) {
        return { type: 6, styles: t, offset: null };
      }
      function F6(t, n, e) {
        return { type: 0, name: t, styles: n, options: e };
      }
      function eo(t, n, e = null) {
        return { type: 1, expr: t, animation: n, options: e };
      }
      function xw(t, n = null) {
        return { type: 8, animation: t, options: n };
      }
      function Mw(t, n = null) {
        return { type: 10, animation: t, options: n };
      }
      class ya {
        constructor(n = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = n + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        onStart(n) {
          this._originalOnStartFns.push(n), this._onStartFns.push(n);
        }
        onDone(n) {
          this._originalOnDoneFns.push(n), this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          queueMicrotask(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((n) => n()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(n) {
          this._position = this.totalTime ? n * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(n) {
          const e = "start" == n ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class Ow {
        constructor(n) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = n);
          let e = 0,
            i = 0,
            o = 0;
          const r = this.players.length;
          0 == r
            ? queueMicrotask(() => this._onFinish())
            : this.players.forEach((s) => {
                s.onDone(() => {
                  ++e == r && this._onFinish();
                }),
                  s.onDestroy(() => {
                    ++i == r && this._onDestroy();
                  }),
                  s.onStart(() => {
                    ++o == r && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (s, a) => Math.max(s, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((n) => n.init());
        }
        onStart(n) {
          this._onStartFns.push(n);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((n) => n()),
            (this._onStartFns = []));
        }
        onDone(n) {
          this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((n) => n.play());
        }
        pause() {
          this.players.forEach((n) => n.pause());
        }
        restart() {
          this.players.forEach((n) => n.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((n) => n.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((n) => n.destroy()),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((n) => n.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(n) {
          const e = n * this.totalTime;
          this.players.forEach((i) => {
            const o = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
            i.setPosition(o);
          });
        }
        getPosition() {
          const n = this.players.reduce(
            (e, i) => (null === e || i.totalTime > e.totalTime ? i : e),
            null
          );
          return null != n ? n.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((n) => {
            n.beforeDestroy && n.beforeDestroy();
          });
        }
        triggerCallback(n) {
          const e = "start" == n ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      const { isArray: L6 } = Array,
        { getPrototypeOf: P6, prototype: N6, keys: V6 } = Object;
      function Aw(t) {
        if (1 === t.length) {
          const n = t[0];
          if (L6(n)) return { args: n, keys: null };
          if (
            (function B6(t) {
              return t && "object" == typeof t && P6(t) === N6;
            })(n)
          ) {
            const e = V6(n);
            return { args: e.map((i) => n[i]), keys: e };
          }
        }
        return { args: t, keys: null };
      }
      const { isArray: H6 } = Array;
      function kw(t) {
        return Ie((n) =>
          (function z6(t, n) {
            return H6(n) ? t(...n) : t(n);
          })(t, n)
        );
      }
      function Rw(t, n) {
        return t.reduce((e, i, o) => ((e[i] = n[o]), e), {});
      }
      let Fw = (() => {
          class t {
            constructor(e, i) {
              (this._renderer = e),
                (this._elementRef = i),
                (this.onChange = (o) => {}),
                (this.onTouched = () => {});
            }
            setProperty(e, i) {
              this._renderer.setProperty(this._elementRef.nativeElement, e, i);
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            registerOnChange(e) {
              this.onChange = e;
            }
            setDisabledState(e) {
              this.setProperty("disabled", e);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(D(Tt), D(Fe));
            });
            static #t = (this.ɵdir = Y({ type: t }));
          }
          return t;
        })(),
        Mo = (() => {
          class t extends Fw {
            static #e = (this.ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })());
            static #t = (this.ɵdir = Y({ type: t, features: [te] }));
          }
          return t;
        })();
      const Rt = new G("NgValueAccessor"),
        U6 = { provide: Rt, useExisting: Te(() => Jc), multi: !0 },
        W6 = new G("CompositionEventMode");
      let Jc = (() => {
        class t extends Fw {
          constructor(e, i, o) {
            super(e, i),
              (this._compositionMode = o),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function G6() {
                  const t = Qi() ? Qi().getUserAgent() : "";
                  return /android (\d+)/.test(t.toLowerCase());
                })());
          }
          writeValue(e) {
            this.setProperty("value", e ?? "");
          }
          _handleInput(e) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(e);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(e) {
            (this._composing = !1), this._compositionMode && this.onChange(e);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(D(Tt), D(Fe), D(W6, 8));
          });
          static #t = (this.ɵdir = Y({
            type: t,
            selectors: [
              ["input", "formControlName", "", 3, "type", "checkbox"],
              ["textarea", "formControlName", ""],
              ["input", "formControl", "", 3, "type", "checkbox"],
              ["textarea", "formControl", ""],
              ["input", "ngModel", "", 3, "type", "checkbox"],
              ["textarea", "ngModel", ""],
              ["", "ngDefaultControl", ""],
            ],
            hostBindings: function (i, o) {
              1 & i &&
                A("input", function (s) {
                  return o._handleInput(s.target.value);
                })("blur", function () {
                  return o.onTouched();
                })("compositionstart", function () {
                  return o._compositionStart();
                })("compositionend", function (s) {
                  return o._compositionEnd(s.target.value);
                });
            },
            features: [Ee([U6]), te],
          }));
        }
        return t;
      })();
      const Ht = new G("NgValidators"),
        no = new G("NgAsyncValidators");
      function Bw(t) {
        return (function to(t) {
          return (
            null == t ||
            (("string" == typeof t || Array.isArray(t)) && 0 === t.length)
          );
        })(t.value)
          ? { required: !0 }
          : null;
      }
      function Xc(t) {
        return null;
      }
      function Gw(t) {
        return null != t;
      }
      function Ww(t) {
        return na(t) ? gt(t) : t;
      }
      function Kw(t) {
        let n = {};
        return (
          t.forEach((e) => {
            n = null != e ? { ...n, ...e } : n;
          }),
          0 === Object.keys(n).length ? null : n
        );
      }
      function qw(t, n) {
        return n.map((e) => e(t));
      }
      function Zw(t) {
        return t.map((n) =>
          (function q6(t) {
            return !t.validate;
          })(n)
            ? n
            : (e) => n.validate(e)
        );
      }
      function Nf(t) {
        return null != t
          ? (function Yw(t) {
              if (!t) return null;
              const n = t.filter(Gw);
              return 0 == n.length
                ? null
                : function (e) {
                    return Kw(qw(e, n));
                  };
            })(Zw(t))
          : null;
      }
      function Vf(t) {
        return null != t
          ? (function Qw(t) {
              if (!t) return null;
              const n = t.filter(Gw);
              return 0 == n.length
                ? null
                : function (e) {
                    return (function $6(...t) {
                      const n = Bm(t),
                        { args: e, keys: i } = Aw(t),
                        o = new nt((r) => {
                          const { length: s } = e;
                          if (!s) return void r.complete();
                          const a = new Array(s);
                          let l = s,
                            c = s;
                          for (let u = 0; u < s; u++) {
                            let h = !1;
                            un(e[u]).subscribe(
                              ut(
                                r,
                                (m) => {
                                  h || ((h = !0), c--), (a[u] = m);
                                },
                                () => l--,
                                void 0,
                                () => {
                                  (!l || !h) &&
                                    (c || r.next(i ? Rw(i, a) : a),
                                    r.complete());
                                }
                              )
                            );
                          }
                        });
                      return n ? o.pipe(kw(n)) : o;
                    })(qw(e, n).map(Ww)).pipe(Ie(Kw));
                  };
            })(Zw(t))
          : null;
      }
      function Jw(t, n) {
        return null === t ? [n] : Array.isArray(t) ? [...t, n] : [t, n];
      }
      function Bf(t) {
        return t ? (Array.isArray(t) ? t : [t]) : [];
      }
      function eu(t, n) {
        return Array.isArray(t) ? t.includes(n) : t === n;
      }
      function tT(t, n) {
        const e = Bf(n);
        return (
          Bf(t).forEach((o) => {
            eu(e, o) || e.push(o);
          }),
          e
        );
      }
      function nT(t, n) {
        return Bf(n).filter((e) => !eu(t, e));
      }
      class iT {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(n) {
          (this._rawValidators = n || []),
            (this._composedValidatorFn = Nf(this._rawValidators));
        }
        _setAsyncValidators(n) {
          (this._rawAsyncValidators = n || []),
            (this._composedAsyncValidatorFn = Vf(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(n) {
          this._onDestroyCallbacks.push(n);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((n) => n()),
            (this._onDestroyCallbacks = []);
        }
        reset(n = void 0) {
          this.control && this.control.reset(n);
        }
        hasError(n, e) {
          return !!this.control && this.control.hasError(n, e);
        }
        getError(n, e) {
          return this.control ? this.control.getError(n, e) : null;
        }
      }
      class en extends iT {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class ai extends iT {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class oT {
        constructor(n) {
          this._cd = n;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let va = (() => {
        class t extends oT {
          constructor(e) {
            super(e);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(D(ai, 2));
          });
          static #t = (this.ɵdir = Y({
            type: t,
            selectors: [
              ["", "formControlName", ""],
              ["", "ngModel", ""],
              ["", "formControl", ""],
            ],
            hostVars: 14,
            hostBindings: function (i, o) {
              2 & i &&
                On("ng-untouched", o.isUntouched)("ng-touched", o.isTouched)(
                  "ng-pristine",
                  o.isPristine
                )("ng-dirty", o.isDirty)("ng-valid", o.isValid)(
                  "ng-invalid",
                  o.isInvalid
                )("ng-pending", o.isPending);
            },
            features: [te],
          }));
        }
        return t;
      })();
      const ba = "VALID",
        nu = "INVALID",
        jr = "PENDING",
        Ca = "DISABLED";
      function iu(t) {
        return null != t && !Array.isArray(t) && "object" == typeof t;
      }
      class lT {
        constructor(n, e) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(n),
            this._assignAsyncValidators(e);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(n) {
          this._rawValidators = this._composedValidatorFn = n;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(n) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = n;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === ba;
        }
        get invalid() {
          return this.status === nu;
        }
        get pending() {
          return this.status == jr;
        }
        get disabled() {
          return this.status === Ca;
        }
        get enabled() {
          return this.status !== Ca;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(n) {
          this._assignValidators(n);
        }
        setAsyncValidators(n) {
          this._assignAsyncValidators(n);
        }
        addValidators(n) {
          this.setValidators(tT(n, this._rawValidators));
        }
        addAsyncValidators(n) {
          this.setAsyncValidators(tT(n, this._rawAsyncValidators));
        }
        removeValidators(n) {
          this.setValidators(nT(n, this._rawValidators));
        }
        removeAsyncValidators(n) {
          this.setAsyncValidators(nT(n, this._rawAsyncValidators));
        }
        hasValidator(n) {
          return eu(this._rawValidators, n);
        }
        hasAsyncValidator(n) {
          return eu(this._rawAsyncValidators, n);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(n = {}) {
          (this.touched = !0),
            this._parent && !n.onlySelf && this._parent.markAsTouched(n);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((n) => n.markAllAsTouched());
        }
        markAsUntouched(n = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !n.onlySelf && this._parent._updateTouched(n);
        }
        markAsDirty(n = {}) {
          (this.pristine = !1),
            this._parent && !n.onlySelf && this._parent.markAsDirty(n);
        }
        markAsPristine(n = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !n.onlySelf && this._parent._updatePristine(n);
        }
        markAsPending(n = {}) {
          (this.status = jr),
            !1 !== n.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !n.onlySelf && this._parent.markAsPending(n);
        }
        disable(n = {}) {
          const e = this._parentMarkedDirty(n.onlySelf);
          (this.status = Ca),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable({ ...n, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== n.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...n, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(n = {}) {
          const e = this._parentMarkedDirty(n.onlySelf);
          (this.status = ba),
            this._forEachChild((i) => {
              i.enable({ ...n, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: n.emitEvent,
            }),
            this._updateAncestors({ ...n, skipPristineCheck: e }),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(n) {
          this._parent &&
            !n.onlySelf &&
            (this._parent.updateValueAndValidity(n),
            n.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(n) {
          this._parent = n;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(n = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === ba || this.status === jr) &&
                this._runAsyncValidator(n.emitEvent)),
            !1 !== n.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !n.onlySelf &&
              this._parent.updateValueAndValidity(n);
        }
        _updateTreeValidity(n = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(n)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: n.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Ca : ba;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(n) {
          if (this.asyncValidator) {
            (this.status = jr), (this._hasOwnPendingAsyncValidator = !0);
            const e = Ww(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: n });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(n, e = {}) {
          (this.errors = n), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(n) {
          let e = n;
          return null == e ||
            (Array.isArray(e) || (e = e.split(".")), 0 === e.length)
            ? null
            : e.reduce((i, o) => i && i._find(o), this);
        }
        getError(n, e) {
          const i = e ? this.get(e) : this;
          return i && i.errors ? i.errors[n] : null;
        }
        hasError(n, e) {
          return !!this.getError(n, e);
        }
        get root() {
          let n = this;
          for (; n._parent; ) n = n._parent;
          return n;
        }
        _updateControlsErrors(n) {
          (this.status = this._calculateStatus()),
            n && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(n);
        }
        _initObservables() {
          (this.valueChanges = new L()), (this.statusChanges = new L());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Ca
            : this.errors
            ? nu
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(jr)
            ? jr
            : this._anyControlsHaveStatus(nu)
            ? nu
            : ba;
        }
        _anyControlsHaveStatus(n) {
          return this._anyControls((e) => e.status === n);
        }
        _anyControlsDirty() {
          return this._anyControls((n) => n.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((n) => n.touched);
        }
        _updatePristine(n = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !n.onlySelf && this._parent._updatePristine(n);
        }
        _updateTouched(n = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !n.onlySelf && this._parent._updateTouched(n);
        }
        _registerOnCollectionChange(n) {
          this._onCollectionChange = n;
        }
        _setUpdateStrategy(n) {
          iu(n) && null != n.updateOn && (this._updateOn = n.updateOn);
        }
        _parentMarkedDirty(n) {
          return (
            !n &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(n) {
          return null;
        }
        _assignValidators(n) {
          (this._rawValidators = Array.isArray(n) ? n.slice() : n),
            (this._composedValidatorFn = (function X6(t) {
              return Array.isArray(t) ? Nf(t) : t || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(n) {
          (this._rawAsyncValidators = Array.isArray(n) ? n.slice() : n),
            (this._composedAsyncValidatorFn = (function eP(t) {
              return Array.isArray(t) ? Vf(t) : t || null;
            })(this._rawAsyncValidators));
        }
      }
      const Ur = new G("CallSetDisabledState", {
          providedIn: "root",
          factory: () => ou,
        }),
        ou = "always";
      function wa(t, n, e = ou) {
        (function Gf(t, n) {
          const e = (function Xw(t) {
            return t._rawValidators;
          })(t);
          null !== n.validator
            ? t.setValidators(Jw(e, n.validator))
            : "function" == typeof e && t.setValidators([e]);
          const i = (function eT(t) {
            return t._rawAsyncValidators;
          })(t);
          null !== n.asyncValidator
            ? t.setAsyncValidators(Jw(i, n.asyncValidator))
            : "function" == typeof i && t.setAsyncValidators([i]);
          const o = () => t.updateValueAndValidity();
          au(n._rawValidators, o), au(n._rawAsyncValidators, o);
        })(t, n),
          n.valueAccessor.writeValue(t.value),
          (t.disabled || "always" === e) &&
            n.valueAccessor.setDisabledState?.(t.disabled),
          (function iP(t, n) {
            n.valueAccessor.registerOnChange((e) => {
              (t._pendingValue = e),
                (t._pendingChange = !0),
                (t._pendingDirty = !0),
                "change" === t.updateOn && cT(t, n);
            });
          })(t, n),
          (function rP(t, n) {
            const e = (i, o) => {
              n.valueAccessor.writeValue(i), o && n.viewToModelUpdate(i);
            };
            t.registerOnChange(e),
              n._registerOnDestroy(() => {
                t._unregisterOnChange(e);
              });
          })(t, n),
          (function oP(t, n) {
            n.valueAccessor.registerOnTouched(() => {
              (t._pendingTouched = !0),
                "blur" === t.updateOn && t._pendingChange && cT(t, n),
                "submit" !== t.updateOn && t.markAsTouched();
            });
          })(t, n),
          (function nP(t, n) {
            if (n.valueAccessor.setDisabledState) {
              const e = (i) => {
                n.valueAccessor.setDisabledState(i);
              };
              t.registerOnDisabledChange(e),
                n._registerOnDestroy(() => {
                  t._unregisterOnDisabledChange(e);
                });
            }
          })(t, n);
      }
      function au(t, n) {
        t.forEach((e) => {
          e.registerOnValidatorChange && e.registerOnValidatorChange(n);
        });
      }
      function cT(t, n) {
        t._pendingDirty && t.markAsDirty(),
          t.setValue(t._pendingValue, { emitModelToViewChange: !1 }),
          n.viewToModelUpdate(t._pendingValue),
          (t._pendingChange = !1);
      }
      function pT(t, n) {
        const e = t.indexOf(n);
        e > -1 && t.splice(e, 1);
      }
      function hT(t) {
        return (
          "object" == typeof t &&
          null !== t &&
          2 === Object.keys(t).length &&
          "value" in t &&
          "disabled" in t
        );
      }
      const fT = class extends lT {
          constructor(n = null, e, i) {
            super(
              (function $f(t) {
                return (iu(t) ? t.validators : t) || null;
              })(e),
              (function jf(t, n) {
                return (iu(n) ? n.asyncValidators : t) || null;
              })(i, e)
            ),
              (this.defaultValue = null),
              (this._onChange = []),
              (this._pendingChange = !1),
              this._applyFormState(n),
              this._setUpdateStrategy(e),
              this._initObservables(),
              this.updateValueAndValidity({
                onlySelf: !0,
                emitEvent: !!this.asyncValidator,
              }),
              iu(e) &&
                (e.nonNullable || e.initialValueIsDefault) &&
                (this.defaultValue = hT(n) ? n.value : n);
          }
          setValue(n, e = {}) {
            (this.value = this._pendingValue = n),
              this._onChange.length &&
                !1 !== e.emitModelToViewChange &&
                this._onChange.forEach((i) =>
                  i(this.value, !1 !== e.emitViewToModelChange)
                ),
              this.updateValueAndValidity(e);
          }
          patchValue(n, e = {}) {
            this.setValue(n, e);
          }
          reset(n = this.defaultValue, e = {}) {
            this._applyFormState(n),
              this.markAsPristine(e),
              this.markAsUntouched(e),
              this.setValue(this.value, e),
              (this._pendingChange = !1);
          }
          _updateValue() {}
          _anyControls(n) {
            return !1;
          }
          _allControlsDisabled() {
            return this.disabled;
          }
          registerOnChange(n) {
            this._onChange.push(n);
          }
          _unregisterOnChange(n) {
            pT(this._onChange, n);
          }
          registerOnDisabledChange(n) {
            this._onDisabledChange.push(n);
          }
          _unregisterOnDisabledChange(n) {
            pT(this._onDisabledChange, n);
          }
          _forEachChild(n) {}
          _syncPendingControls() {
            return !(
              "submit" !== this.updateOn ||
              (this._pendingDirty && this.markAsDirty(),
              this._pendingTouched && this.markAsTouched(),
              !this._pendingChange) ||
              (this.setValue(this._pendingValue, {
                onlySelf: !0,
                emitModelToViewChange: !1,
              }),
              0)
            );
          }
          _applyFormState(n) {
            hT(n)
              ? ((this.value = this._pendingValue = n.value),
                n.disabled
                  ? this.disable({ onlySelf: !0, emitEvent: !1 })
                  : this.enable({ onlySelf: !0, emitEvent: !1 }))
              : (this.value = this._pendingValue = n);
          }
        },
        hP = { provide: ai, useExisting: Te(() => io) },
        _T = (() => Promise.resolve())();
      let io = (() => {
        class t extends ai {
          constructor(e, i, o, r, s, a) {
            super(),
              (this._changeDetectorRef = s),
              (this.callSetDisabledState = a),
              (this.control = new fT()),
              (this._registered = !1),
              (this.name = ""),
              (this.update = new L()),
              (this._parent = e),
              this._setValidators(i),
              this._setAsyncValidators(o),
              (this.valueAccessor = (function qf(t, n) {
                if (!n) return null;
                let e, i, o;
                return (
                  Array.isArray(n),
                  n.forEach((r) => {
                    r.constructor === Jc
                      ? (e = r)
                      : (function lP(t) {
                          return Object.getPrototypeOf(t.constructor) === Mo;
                        })(r)
                      ? (i = r)
                      : (o = r);
                  }),
                  o || i || e || null
                );
              })(0, r));
          }
          ngOnChanges(e) {
            if ((this._checkForErrors(), !this._registered || "name" in e)) {
              if (this._registered && (this._checkName(), this.formDirective)) {
                const i = e.name.previousValue;
                this.formDirective.removeControl({
                  name: i,
                  path: this._getPath(i),
                });
              }
              this._setUpControl();
            }
            "isDisabled" in e && this._updateDisabled(e),
              (function Kf(t, n) {
                if (!t.hasOwnProperty("model")) return !1;
                const e = t.model;
                return !!e.isFirstChange() || !Object.is(n, e.currentValue);
              })(e, this.viewModel) &&
                (this._updateValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          get path() {
            return this._getPath(this.name);
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          viewToModelUpdate(e) {
            (this.viewModel = e), this.update.emit(e);
          }
          _setUpControl() {
            this._setUpdateStrategy(),
              this._isStandalone()
                ? this._setUpStandalone()
                : this.formDirective.addControl(this),
              (this._registered = !0);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.control._updateOn = this.options.updateOn);
          }
          _isStandalone() {
            return (
              !this._parent || !(!this.options || !this.options.standalone)
            );
          }
          _setUpStandalone() {
            wa(this.control, this, this.callSetDisabledState),
              this.control.updateValueAndValidity({ emitEvent: !1 });
          }
          _checkForErrors() {
            this._isStandalone() || this._checkParentType(), this._checkName();
          }
          _checkParentType() {}
          _checkName() {
            this.options &&
              this.options.name &&
              (this.name = this.options.name),
              this._isStandalone();
          }
          _updateValue(e) {
            _T.then(() => {
              this.control.setValue(e, { emitViewToModelChange: !1 }),
                this._changeDetectorRef?.markForCheck();
            });
          }
          _updateDisabled(e) {
            const i = e.isDisabled.currentValue,
              o = 0 !== i && zr(i);
            _T.then(() => {
              o && !this.control.disabled
                ? this.control.disable()
                : !o && this.control.disabled && this.control.enable(),
                this._changeDetectorRef?.markForCheck();
            });
          }
          _getPath(e) {
            return this._parent
              ? (function ru(t, n) {
                  return [...n.path, t];
                })(e, this._parent)
              : [e];
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(
              D(en, 9),
              D(Ht, 10),
              D(no, 10),
              D(Rt, 10),
              D(Ct, 8),
              D(Ur, 8)
            );
          });
          static #t = (this.ɵdir = Y({
            type: t,
            selectors: [
              [
                "",
                "ngModel",
                "",
                3,
                "formControlName",
                "",
                3,
                "formControl",
                "",
              ],
            ],
            inputs: {
              name: "name",
              isDisabled: ["disabled", "isDisabled"],
              model: ["ngModel", "model"],
              options: ["ngModelOptions", "options"],
            },
            outputs: { update: "ngModelChange" },
            exportAs: ["ngModel"],
            features: [Ee([hP]), te, _t],
          }));
        }
        return t;
      })();
      const gP = { provide: Rt, useExisting: Te(() => Yf), multi: !0 };
      let Yf = (() => {
          class t extends Mo {
            writeValue(e) {
              this.setProperty("value", e ?? "");
            }
            registerOnChange(e) {
              this.onChange = (i) => {
                e("" == i ? null : parseFloat(i));
              };
            }
            static #e = (this.ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })());
            static #t = (this.ɵdir = Y({
              type: t,
              selectors: [
                ["input", "type", "number", "formControlName", ""],
                ["input", "type", "number", "formControl", ""],
                ["input", "type", "number", "ngModel", ""],
              ],
              hostBindings: function (i, o) {
                1 & i &&
                  A("input", function (s) {
                    return o.onChange(s.target.value);
                  })("blur", function () {
                    return o.onTouched();
                  });
              },
              features: [Ee([gP]), te],
            }));
          }
          return t;
        })(),
        yT = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = Re({ type: t }));
            static #n = (this.ɵinj = xe({}));
          }
          return t;
        })(),
        Oo = (() => {
          class t {
            constructor() {
              this._validator = Xc;
            }
            ngOnChanges(e) {
              if (this.inputName in e) {
                const i = this.normalizeInput(e[this.inputName].currentValue);
                (this._enabled = this.enabled(i)),
                  (this._validator = this._enabled
                    ? this.createValidator(i)
                    : Xc),
                  this._onChange && this._onChange();
              }
            }
            validate(e) {
              return this._validator(e);
            }
            registerOnValidatorChange(e) {
              this._onChange = e;
            }
            enabled(e) {
              return null != e;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵdir = Y({ type: t, features: [_t] }));
          }
          return t;
        })();
      const kP = { provide: Ht, useExisting: Te(() => cu), multi: !0 };
      let cu = (() => {
          class t extends Oo {
            constructor() {
              super(...arguments),
                (this.inputName = "required"),
                (this.normalizeInput = zr),
                (this.createValidator = (e) => Bw);
            }
            enabled(e) {
              return e;
            }
            static #e = (this.ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })());
            static #t = (this.ɵdir = Y({
              type: t,
              selectors: [
                [
                  "",
                  "required",
                  "",
                  "formControlName",
                  "",
                  3,
                  "type",
                  "checkbox",
                ],
                ["", "required", "", "formControl", "", 3, "type", "checkbox"],
                ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
              ],
              hostVars: 1,
              hostBindings: function (i, o) {
                2 & i && x("required", o._enabled ? "" : null);
              },
              inputs: { required: "required" },
              features: [Ee([kP]), te],
            }));
          }
          return t;
        })(),
        VP = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = Re({ type: t }));
            static #n = (this.ɵinj = xe({ imports: [yT] }));
          }
          return t;
        })(),
        Sa = (() => {
          class t {
            static withConfig(e) {
              return {
                ngModule: t,
                providers: [
                  { provide: Ur, useValue: e.callSetDisabledState ?? ou },
                ],
              };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵmod = Re({ type: t }));
            static #n = (this.ɵinj = xe({ imports: [VP] }));
          }
          return t;
        })();
      class P {
        static equals(n, e, i) {
          return i
            ? this.resolveFieldData(n, i) === this.resolveFieldData(e, i)
            : this.equalsByValue(n, e);
        }
        static equalsByValue(n, e) {
          if (n === e) return !0;
          if (n && e && "object" == typeof n && "object" == typeof e) {
            var r,
              s,
              a,
              i = Array.isArray(n),
              o = Array.isArray(e);
            if (i && o) {
              if ((s = n.length) != e.length) return !1;
              for (r = s; 0 != r--; )
                if (!this.equalsByValue(n[r], e[r])) return !1;
              return !0;
            }
            if (i != o) return !1;
            var l = this.isDate(n),
              c = this.isDate(e);
            if (l != c) return !1;
            if (l && c) return n.getTime() == e.getTime();
            var u = n instanceof RegExp,
              h = e instanceof RegExp;
            if (u != h) return !1;
            if (u && h) return n.toString() == e.toString();
            var m = Object.keys(n);
            if ((s = m.length) !== Object.keys(e).length) return !1;
            for (r = s; 0 != r--; )
              if (!Object.prototype.hasOwnProperty.call(e, m[r])) return !1;
            for (r = s; 0 != r--; )
              if (!this.equalsByValue(n[(a = m[r])], e[a])) return !1;
            return !0;
          }
          return n != n && e != e;
        }
        static resolveFieldData(n, e) {
          if (n && e) {
            if (this.isFunction(e)) return e(n);
            if (-1 == e.indexOf(".")) return n[e];
            {
              let i = e.split("."),
                o = n;
              for (let r = 0, s = i.length; r < s; ++r) {
                if (null == o) return null;
                o = o[i[r]];
              }
              return o;
            }
          }
          return null;
        }
        static isFunction(n) {
          return !!(n && n.constructor && n.call && n.apply);
        }
        static reorderArray(n, e, i) {
          n &&
            e !== i &&
            (i >= n.length && ((i %= n.length), (e %= n.length)),
            n.splice(i, 0, n.splice(e, 1)[0]));
        }
        static insertIntoOrderedArray(n, e, i, o) {
          if (i.length > 0) {
            let r = !1;
            for (let s = 0; s < i.length; s++)
              if (this.findIndexInList(i[s], o) > e) {
                i.splice(s, 0, n), (r = !0);
                break;
              }
            r || i.push(n);
          } else i.push(n);
        }
        static findIndexInList(n, e) {
          let i = -1;
          if (e)
            for (let o = 0; o < e.length; o++)
              if (e[o] == n) {
                i = o;
                break;
              }
          return i;
        }
        static contains(n, e) {
          if (null != n && e && e.length)
            for (let i of e) if (this.equals(n, i)) return !0;
          return !1;
        }
        static removeAccents(n) {
          return (
            n &&
              n.search(/[\xC0-\xFF]/g) > -1 &&
              (n = n
                .replace(/[\xC0-\xC5]/g, "A")
                .replace(/[\xC6]/g, "AE")
                .replace(/[\xC7]/g, "C")
                .replace(/[\xC8-\xCB]/g, "E")
                .replace(/[\xCC-\xCF]/g, "I")
                .replace(/[\xD0]/g, "D")
                .replace(/[\xD1]/g, "N")
                .replace(/[\xD2-\xD6\xD8]/g, "O")
                .replace(/[\xD9-\xDC]/g, "U")
                .replace(/[\xDD]/g, "Y")
                .replace(/[\xDE]/g, "P")
                .replace(/[\xE0-\xE5]/g, "a")
                .replace(/[\xE6]/g, "ae")
                .replace(/[\xE7]/g, "c")
                .replace(/[\xE8-\xEB]/g, "e")
                .replace(/[\xEC-\xEF]/g, "i")
                .replace(/[\xF1]/g, "n")
                .replace(/[\xF2-\xF6\xF8]/g, "o")
                .replace(/[\xF9-\xFC]/g, "u")
                .replace(/[\xFE]/g, "p")
                .replace(/[\xFD\xFF]/g, "y")),
            n
          );
        }
        static isDate(n) {
          return "[object Date]" === Object.prototype.toString.call(n);
        }
        static isEmpty(n) {
          return (
            null == n ||
            "" === n ||
            (Array.isArray(n) && 0 === n.length) ||
            (!this.isDate(n) &&
              "object" == typeof n &&
              0 === Object.keys(n).length)
          );
        }
        static isNotEmpty(n) {
          return !this.isEmpty(n);
        }
        static compare(n, e, i, o = 1) {
          let r = -1;
          const s = this.isEmpty(n),
            a = this.isEmpty(e);
          return (
            (r =
              s && a
                ? 0
                : s
                ? o
                : a
                ? -o
                : "string" == typeof n && "string" == typeof e
                ? n.localeCompare(e, i, { numeric: !0 })
                : n < e
                ? -1
                : n > e
                ? 1
                : 0),
            r
          );
        }
        static sort(n, e, i = 1, o, r = 1) {
          return (1 === r ? i : r) * P.compare(n, e, o, i);
        }
        static merge(n, e) {
          if (null != n || null != e)
            return (null != n && "object" != typeof n) ||
              (null != e && "object" != typeof e)
              ? (null != n && "string" != typeof n) ||
                (null != e && "string" != typeof e)
                ? e || n
                : [n || "", e || ""].join(" ")
              : { ...(n || {}), ...(e || {}) };
        }
        static isPrintableCharacter(n = "") {
          return this.isNotEmpty(n) && 1 === n.length && n.match(/\S| /);
        }
        static getItemValue(n, ...e) {
          return this.isFunction(n) ? n(...e) : n;
        }
        static findLastIndex(n, e) {
          let i = -1;
          if (this.isNotEmpty(n))
            try {
              i = n.findLastIndex(e);
            } catch {
              i = n.lastIndexOf([...n].reverse().find(e));
            }
          return i;
        }
        static findLast(n, e) {
          let i;
          if (this.isNotEmpty(n))
            try {
              i = n.findLast(e);
            } catch {
              i = [...n].reverse().find(e);
            }
          return i;
        }
      }
      var PT = 0;
      function zt(t = "pn_id_") {
        return `${t}${++PT}`;
      }
      var yn = (function HP() {
        let t = [];
        const o = (r) => (r && parseInt(r.style.zIndex, 10)) || 0;
        return {
          get: o,
          set: (r, s, a) => {
            s &&
              (s.style.zIndex = String(
                ((r, s) => {
                  let a = t.length > 0 ? t[t.length - 1] : { key: r, value: s },
                    l = a.value + (a.key === r ? 0 : s) + 2;
                  return t.push({ key: r, value: l }), l;
                })(r, a)
              ));
          },
          clear: (r) => {
            r &&
              (((r) => {
                t = t.filter((s) => s.value !== r);
              })(o(r)),
              (r.style.zIndex = ""));
          },
          getCurrent: () => (t.length > 0 ? t[t.length - 1].value : 0),
        };
      })();
      const NT = ["*"];
      let at = (() =>
          class t {
            static STARTS_WITH = "startsWith";
            static CONTAINS = "contains";
            static NOT_CONTAINS = "notContains";
            static ENDS_WITH = "endsWith";
            static EQUALS = "equals";
            static NOT_EQUALS = "notEquals";
            static IN = "in";
            static LESS_THAN = "lt";
            static LESS_THAN_OR_EQUAL_TO = "lte";
            static GREATER_THAN = "gt";
            static GREATER_THAN_OR_EQUAL_TO = "gte";
            static BETWEEN = "between";
            static IS = "is";
            static IS_NOT = "isNot";
            static BEFORE = "before";
            static AFTER = "after";
            static DATE_IS = "dateIs";
            static DATE_IS_NOT = "dateIsNot";
            static DATE_BEFORE = "dateBefore";
            static DATE_AFTER = "dateAfter";
          })(),
        Ia = (() =>
          class t {
            static AND = "and";
            static OR = "or";
          })(),
        uu = (() => {
          class t {
            filter(e, i, o, r, s) {
              let a = [];
              if (e)
                for (let l of e)
                  for (let c of i) {
                    let u = P.resolveFieldData(l, c);
                    if (this.filters[r](u, o, s)) {
                      a.push(l);
                      break;
                    }
                  }
              return a;
            }
            filters = {
              startsWith: (e, i, o) => {
                if (null == i || "" === i.trim()) return !0;
                if (null == e) return !1;
                let r = P.removeAccents(i.toString()).toLocaleLowerCase(o);
                return (
                  P.removeAccents(e.toString())
                    .toLocaleLowerCase(o)
                    .slice(0, r.length) === r
                );
              },
              contains: (e, i, o) => {
                if (null == i || ("string" == typeof i && "" === i.trim()))
                  return !0;
                if (null == e) return !1;
                let r = P.removeAccents(i.toString()).toLocaleLowerCase(o);
                return (
                  -1 !==
                  P.removeAccents(e.toString()).toLocaleLowerCase(o).indexOf(r)
                );
              },
              notContains: (e, i, o) => {
                if (null == i || ("string" == typeof i && "" === i.trim()))
                  return !0;
                if (null == e) return !1;
                let r = P.removeAccents(i.toString()).toLocaleLowerCase(o);
                return (
                  -1 ===
                  P.removeAccents(e.toString()).toLocaleLowerCase(o).indexOf(r)
                );
              },
              endsWith: (e, i, o) => {
                if (null == i || "" === i.trim()) return !0;
                if (null == e) return !1;
                let r = P.removeAccents(i.toString()).toLocaleLowerCase(o),
                  s = P.removeAccents(e.toString()).toLocaleLowerCase(o);
                return -1 !== s.indexOf(r, s.length - r.length);
              },
              equals: (e, i, o) =>
                null == i ||
                ("string" == typeof i && "" === i.trim()) ||
                (null != e &&
                  (e.getTime && i.getTime
                    ? e.getTime() === i.getTime()
                    : P.removeAccents(e.toString()).toLocaleLowerCase(o) ==
                      P.removeAccents(i.toString()).toLocaleLowerCase(o))),
              notEquals: (e, i, o) =>
                !(
                  null == i ||
                  ("string" == typeof i && "" === i.trim()) ||
                  (null != e &&
                    (e.getTime && i.getTime
                      ? e.getTime() === i.getTime()
                      : P.removeAccents(e.toString()).toLocaleLowerCase(o) ==
                        P.removeAccents(i.toString()).toLocaleLowerCase(o)))
                ),
              in: (e, i) => {
                if (null == i || 0 === i.length) return !0;
                for (let o = 0; o < i.length; o++)
                  if (P.equals(e, i[o])) return !0;
                return !1;
              },
              between: (e, i) =>
                null == i ||
                null == i[0] ||
                null == i[1] ||
                (null != e &&
                  (e.getTime
                    ? i[0].getTime() <= e.getTime() &&
                      e.getTime() <= i[1].getTime()
                    : i[0] <= e && e <= i[1])),
              lt: (e, i, o) =>
                null == i ||
                (null != e &&
                  (e.getTime && i.getTime ? e.getTime() < i.getTime() : e < i)),
              lte: (e, i, o) =>
                null == i ||
                (null != e &&
                  (e.getTime && i.getTime
                    ? e.getTime() <= i.getTime()
                    : e <= i)),
              gt: (e, i, o) =>
                null == i ||
                (null != e &&
                  (e.getTime && i.getTime ? e.getTime() > i.getTime() : e > i)),
              gte: (e, i, o) =>
                null == i ||
                (null != e &&
                  (e.getTime && i.getTime
                    ? e.getTime() >= i.getTime()
                    : e >= i)),
              is: (e, i, o) => this.filters.equals(e, i, o),
              isNot: (e, i, o) => this.filters.notEquals(e, i, o),
              before: (e, i, o) => this.filters.lt(e, i, o),
              after: (e, i, o) => this.filters.gt(e, i, o),
              dateIs: (e, i) =>
                null == i ||
                (null != e && e.toDateString() === i.toDateString()),
              dateIsNot: (e, i) =>
                null == i ||
                (null != e && e.toDateString() !== i.toDateString()),
              dateBefore: (e, i) =>
                null == i || (null != e && e.getTime() < i.getTime()),
              dateAfter: (e, i) =>
                null == i || (null != e && e.getTime() > i.getTime()),
            };
            register(e, i) {
              this.filters[e] = i;
            }
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵprov = K({ token: t, factory: t.ɵfac, providedIn: "root" });
          }
          return t;
        })(),
        Da = (() => {
          class t {
            clickSource = new ct();
            clickObservable = this.clickSource.asObservable();
            add(e) {
              e && this.clickSource.next(e);
            }
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵprov = K({ token: t, factory: t.ɵfac, providedIn: "root" });
          }
          return t;
        })(),
        Ri = (() => {
          class t {
            ripple = !1;
            inputStyle = "outlined";
            overlayOptions = {};
            filterMatchModeOptions = {
              text: [
                at.STARTS_WITH,
                at.CONTAINS,
                at.NOT_CONTAINS,
                at.ENDS_WITH,
                at.EQUALS,
                at.NOT_EQUALS,
              ],
              numeric: [
                at.EQUALS,
                at.NOT_EQUALS,
                at.LESS_THAN,
                at.LESS_THAN_OR_EQUAL_TO,
                at.GREATER_THAN,
                at.GREATER_THAN_OR_EQUAL_TO,
              ],
              date: [at.DATE_IS, at.DATE_IS_NOT, at.DATE_BEFORE, at.DATE_AFTER],
            };
            translation = {
              startsWith: "Starts with",
              contains: "Contains",
              notContains: "Not contains",
              endsWith: "Ends with",
              equals: "Equals",
              notEquals: "Not equals",
              noFilter: "No Filter",
              lt: "Less than",
              lte: "Less than or equal to",
              gt: "Greater than",
              gte: "Greater than or equal to",
              is: "Is",
              isNot: "Is not",
              before: "Before",
              after: "After",
              dateIs: "Date is",
              dateIsNot: "Date is not",
              dateBefore: "Date is before",
              dateAfter: "Date is after",
              clear: "Clear",
              apply: "Apply",
              matchAll: "Match All",
              matchAny: "Match Any",
              addRule: "Add Rule",
              removeRule: "Remove Rule",
              accept: "Yes",
              reject: "No",
              choose: "Choose",
              upload: "Upload",
              cancel: "Cancel",
              pending: "Pending",
              fileSizeTypes: [
                "B",
                "KB",
                "MB",
                "GB",
                "TB",
                "PB",
                "EB",
                "ZB",
                "YB",
              ],
              dayNames: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
              ],
              dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
              dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
              monthNames: [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
              ],
              monthNamesShort: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
              ],
              chooseYear: "Choose Year",
              chooseMonth: "Choose Month",
              chooseDate: "Choose Date",
              prevDecade: "Previous Decade",
              nextDecade: "Next Decade",
              prevYear: "Previous Year",
              nextYear: "Next Year",
              prevMonth: "Previous Month",
              nextMonth: "Next Month",
              prevHour: "Previous Hour",
              nextHour: "Next Hour",
              prevMinute: "Previous Minute",
              nextMinute: "Next Minute",
              prevSecond: "Previous Second",
              nextSecond: "Next Second",
              am: "am",
              pm: "pm",
              dateFormat: "mm/dd/yy",
              firstDayOfWeek: 0,
              today: "Today",
              weekHeader: "Wk",
              weak: "Weak",
              medium: "Medium",
              strong: "Strong",
              passwordPrompt: "Enter a password",
              emptyMessage: "No results found",
              searchMessage: "{0} results are available",
              selectionMessage: "{0} items selected",
              emptySelectionMessage: "No selected item",
              emptySearchMessage: "No results found",
              emptyFilterMessage: "No results found",
              aria: {
                trueLabel: "True",
                falseLabel: "False",
                nullLabel: "Not Selected",
                star: "1 star",
                stars: "{star} stars",
                selectAll: "All items selected",
                unselectAll: "All items unselected",
                close: "Close",
                previous: "Previous",
                next: "Next",
                navigation: "Navigation",
                scrollTop: "Scroll Top",
                moveTop: "Move Top",
                moveUp: "Move Up",
                moveDown: "Move Down",
                moveBottom: "Move Bottom",
                moveToTarget: "Move to Target",
                moveToSource: "Move to Source",
                moveAllToTarget: "Move All to Target",
                moveAllToSource: "Move All to Source",
                pageLabel: "{page}",
                firstPageLabel: "First Page",
                lastPageLabel: "Last Page",
                nextPageLabel: "Next Page",
                prevPageLabel: "Previous Page",
                rowsPerPageLabel: "Rows per page",
                previousPageLabel: "Previous Page",
                jumpToPageDropdownLabel: "Jump to Page Dropdown",
                jumpToPageInputLabel: "Jump to Page Input",
                selectRow: "Row Selected",
                unselectRow: "Row Unselected",
                expandRow: "Row Expanded",
                collapseRow: "Row Collapsed",
                showFilterMenu: "Show Filter Menu",
                hideFilterMenu: "Hide Filter Menu",
                filterOperator: "Filter Operator",
                filterConstraint: "Filter Constraint",
                editRow: "Row Edit",
                saveEdit: "Save Edit",
                cancelEdit: "Cancel Edit",
                listView: "List View",
                gridView: "Grid View",
                slide: "Slide",
                slideNumber: "{slideNumber}",
                zoomImage: "Zoom Image",
                zoomIn: "Zoom In",
                zoomOut: "Zoom Out",
                rotateRight: "Rotate Right",
                rotateLeft: "Rotate Left",
              },
            };
            zIndex = { modal: 1100, overlay: 1e3, menu: 1e3, tooltip: 1100 };
            translationSource = new ct();
            translationObserver = this.translationSource.asObservable();
            getTranslation(e) {
              return this.translation[e];
            }
            setTranslation(e) {
              (this.translation = { ...this.translation, ...e }),
                this.translationSource.next(this.translation);
            }
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵprov = K({ token: t, factory: t.ɵfac, providedIn: "root" });
          }
          return t;
        })(),
        $P = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-header"]],
              ngContentSelectors: NT,
              decls: 1,
              vars: 0,
              template: function (i, o) {
                1 & i && (Ii(), jn(0));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        jP = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-footer"]],
              ngContentSelectors: NT,
              decls: 1,
              vars: 0,
              template: function (i, o) {
                1 & i && (Ii(), jn(0));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        It = (() => {
          class t {
            template;
            type;
            name;
            constructor(e) {
              this.template = e;
            }
            getType() {
              return this.name;
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Wn));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pTemplate", ""]],
              inputs: { type: "type", name: ["pTemplate", "name"] },
            });
          }
          return t;
        })(),
        ht = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt] });
          }
          return t;
        })(),
        lt = (() =>
          class t {
            static STARTS_WITH = "startsWith";
            static CONTAINS = "contains";
            static NOT_CONTAINS = "notContains";
            static ENDS_WITH = "endsWith";
            static EQUALS = "equals";
            static NOT_EQUALS = "notEquals";
            static NO_FILTER = "noFilter";
            static LT = "lt";
            static LTE = "lte";
            static GT = "gt";
            static GTE = "gte";
            static IS = "is";
            static IS_NOT = "isNot";
            static BEFORE = "before";
            static AFTER = "after";
            static CLEAR = "clear";
            static APPLY = "apply";
            static MATCH_ALL = "matchAll";
            static MATCH_ANY = "matchAny";
            static ADD_RULE = "addRule";
            static REMOVE_RULE = "removeRule";
            static ACCEPT = "accept";
            static REJECT = "reject";
            static CHOOSE = "choose";
            static UPLOAD = "upload";
            static CANCEL = "cancel";
            static PENDING = "pending";
            static FILE_SIZE_TYPES = "fileSizeTypes";
            static DAY_NAMES = "dayNames";
            static DAY_NAMES_SHORT = "dayNamesShort";
            static DAY_NAMES_MIN = "dayNamesMin";
            static MONTH_NAMES = "monthNames";
            static MONTH_NAMES_SHORT = "monthNamesShort";
            static FIRST_DAY_OF_WEEK = "firstDayOfWeek";
            static TODAY = "today";
            static WEEK_HEADER = "weekHeader";
            static WEAK = "weak";
            static MEDIUM = "medium";
            static STRONG = "strong";
            static PASSWORD_PROMPT = "passwordPrompt";
            static EMPTY_MESSAGE = "emptyMessage";
            static EMPTY_FILTER_MESSAGE = "emptyFilterMessage";
          })(),
        w = (() => {
          class t {
            static zindex = 1e3;
            static calculatedScrollbarWidth = null;
            static calculatedScrollbarHeight = null;
            static browser;
            static addClass(e, i) {
              e &&
                i &&
                (e.classList ? e.classList.add(i) : (e.className += " " + i));
            }
            static addMultipleClasses(e, i) {
              if (e && i)
                if (e.classList) {
                  let o = i.trim().split(" ");
                  for (let r = 0; r < o.length; r++) e.classList.add(o[r]);
                } else {
                  let o = i.split(" ");
                  for (let r = 0; r < o.length; r++) e.className += " " + o[r];
                }
            }
            static removeClass(e, i) {
              e &&
                i &&
                (e.classList
                  ? e.classList.remove(i)
                  : (e.className = e.className.replace(
                      new RegExp(
                        "(^|\\b)" + i.split(" ").join("|") + "(\\b|$)",
                        "gi"
                      ),
                      " "
                    )));
            }
            static removeMultipleClasses(e, i) {
              e &&
                i &&
                [i]
                  .flat()
                  .filter(Boolean)
                  .forEach((o) =>
                    o.split(" ").forEach((r) => this.removeClass(e, r))
                  );
            }
            static hasClass(e, i) {
              return (
                !(!e || !i) &&
                (e.classList
                  ? e.classList.contains(i)
                  : new RegExp("(^| )" + i + "( |$)", "gi").test(e.className))
              );
            }
            static siblings(e) {
              return Array.prototype.filter.call(
                e.parentNode.children,
                function (i) {
                  return i !== e;
                }
              );
            }
            static find(e, i) {
              return Array.from(e.querySelectorAll(i));
            }
            static findSingle(e, i) {
              return this.isElement(e) ? e.querySelector(i) : null;
            }
            static index(e) {
              let i = e.parentNode.childNodes,
                o = 0;
              for (var r = 0; r < i.length; r++) {
                if (i[r] == e) return o;
                1 == i[r].nodeType && o++;
              }
              return -1;
            }
            static indexWithinGroup(e, i) {
              let o = e.parentNode ? e.parentNode.childNodes : [],
                r = 0;
              for (var s = 0; s < o.length; s++) {
                if (o[s] == e) return r;
                o[s].attributes &&
                  o[s].attributes[i] &&
                  1 == o[s].nodeType &&
                  r++;
              }
              return -1;
            }
            static appendOverlay(e, i, o = "self") {
              "self" !== o && e && i && this.appendChild(e, i);
            }
            static alignOverlay(e, i, o = "self", r = !0) {
              e &&
                i &&
                (r && (e.style.minWidth = `${t.getOuterWidth(i)}px`),
                "self" === o
                  ? this.relativePosition(e, i)
                  : this.absolutePosition(e, i));
            }
            static relativePosition(e, i) {
              const o = (M) => {
                  if (M)
                    return "relative" ===
                      getComputedStyle(M).getPropertyValue("position")
                      ? M
                      : o(M.parentElement);
                },
                r = e.offsetParent
                  ? { width: e.offsetWidth, height: e.offsetHeight }
                  : this.getHiddenElementDimensions(e),
                s = i.offsetHeight,
                a = i.getBoundingClientRect(),
                l = this.getWindowScrollTop(),
                c = this.getWindowScrollLeft(),
                u = this.getViewport(),
                m = o(e)?.getBoundingClientRect() || {
                  top: -1 * l,
                  left: -1 * c,
                };
              let _, b;
              a.top + s + r.height > u.height
                ? ((_ = a.top - m.top - r.height),
                  (e.style.transformOrigin = "bottom"),
                  a.top + _ < 0 && (_ = -1 * a.top))
                : ((_ = s + a.top - m.top), (e.style.transformOrigin = "top"));
              const C = a.left + r.width - u.width;
              (b =
                r.width > u.width
                  ? -1 * (a.left - m.left)
                  : C > 0
                  ? a.left - m.left - C
                  : a.left - m.left),
                (e.style.top = _ + "px"),
                (e.style.left = b + "px");
            }
            static absolutePosition(e, i) {
              const o = e.offsetParent
                  ? { width: e.offsetWidth, height: e.offsetHeight }
                  : this.getHiddenElementDimensions(e),
                r = o.height,
                s = o.width,
                a = i.offsetHeight,
                l = i.offsetWidth,
                c = i.getBoundingClientRect(),
                u = this.getWindowScrollTop(),
                h = this.getWindowScrollLeft(),
                m = this.getViewport();
              let _, b;
              c.top + a + r > m.height
                ? ((_ = c.top + u - r),
                  (e.style.transformOrigin = "bottom"),
                  _ < 0 && (_ = u))
                : ((_ = a + c.top + u), (e.style.transformOrigin = "top")),
                (b =
                  c.left + s > m.width
                    ? Math.max(0, c.left + h + l - s)
                    : c.left + h),
                (e.style.top = _ + "px"),
                (e.style.left = b + "px");
            }
            static getParents(e, i = []) {
              return null === e.parentNode
                ? i
                : this.getParents(e.parentNode, i.concat([e.parentNode]));
            }
            static getScrollableParents(e) {
              let i = [];
              if (e) {
                let o = this.getParents(e);
                const r = /(auto|scroll)/,
                  s = (a) => {
                    let l = window.getComputedStyle(a, null);
                    return (
                      r.test(l.getPropertyValue("overflow")) ||
                      r.test(l.getPropertyValue("overflowX")) ||
                      r.test(l.getPropertyValue("overflowY"))
                    );
                  };
                for (let a of o) {
                  let l = 1 === a.nodeType && a.dataset.scrollselectors;
                  if (l) {
                    let c = l.split(",");
                    for (let u of c) {
                      let h = this.findSingle(a, u);
                      h && s(h) && i.push(h);
                    }
                  }
                  9 !== a.nodeType && s(a) && i.push(a);
                }
              }
              return i;
            }
            static getHiddenElementOuterHeight(e) {
              (e.style.visibility = "hidden"), (e.style.display = "block");
              let i = e.offsetHeight;
              return (
                (e.style.display = "none"), (e.style.visibility = "visible"), i
              );
            }
            static getHiddenElementOuterWidth(e) {
              (e.style.visibility = "hidden"), (e.style.display = "block");
              let i = e.offsetWidth;
              return (
                (e.style.display = "none"), (e.style.visibility = "visible"), i
              );
            }
            static getHiddenElementDimensions(e) {
              let i = {};
              return (
                (e.style.visibility = "hidden"),
                (e.style.display = "block"),
                (i.width = e.offsetWidth),
                (i.height = e.offsetHeight),
                (e.style.display = "none"),
                (e.style.visibility = "visible"),
                i
              );
            }
            static scrollInView(e, i) {
              let o = getComputedStyle(e).getPropertyValue("borderTopWidth"),
                r = o ? parseFloat(o) : 0,
                s = getComputedStyle(e).getPropertyValue("paddingTop"),
                a = s ? parseFloat(s) : 0,
                l = e.getBoundingClientRect(),
                u =
                  i.getBoundingClientRect().top +
                  document.body.scrollTop -
                  (l.top + document.body.scrollTop) -
                  r -
                  a,
                h = e.scrollTop,
                m = e.clientHeight,
                _ = this.getOuterHeight(i);
              u < 0
                ? (e.scrollTop = h + u)
                : u + _ > m && (e.scrollTop = h + u - m + _);
            }
            static fadeIn(e, i) {
              e.style.opacity = 0;
              let o = +new Date(),
                r = 0,
                s = function () {
                  (r =
                    +e.style.opacity.replace(",", ".") +
                    (new Date().getTime() - o) / i),
                    (e.style.opacity = r),
                    (o = +new Date()),
                    +r < 1 &&
                      ((window.requestAnimationFrame &&
                        requestAnimationFrame(s)) ||
                        setTimeout(s, 16));
                };
              s();
            }
            static fadeOut(e, i) {
              var o = 1,
                a = 50 / i;
              let l = setInterval(() => {
                (o -= a) <= 0 && ((o = 0), clearInterval(l)),
                  (e.style.opacity = o);
              }, 50);
            }
            static getWindowScrollTop() {
              let e = document.documentElement;
              return (window.pageYOffset || e.scrollTop) - (e.clientTop || 0);
            }
            static getWindowScrollLeft() {
              let e = document.documentElement;
              return (window.pageXOffset || e.scrollLeft) - (e.clientLeft || 0);
            }
            static matches(e, i) {
              var o = Element.prototype;
              return (
                o.matches ||
                o.webkitMatchesSelector ||
                o.mozMatchesSelector ||
                o.msMatchesSelector ||
                function (s) {
                  return (
                    -1 !== [].indexOf.call(document.querySelectorAll(s), this)
                  );
                }
              ).call(e, i);
            }
            static getOuterWidth(e, i) {
              let o = e.offsetWidth;
              if (i) {
                let r = getComputedStyle(e);
                o += parseFloat(r.marginLeft) + parseFloat(r.marginRight);
              }
              return o;
            }
            static getHorizontalPadding(e) {
              let i = getComputedStyle(e);
              return parseFloat(i.paddingLeft) + parseFloat(i.paddingRight);
            }
            static getHorizontalMargin(e) {
              let i = getComputedStyle(e);
              return parseFloat(i.marginLeft) + parseFloat(i.marginRight);
            }
            static innerWidth(e) {
              let i = e.offsetWidth,
                o = getComputedStyle(e);
              return (
                (i += parseFloat(o.paddingLeft) + parseFloat(o.paddingRight)), i
              );
            }
            static width(e) {
              let i = e.offsetWidth,
                o = getComputedStyle(e);
              return (
                (i -= parseFloat(o.paddingLeft) + parseFloat(o.paddingRight)), i
              );
            }
            static getInnerHeight(e) {
              let i = e.offsetHeight,
                o = getComputedStyle(e);
              return (
                (i += parseFloat(o.paddingTop) + parseFloat(o.paddingBottom)), i
              );
            }
            static getOuterHeight(e, i) {
              let o = e.offsetHeight;
              if (i) {
                let r = getComputedStyle(e);
                o += parseFloat(r.marginTop) + parseFloat(r.marginBottom);
              }
              return o;
            }
            static getHeight(e) {
              let i = e.offsetHeight,
                o = getComputedStyle(e);
              return (
                (i -=
                  parseFloat(o.paddingTop) +
                  parseFloat(o.paddingBottom) +
                  parseFloat(o.borderTopWidth) +
                  parseFloat(o.borderBottomWidth)),
                i
              );
            }
            static getWidth(e) {
              let i = e.offsetWidth,
                o = getComputedStyle(e);
              return (
                (i -=
                  parseFloat(o.paddingLeft) +
                  parseFloat(o.paddingRight) +
                  parseFloat(o.borderLeftWidth) +
                  parseFloat(o.borderRightWidth)),
                i
              );
            }
            static getViewport() {
              let e = window,
                i = document,
                o = i.documentElement,
                r = i.getElementsByTagName("body")[0];
              return {
                width: e.innerWidth || o.clientWidth || r.clientWidth,
                height: e.innerHeight || o.clientHeight || r.clientHeight,
              };
            }
            static getOffset(e) {
              var i = e.getBoundingClientRect();
              return {
                top:
                  i.top +
                  (window.pageYOffset ||
                    document.documentElement.scrollTop ||
                    document.body.scrollTop ||
                    0),
                left:
                  i.left +
                  (window.pageXOffset ||
                    document.documentElement.scrollLeft ||
                    document.body.scrollLeft ||
                    0),
              };
            }
            static replaceElementWith(e, i) {
              let o = e.parentNode;
              if (!o) throw "Can't replace element";
              return o.replaceChild(i, e);
            }
            static getUserAgent() {
              if (navigator && this.isClient()) return navigator.userAgent;
            }
            static isIE() {
              var e = window.navigator.userAgent;
              return (
                e.indexOf("MSIE ") > 0 ||
                (e.indexOf("Trident/") > 0
                  ? (e.indexOf("rv:"), !0)
                  : e.indexOf("Edge/") > 0)
              );
            }
            static isIOS() {
              return (
                /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream
              );
            }
            static isAndroid() {
              return /(android)/i.test(navigator.userAgent);
            }
            static isTouchDevice() {
              return "ontouchstart" in window || navigator.maxTouchPoints > 0;
            }
            static appendChild(e, i) {
              if (this.isElement(i)) i.appendChild(e);
              else {
                if (!(i && i.el && i.el.nativeElement))
                  throw "Cannot append " + i + " to " + e;
                i.el.nativeElement.appendChild(e);
              }
            }
            static removeChild(e, i) {
              if (this.isElement(i)) i.removeChild(e);
              else {
                if (!i.el || !i.el.nativeElement)
                  throw "Cannot remove " + e + " from " + i;
                i.el.nativeElement.removeChild(e);
              }
            }
            static removeElement(e) {
              "remove" in Element.prototype
                ? e.remove()
                : e.parentNode.removeChild(e);
            }
            static isElement(e) {
              return "object" == typeof HTMLElement
                ? e instanceof HTMLElement
                : e &&
                    "object" == typeof e &&
                    null !== e &&
                    1 === e.nodeType &&
                    "string" == typeof e.nodeName;
            }
            static calculateScrollbarWidth(e) {
              if (e) {
                let i = getComputedStyle(e);
                return (
                  e.offsetWidth -
                  e.clientWidth -
                  parseFloat(i.borderLeftWidth) -
                  parseFloat(i.borderRightWidth)
                );
              }
              {
                if (null !== this.calculatedScrollbarWidth)
                  return this.calculatedScrollbarWidth;
                let i = document.createElement("div");
                (i.className = "p-scrollbar-measure"),
                  document.body.appendChild(i);
                let o = i.offsetWidth - i.clientWidth;
                return (
                  document.body.removeChild(i),
                  (this.calculatedScrollbarWidth = o),
                  o
                );
              }
            }
            static calculateScrollbarHeight() {
              if (null !== this.calculatedScrollbarHeight)
                return this.calculatedScrollbarHeight;
              let e = document.createElement("div");
              (e.className = "p-scrollbar-measure"),
                document.body.appendChild(e);
              let i = e.offsetHeight - e.clientHeight;
              return (
                document.body.removeChild(e),
                (this.calculatedScrollbarWidth = i),
                i
              );
            }
            static invokeElementMethod(e, i, o) {
              e[i].apply(e, o);
            }
            static clearSelection() {
              if (window.getSelection)
                window.getSelection().empty
                  ? window.getSelection().empty()
                  : window.getSelection().removeAllRanges &&
                    window.getSelection().rangeCount > 0 &&
                    window.getSelection().getRangeAt(0).getClientRects()
                      .length > 0 &&
                    window.getSelection().removeAllRanges();
              else if (document.selection && document.selection.empty)
                try {
                  document.selection.empty();
                } catch {}
            }
            static getBrowser() {
              if (!this.browser) {
                let e = this.resolveUserAgent();
                (this.browser = {}),
                  e.browser &&
                    ((this.browser[e.browser] = !0),
                    (this.browser.version = e.version)),
                  this.browser.chrome
                    ? (this.browser.webkit = !0)
                    : this.browser.webkit && (this.browser.safari = !0);
              }
              return this.browser;
            }
            static resolveUserAgent() {
              let e = navigator.userAgent.toLowerCase(),
                i =
                  /(chrome)[ \/]([\w.]+)/.exec(e) ||
                  /(webkit)[ \/]([\w.]+)/.exec(e) ||
                  /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
                  /(msie) ([\w.]+)/.exec(e) ||
                  (e.indexOf("compatible") < 0 &&
                    /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)) ||
                  [];
              return { browser: i[1] || "", version: i[2] || "0" };
            }
            static isInteger(e) {
              return Number.isInteger
                ? Number.isInteger(e)
                : "number" == typeof e && isFinite(e) && Math.floor(e) === e;
            }
            static isHidden(e) {
              return !e || null === e.offsetParent;
            }
            static isVisible(e) {
              return e && null != e.offsetParent;
            }
            static isExist(e) {
              return null !== e && typeof e < "u" && e.nodeName && e.parentNode;
            }
            static focus(e, i) {
              e && document.activeElement !== e && e.focus(i);
            }
            static getFocusableElements(e, i = "") {
              let o = this.find(
                  e,
                  `button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},\n                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},\n                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},\n                select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},\n                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},\n                [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i},\n                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${i}`
                ),
                r = [];
              for (let s of o)
                "none" != getComputedStyle(s).display &&
                  "hidden" != getComputedStyle(s).visibility &&
                  r.push(s);
              return r;
            }
            static getFirstFocusableElement(e, i) {
              const o = this.getFocusableElements(e, i);
              return o.length > 0 ? o[0] : null;
            }
            static getLastFocusableElement(e, i) {
              const o = this.getFocusableElements(e, i);
              return o.length > 0 ? o[o.length - 1] : null;
            }
            static getNextFocusableElement(e, i = !1) {
              const o = t.getFocusableElements(e);
              let r = 0;
              if (o && o.length > 0) {
                const s = o.indexOf(o[0].ownerDocument.activeElement);
                i
                  ? (r = -1 == s || 0 === s ? o.length - 1 : s - 1)
                  : -1 != s && s !== o.length - 1 && (r = s + 1);
              }
              return o[r];
            }
            static generateZIndex() {
              return (this.zindex = this.zindex || 999), ++this.zindex;
            }
            static getSelection() {
              return window.getSelection
                ? window.getSelection().toString()
                : document.getSelection
                ? document.getSelection().toString()
                : document.selection
                ? document.selection.createRange().text
                : null;
            }
            static getTargetElement(e, i) {
              if (!e) return null;
              switch (e) {
                case "document":
                  return document;
                case "window":
                  return window;
                case "@next":
                  return i?.nextElementSibling;
                case "@prev":
                  return i?.previousElementSibling;
                case "@parent":
                  return i?.parentElement;
                case "@grandparent":
                  return i?.parentElement.parentElement;
                default:
                  const o = typeof e;
                  if ("string" === o) return document.querySelector(e);
                  if ("object" === o && e.hasOwnProperty("nativeElement"))
                    return this.isExist(e.nativeElement)
                      ? e.nativeElement
                      : void 0;
                  const s =
                    (a = e) && a.constructor && a.call && a.apply ? e() : e;
                  return (s && 9 === s.nodeType) || this.isExist(s) ? s : null;
              }
              var a;
            }
            static isClient() {
              return !!(
                typeof window < "u" &&
                window.document &&
                window.document.createElement
              );
            }
            static getAttribute(e, i) {
              if (e) {
                const o = e.getAttribute(i);
                return isNaN(o)
                  ? "true" === o || "false" === o
                    ? "true" === o
                    : o
                  : +o;
              }
            }
            static calculateBodyScrollbarWidth() {
              return window.innerWidth - document.documentElement.offsetWidth;
            }
            static blockBodyScroll(e = "p-overflow-hidden") {
              document.body.style.setProperty(
                "--scrollbar-width",
                this.calculateBodyScrollbarWidth() + "px"
              ),
                this.addClass(document.body, e);
            }
            static unblockBodyScroll(e = "p-overflow-hidden") {
              document.body.style.removeProperty("--scrollbar-width"),
                this.removeClass(document.body, e);
            }
          }
          return t;
        })();
      class du {
        element;
        listener;
        scrollableParents;
        constructor(n, e = () => {}) {
          (this.element = n), (this.listener = e);
        }
        bindScrollListener() {
          this.scrollableParents = w.getScrollableParents(this.element);
          for (let n = 0; n < this.scrollableParents.length; n++)
            this.scrollableParents[n].addEventListener("scroll", this.listener);
        }
        unbindScrollListener() {
          if (this.scrollableParents)
            for (let n = 0; n < this.scrollableParents.length; n++)
              this.scrollableParents[n].removeEventListener(
                "scroll",
                this.listener
              );
        }
        destroy() {
          this.unbindScrollListener(),
            (this.element = null),
            (this.listener = null),
            (this.scrollableParents = null);
        }
      }
      const UP = ["*"];
      let Je = (() => {
          class t {
            label;
            spin = !1;
            styleClass;
            role;
            ariaLabel;
            ariaHidden;
            ngOnInit() {
              this.getAttributes();
            }
            getAttributes() {
              const e = P.isEmpty(this.label);
              (this.role = e ? void 0 : "img"),
                (this.ariaLabel = e ? void 0 : this.label),
                (this.ariaHidden = e);
            }
            getClassNames() {
              return `p-icon ${this.styleClass ? this.styleClass + " " : ""}${
                this.spin ? "p-icon-spin" : ""
              }`;
            }
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵcmp = le({
              type: t,
              selectors: [["ng-component"]],
              hostAttrs: [1, "p-element", "p-icon-wrapper"],
              inputs: {
                label: "label",
                spin: "spin",
                styleClass: "styleClass",
              },
              standalone: !0,
              features: [Be],
              ngContentSelectors: UP,
              decls: 1,
              vars: 0,
              template: function (i, o) {
                1 & i && (Ii(), jn(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            });
          }
          return t;
        })(),
        Gr = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["SpinnerIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 6,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1),
                  v(),
                  y(3, "defs")(4, "clipPath", 2),
                  k(5, "rect", 3),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(3),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        Ao = (() => {
          class t {
            document;
            platformId;
            renderer;
            el;
            zone;
            config;
            constructor(e, i, o, r, s, a) {
              (this.document = e),
                (this.platformId = i),
                (this.renderer = o),
                (this.el = r),
                (this.zone = s),
                (this.config = a);
            }
            animationListener;
            mouseDownListener;
            timeout;
            ngAfterViewInit() {
              Ai(this.platformId) &&
                this.config &&
                this.config.ripple &&
                this.zone.runOutsideAngular(() => {
                  this.create(),
                    (this.mouseDownListener = this.renderer.listen(
                      this.el.nativeElement,
                      "mousedown",
                      this.onMouseDown.bind(this)
                    ));
                });
            }
            onMouseDown(e) {
              let i = this.getInk();
              if (
                !i ||
                "none" ===
                  this.document.defaultView?.getComputedStyle(i, null).display
              )
                return;
              if (
                (w.removeClass(i, "p-ink-active"),
                !w.getHeight(i) && !w.getWidth(i))
              ) {
                let a = Math.max(
                  w.getOuterWidth(this.el.nativeElement),
                  w.getOuterHeight(this.el.nativeElement)
                );
                (i.style.height = a + "px"), (i.style.width = a + "px");
              }
              let o = w.getOffset(this.el.nativeElement),
                r =
                  e.pageX -
                  o.left +
                  this.document.body.scrollTop -
                  w.getWidth(i) / 2,
                s =
                  e.pageY -
                  o.top +
                  this.document.body.scrollLeft -
                  w.getHeight(i) / 2;
              this.renderer.setStyle(i, "top", s + "px"),
                this.renderer.setStyle(i, "left", r + "px"),
                w.addClass(i, "p-ink-active"),
                (this.timeout = setTimeout(() => {
                  let a = this.getInk();
                  a && w.removeClass(a, "p-ink-active");
                }, 401));
            }
            getInk() {
              const e = this.el.nativeElement.children;
              for (let i = 0; i < e.length; i++)
                if (
                  "string" == typeof e[i].className &&
                  -1 !== e[i].className.indexOf("p-ink")
                )
                  return e[i];
              return null;
            }
            resetInk() {
              let e = this.getInk();
              e && w.removeClass(e, "p-ink-active");
            }
            onAnimationEnd(e) {
              this.timeout && clearTimeout(this.timeout),
                w.removeClass(e.currentTarget, "p-ink-active");
            }
            create() {
              let e = this.renderer.createElement("span");
              this.renderer.addClass(e, "p-ink"),
                this.renderer.appendChild(this.el.nativeElement, e),
                this.renderer.setAttribute(e, "aria-hidden", "true"),
                this.renderer.setAttribute(e, "role", "presentation"),
                this.animationListener ||
                  (this.animationListener = this.renderer.listen(
                    e,
                    "animationend",
                    this.onAnimationEnd.bind(this)
                  ));
            }
            remove() {
              let e = this.getInk();
              e &&
                (this.mouseDownListener && this.mouseDownListener(),
                this.animationListener && this.animationListener(),
                (this.mouseDownListener = null),
                (this.animationListener = null),
                w.removeElement(e));
            }
            ngOnDestroy() {
              this.config && this.config.ripple && this.remove();
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Qe), D(xn), D(Tt), D(Fe), D(_e), D(Ri, 8));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pRipple", ""]],
              hostAttrs: [1, "p-ripple", "p-element"],
            });
          }
          return t;
        })(),
        Wr = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt] });
          }
          return t;
        })();
      function GP(t, n) {
        1 & t && j(0);
      }
      function WP(t, n) {
        if ((1 & t && k(0, "span", 8), 2 & t)) {
          const e = p(3);
          ne("p-button-loading-icon pi-spin " + e.loadingIcon),
            d("ngClass", e.iconClass()),
            x("aria-hidden", !0)("data-pc-section", "loadingicon");
        }
      }
      function KP(t, n) {
        1 & t && k(0, "SpinnerIcon", 9),
          2 & t &&
            (d("styleClass", p(3).spinnerIconClass())("spin", !0),
            x("aria-hidden", !0)("data-pc-section", "loadingicon"));
      }
      function qP(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, WP, 1, 5, "span", 6),
            f(2, KP, 1, 4, "SpinnerIcon", 7),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1), d("ngIf", e.loadingIcon), g(1), d("ngIf", !e.loadingIcon);
        }
      }
      function ZP(t, n) {}
      function YP(t, n) {
        1 & t && f(0, ZP, 0, 0, "ng-template");
      }
      function QP(t, n) {
        if (
          (1 & t && (y(0, "span", 10), f(1, YP, 1, 0, null, 1), v()), 2 & t)
        ) {
          const e = p(2);
          d("ngClass", e.iconClass()),
            x("aria-hidden", !0)("data-pc-section", "loadingicon"),
            g(1),
            d("ngTemplateOutlet", e.loadingIconTemplate);
        }
      }
      function JP(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, qP, 3, 2, "ng-container", 2),
            f(2, QP, 2, 4, "span", 5),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1),
            d("ngIf", !e.loadingIconTemplate),
            g(1),
            d("ngIf", e.loadingIconTemplate);
        }
      }
      function XP(t, n) {
        if ((1 & t && k(0, "span", 8), 2 & t)) {
          const e = p(2);
          ne(e.icon), d("ngClass", e.iconClass()), x("data-pc-section", "icon");
        }
      }
      function eN(t, n) {}
      function tN(t, n) {
        1 & t && f(0, eN, 0, 0, "ng-template", 12),
          2 & t && d("ngIf", !p(3).icon);
      }
      function nN(t, n) {
        if ((1 & t && (y(0, "span", 8), f(1, tN, 1, 1, null, 1), v()), 2 & t)) {
          const e = p(2);
          d("ngClass", e.iconClass()),
            x("data-pc-section", "icon"),
            g(1),
            d("ngTemplateOutlet", e.iconTemplate);
        }
      }
      function iN(t, n) {
        if (
          (1 & t &&
            (H(0), f(1, XP, 1, 4, "span", 6), f(2, nN, 2, 3, "span", 11), z()),
          2 & t)
        ) {
          const e = p();
          g(1),
            d("ngIf", e.icon && !e.iconTemplate),
            g(1),
            d("ngIf", !e.icon && e.iconTemplate);
        }
      }
      function oN(t, n) {
        if ((1 & t && (y(0, "span", 13), B(1), v()), 2 & t)) {
          const e = p();
          x("aria-hidden", e.icon && !e.label)("data-pc-section", "label"),
            g(1),
            Le(e.label);
        }
      }
      function rN(t, n) {
        if ((1 & t && (y(0, "span", 8), B(1), v()), 2 & t)) {
          const e = p();
          ne(e.badgeClass),
            d("ngClass", e.badgeStyleClass()),
            x("data-pc-section", "badge"),
            g(1),
            Le(e.badge);
        }
      }
      const sN = ["*"],
        oo = {
          button: "p-button",
          component: "p-component",
          iconOnly: "p-button-icon-only",
          disabled: "p-disabled",
          loading: "p-button-loading",
          labelOnly: "p-button-loading-label-only",
        };
      let ng = (() => {
          class t {
            el;
            document;
            iconPos = "left";
            loadingIcon;
            get label() {
              return this._label;
            }
            set label(e) {
              (this._label = e),
                this.initialized &&
                  (this.updateLabel(), this.updateIcon(), this.setStyleClass());
            }
            get icon() {
              return this._icon;
            }
            set icon(e) {
              (this._icon = e),
                this.initialized && (this.updateIcon(), this.setStyleClass());
            }
            get loading() {
              return this._loading;
            }
            set loading(e) {
              (this._loading = e),
                this.initialized && (this.updateIcon(), this.setStyleClass());
            }
            _label;
            _icon;
            _loading = !1;
            initialized;
            get htmlElement() {
              return this.el.nativeElement;
            }
            _internalClasses = Object.values(oo);
            spinnerIcon =
              '<svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="p-icon-spin">\n        <g clip-path="url(#clip0_417_21408)">\n            <path\n                d="M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z"\n                fill="currentColor"\n            />\n        </g>\n        <defs>\n            <clipPath id="clip0_417_21408">\n                <rect width="14" height="14" fill="white" />\n            </clipPath>\n        </defs>\n    </svg>';
            constructor(e, i) {
              (this.el = e), (this.document = i);
            }
            ngAfterViewInit() {
              w.addMultipleClasses(
                this.htmlElement,
                this.getStyleClass().join(" ")
              ),
                this.createIcon(),
                this.createLabel(),
                (this.initialized = !0);
            }
            getStyleClass() {
              const e = [oo.button, oo.component];
              return (
                this.icon &&
                  !this.label &&
                  P.isEmpty(this.htmlElement.textContent) &&
                  e.push(oo.iconOnly),
                this.loading &&
                  (e.push(oo.disabled, oo.loading),
                  !this.icon && this.label && e.push(oo.labelOnly),
                  this.icon &&
                    !this.label &&
                    !P.isEmpty(this.htmlElement.textContent) &&
                    e.push(oo.iconOnly)),
                e
              );
            }
            setStyleClass() {
              const e = this.getStyleClass();
              this.htmlElement.classList.remove(...this._internalClasses),
                this.htmlElement.classList.add(...e);
            }
            createLabel() {
              if (this.label) {
                let e = this.document.createElement("span");
                this.icon &&
                  !this.label &&
                  e.setAttribute("aria-hidden", "true"),
                  (e.className = "p-button-label"),
                  e.appendChild(this.document.createTextNode(this.label)),
                  this.htmlElement.appendChild(e);
              }
            }
            createIcon() {
              if (this.icon || this.loading) {
                let e = this.document.createElement("span");
                (e.className = "p-button-icon"),
                  e.setAttribute("aria-hidden", "true");
                let i = this.label ? "p-button-icon-" + this.iconPos : null;
                i && w.addClass(e, i);
                let o = this.getIconClass();
                o && w.addMultipleClasses(e, o),
                  !this.loadingIcon &&
                    this.loading &&
                    (e.innerHTML = this.spinnerIcon),
                  this.htmlElement.insertBefore(e, this.htmlElement.firstChild);
              }
            }
            updateLabel() {
              let e = w.findSingle(this.htmlElement, ".p-button-label");
              this.label
                ? e
                  ? (e.textContent = this.label)
                  : this.createLabel()
                : e && this.htmlElement.removeChild(e);
            }
            updateIcon() {
              let e = w.findSingle(this.htmlElement, ".p-button-icon"),
                i = w.findSingle(this.htmlElement, ".p-button-label");
              this.loading && !this.loadingIcon && e
                ? (e.innerHTML = this.spinnerIcon)
                : e?.innerHTML && (e.innerHTML = ""),
                e
                  ? (e.className = this.iconPos
                      ? "p-button-icon " +
                        (i ? "p-button-icon-" + this.iconPos : "") +
                        " " +
                        this.getIconClass()
                      : "p-button-icon " + this.getIconClass())
                  : this.createIcon();
            }
            getIconClass() {
              return this.loading
                ? "p-button-loading-icon " +
                    (this.loadingIcon ? this.loadingIcon : "p-icon")
                : this.icon || "p-hidden";
            }
            ngOnDestroy() {
              this.initialized = !1;
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Fe), D(Qe));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pButton", ""]],
              hostAttrs: [1, "p-element"],
              inputs: {
                iconPos: "iconPos",
                loadingIcon: "loadingIcon",
                label: "label",
                icon: "icon",
                loading: "loading",
              },
            });
          }
          return t;
        })(),
        aN = (() => {
          class t {
            type = "button";
            iconPos = "left";
            icon;
            badge;
            label;
            disabled;
            loading = !1;
            loadingIcon;
            raised = !1;
            rounded = !1;
            text = !1;
            plain = !1;
            severity;
            outlined = !1;
            link = !1;
            size;
            style;
            styleClass;
            badgeClass;
            ariaLabel;
            onClick = new L();
            onFocus = new L();
            onBlur = new L();
            contentTemplate;
            loadingIconTemplate;
            iconTemplate;
            templates;
            spinnerIconClass() {
              return Object.entries(this.iconClass())
                .filter(([, e]) => !!e)
                .reduce((e, [i]) => e + ` ${i}`, "p-button-loading-icon");
            }
            iconClass() {
              return {
                "p-button-icon": !0,
                "p-button-icon-left": "left" === this.iconPos && this.label,
                "p-button-icon-right": "right" === this.iconPos && this.label,
                "p-button-icon-top": "top" === this.iconPos && this.label,
                "p-button-icon-bottom": "bottom" === this.iconPos && this.label,
              };
            }
            buttonClass() {
              return {
                "p-button p-component": !0,
                "p-button-icon-only":
                  (this.icon ||
                    this.iconTemplate ||
                    this.loadingIcon ||
                    this.loadingIconTemplate) &&
                  !this.label,
                "p-button-vertical":
                  ("top" === this.iconPos || "bottom" === this.iconPos) &&
                  this.label,
                "p-disabled": this.disabled || this.loading,
                "p-button-loading": this.loading,
                "p-button-loading-label-only":
                  this.loading &&
                  !this.icon &&
                  this.label &&
                  !this.loadingIcon &&
                  "left" === this.iconPos,
                "p-button-link": this.link,
                [`p-button-${this.severity}`]: this.severity,
                "p-button-raised": this.raised,
                "p-button-rounded": this.rounded,
                "p-button-text": this.text,
                "p-button-outlined": this.outlined,
                "p-button-sm": "small" === this.size,
                "p-button-lg": "large" === this.size,
                "p-button-plain": this.plain,
              };
            }
            ngAfterContentInit() {
              this.templates?.forEach((e) => {
                switch (e.getType()) {
                  case "content":
                  default:
                    this.contentTemplate = e.template;
                    break;
                  case "icon":
                    this.iconTemplate = e.template;
                    break;
                  case "loadingicon":
                    this.loadingIconTemplate = e.template;
                }
              });
            }
            badgeStyleClass() {
              return {
                "p-badge p-component": !0,
                "p-badge-no-gutter":
                  this.badge && 1 === String(this.badge).length,
              };
            }
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-button"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              hostAttrs: [1, "p-element"],
              hostVars: 2,
              hostBindings: function (i, o) {
                2 & i && On("p-disabled", o.disabled);
              },
              inputs: {
                type: "type",
                iconPos: "iconPos",
                icon: "icon",
                badge: "badge",
                label: "label",
                disabled: "disabled",
                loading: "loading",
                loadingIcon: "loadingIcon",
                raised: "raised",
                rounded: "rounded",
                text: "text",
                plain: "plain",
                severity: "severity",
                outlined: "outlined",
                link: "link",
                size: "size",
                style: "style",
                styleClass: "styleClass",
                badgeClass: "badgeClass",
                ariaLabel: "ariaLabel",
              },
              outputs: {
                onClick: "onClick",
                onFocus: "onFocus",
                onBlur: "onBlur",
              },
              ngContentSelectors: sN,
              decls: 7,
              vars: 14,
              consts: [
                [
                  "pRipple",
                  "",
                  3,
                  "ngStyle",
                  "disabled",
                  "ngClass",
                  "click",
                  "focus",
                  "blur",
                ],
                [4, "ngTemplateOutlet"],
                [4, "ngIf"],
                ["class", "p-button-label", 4, "ngIf"],
                [3, "ngClass", "class", 4, "ngIf"],
                ["class", "p-button-loading-icon", 3, "ngClass", 4, "ngIf"],
                [3, "class", "ngClass", 4, "ngIf"],
                [3, "styleClass", "spin", 4, "ngIf"],
                [3, "ngClass"],
                [3, "styleClass", "spin"],
                [1, "p-button-loading-icon", 3, "ngClass"],
                [3, "ngClass", 4, "ngIf"],
                [3, "ngIf"],
                [1, "p-button-label"],
              ],
              template: function (i, o) {
                1 & i &&
                  (Ii(),
                  y(0, "button", 0),
                  A("click", function (s) {
                    return o.onClick.emit(s);
                  })("focus", function (s) {
                    return o.onFocus.emit(s);
                  })("blur", function (s) {
                    return o.onBlur.emit(s);
                  }),
                  jn(1),
                  f(2, GP, 1, 0, "ng-container", 1),
                  f(3, JP, 3, 2, "ng-container", 2),
                  f(4, iN, 3, 2, "ng-container", 2),
                  f(5, oN, 2, 3, "span", 3),
                  f(6, rN, 2, 5, "span", 4),
                  v()),
                  2 & i &&
                    (ne(o.styleClass),
                    d("ngStyle", o.style)("disabled", o.disabled || o.loading)(
                      "ngClass",
                      o.buttonClass()
                    ),
                    x("type", o.type)("aria-label", o.ariaLabel)(
                      "data-pc-name",
                      "button"
                    )("data-pc-section", "root"),
                    g(2),
                    d("ngTemplateOutlet", o.contentTemplate),
                    g(1),
                    d("ngIf", o.loading),
                    g(1),
                    d("ngIf", !o.loading),
                    g(1),
                    d("ngIf", !o.contentTemplate && o.label),
                    g(1),
                    d("ngIf", !o.contentTemplate && o.badge));
              },
              dependencies: function () {
                return [Bt, wt, St, Xt, Ao, Gr];
              },
              encapsulation: 2,
              changeDetection: 0,
            });
          }
          return t;
        })(),
        Kr = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt, Wr, ht, Gr, ht] });
          }
          return t;
        })(),
        VT = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["ChevronLeftIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M9.61296 13C9.50997 13.0005 9.40792 12.9804 9.3128 12.9409C9.21767 12.9014 9.13139 12.8433 9.05902 12.7701L3.83313 7.54416C3.68634 7.39718 3.60388 7.19795 3.60388 6.99022C3.60388 6.78249 3.68634 6.58325 3.83313 6.43628L9.05902 1.21039C9.20762 1.07192 9.40416 0.996539 9.60724 1.00012C9.81032 1.00371 10.0041 1.08597 10.1477 1.22959C10.2913 1.37322 10.3736 1.56698 10.3772 1.77005C10.3808 1.97313 10.3054 2.16968 10.1669 2.31827L5.49496 6.99022L10.1669 11.6622C10.3137 11.8091 10.3962 12.0084 10.3962 12.2161C10.3962 12.4238 10.3137 12.6231 10.1669 12.7701C10.0945 12.8433 10.0083 12.9014 9.91313 12.9409C9.81801 12.9804 9.71596 13.0005 9.61296 13Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        BT = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["ChevronRightIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        HT = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["ChevronUpIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M12.2097 10.4113C12.1057 10.4118 12.0027 10.3915 11.9067 10.3516C11.8107 10.3118 11.7237 10.2532 11.6506 10.1792L6.93602 5.46461L2.22139 10.1476C2.07272 10.244 1.89599 10.2877 1.71953 10.2717C1.54307 10.2556 1.3771 10.1808 1.24822 10.0593C1.11933 9.93766 1.035 9.77633 1.00874 9.6011C0.982477 9.42587 1.0158 9.2469 1.10338 9.09287L6.37701 3.81923C6.52533 3.6711 6.72639 3.58789 6.93602 3.58789C7.14565 3.58789 7.3467 3.6711 7.49502 3.81923L12.7687 9.09287C12.9168 9.24119 13 9.44225 13 9.65187C13 9.8615 12.9168 10.0626 12.7687 10.2109C12.616 10.3487 12.4151 10.4207 12.2097 10.4113Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        qr = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["ChevronDownIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        li = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["TimesIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        zT = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["CalendarIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M10.7838 1.51351H9.83783V0.567568C9.83783 0.417039 9.77804 0.272676 9.6716 0.166237C9.56516 0.0597971 9.42079 0 9.27027 0C9.11974 0 8.97538 0.0597971 8.86894 0.166237C8.7625 0.272676 8.7027 0.417039 8.7027 0.567568V1.51351H5.29729V0.567568C5.29729 0.417039 5.2375 0.272676 5.13106 0.166237C5.02462 0.0597971 4.88025 0 4.72973 0C4.5792 0 4.43484 0.0597971 4.3284 0.166237C4.22196 0.272676 4.16216 0.417039 4.16216 0.567568V1.51351H3.21621C2.66428 1.51351 2.13494 1.73277 1.74467 2.12305C1.35439 2.51333 1.13513 3.04266 1.13513 3.59459V11.9189C1.13513 12.4709 1.35439 13.0002 1.74467 13.3905C2.13494 13.7807 2.66428 14 3.21621 14H10.7838C11.3357 14 11.865 13.7807 12.2553 13.3905C12.6456 13.0002 12.8649 12.4709 12.8649 11.9189V3.59459C12.8649 3.04266 12.6456 2.51333 12.2553 2.12305C11.865 1.73277 11.3357 1.51351 10.7838 1.51351ZM3.21621 2.64865H4.16216V3.59459C4.16216 3.74512 4.22196 3.88949 4.3284 3.99593C4.43484 4.10237 4.5792 4.16216 4.72973 4.16216C4.88025 4.16216 5.02462 4.10237 5.13106 3.99593C5.2375 3.88949 5.29729 3.74512 5.29729 3.59459V2.64865H8.7027V3.59459C8.7027 3.74512 8.7625 3.88949 8.86894 3.99593C8.97538 4.10237 9.11974 4.16216 9.27027 4.16216C9.42079 4.16216 9.56516 4.10237 9.6716 3.99593C9.77804 3.88949 9.83783 3.74512 9.83783 3.59459V2.64865H10.7838C11.0347 2.64865 11.2753 2.74831 11.4527 2.92571C11.6301 3.10311 11.7297 3.34371 11.7297 3.59459V5.67568H2.27027V3.59459C2.27027 3.34371 2.36993 3.10311 2.54733 2.92571C2.72473 2.74831 2.96533 2.64865 3.21621 2.64865ZM10.7838 12.8649H3.21621C2.96533 12.8649 2.72473 12.7652 2.54733 12.5878C2.36993 12.4104 2.27027 12.1698 2.27027 11.9189V6.81081H11.7297V11.9189C11.7297 12.1698 11.6301 12.4104 11.4527 12.5878C11.2753 12.7652 11.0347 12.8649 10.7838 12.8649Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })();
      const lN = ["container"],
        cN = ["inputfield"],
        uN = ["contentWrapper"];
      function dN(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "TimesIcon", 10),
            A("click", function () {
              return T(e), S(p(3).clear());
            }),
            v();
        }
        2 & t && d("styleClass", "p-calendar-clear-icon");
      }
      function pN(t, n) {}
      function hN(t, n) {
        1 & t && f(0, pN, 0, 0, "ng-template");
      }
      function fN(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "span", 11),
            A("click", function () {
              return T(e), S(p(3).clear());
            }),
            f(1, hN, 1, 0, null, 12),
            v();
        }
        if (2 & t) {
          const e = p(3);
          g(1), d("ngTemplateOutlet", e.clearIconTemplate);
        }
      }
      function gN(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, dN, 1, 1, "TimesIcon", 8),
            f(2, fN, 2, 1, "span", 9),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", !e.clearIconTemplate),
            g(1),
            d("ngIf", e.clearIconTemplate);
        }
      }
      function mN(t, n) {
        1 & t && k(0, "span", 15), 2 & t && d("ngClass", p(3).icon);
      }
      function _N(t, n) {
        1 & t && k(0, "CalendarIcon");
      }
      function yN(t, n) {}
      function vN(t, n) {
        1 & t && f(0, yN, 0, 0, "ng-template");
      }
      function bN(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, _N, 1, 0, "CalendarIcon", 6),
            f(2, vN, 1, 0, null, 12),
            z()),
          2 & t)
        ) {
          const e = p(3);
          g(1),
            d("ngIf", !e.triggerIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.triggerIconTemplate);
        }
      }
      function CN(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 13),
            A("click", function (o) {
              T(e), p();
              const r = rt(1);
              return S(p().onButtonClick(o, r));
            }),
            f(1, mN, 1, 1, "span", 14),
            f(2, bN, 3, 2, "ng-container", 6),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d("disabled", e.disabled),
            x("aria-label", e.iconButtonAriaLabel)(
              "aria-expanded",
              e.overlayVisible
            )("aria-controls", e.panelId),
            g(1),
            d("ngIf", e.icon),
            g(1),
            d("ngIf", !e.icon);
        }
      }
      function wN(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 4, 5),
            A("focus", function (o) {
              return T(e), S(p().onInputFocus(o));
            })("keydown", function (o) {
              return T(e), S(p().onInputKeydown(o));
            })("click", function () {
              return T(e), S(p().onInputClick());
            })("blur", function (o) {
              return T(e), S(p().onInputBlur(o));
            })("input", function (o) {
              return T(e), S(p().onUserInput(o));
            }),
            v(),
            f(2, gN, 3, 2, "ng-container", 6),
            f(3, CN, 3, 6, "button", 7);
        }
        if (2 & t) {
          const e = p();
          ne(e.inputStyleClass),
            d("value", e.inputFieldValue)("readonly", e.readonlyInput)(
              "ngStyle",
              e.inputStyle
            )("placeholder", e.placeholder || "")("disabled", e.disabled)(
              "ngClass",
              "p-inputtext p-component"
            ),
            x("id", e.inputId)("name", e.name)("required", e.required)(
              "aria-required",
              e.required
            )("aria-expanded", e.overlayVisible)("aria-controls", e.panelId)(
              "aria-labelledby",
              e.ariaLabelledBy
            )("aria-label", e.ariaLabel)("tabindex", e.tabindex)(
              "inputmode",
              e.touchUI ? "off" : null
            ),
            g(2),
            d("ngIf", e.showClear && !e.disabled && null != e.value),
            g(1),
            d("ngIf", e.showIcon);
        }
      }
      function TN(t, n) {
        1 & t && j(0);
      }
      function SN(t, n) {
        1 & t && k(0, "ChevronLeftIcon", 37),
          2 & t && d("styleClass", "p-datepicker-prev-icon");
      }
      function IN(t, n) {}
      function DN(t, n) {
        1 & t && f(0, IN, 0, 0, "ng-template");
      }
      function EN(t, n) {
        if (
          (1 & t && (y(0, "span", 38), f(1, DN, 1, 0, null, 12), v()), 2 & t)
        ) {
          const e = p(5);
          g(1), d("ngTemplateOutlet", e.previousIconTemplate);
        }
      }
      function xN(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 35),
            A("keydown", function (o) {
              return T(e), S(p(4).onContainerButtonKeydown(o));
            })("click", function (o) {
              return T(e), S(p(4).onPrevButtonClick(o));
            }),
            f(1, SN, 1, 1, "ChevronLeftIcon", 32),
            f(2, EN, 2, 1, "span", 36),
            v();
        }
        if (2 & t) {
          const e = p(4);
          x("aria-label", e.prevIconAriaLabel),
            g(1),
            d("ngIf", !e.previousIconTemplate),
            g(1),
            d("ngIf", e.previousIconTemplate);
        }
      }
      function MN(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 39),
            A("click", function (o) {
              return T(e), S(p(4).switchToMonthView(o));
            })("keydown", function (o) {
              return T(e), S(p(4).onContainerButtonKeydown(o));
            }),
            B(1),
            v();
        }
        if (2 & t) {
          const e = p().$implicit,
            i = p(3);
          d("disabled", i.switchViewButtonDisabled()),
            x("aria-label", i.getTranslation("chooseMonth")),
            g(1),
            we(" ", i.getMonthName(e.month), " ");
        }
      }
      function ON(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 40),
            A("click", function (o) {
              return T(e), S(p(4).switchToYearView(o));
            })("keydown", function (o) {
              return T(e), S(p(4).onContainerButtonKeydown(o));
            }),
            B(1),
            v();
        }
        if (2 & t) {
          const e = p().$implicit,
            i = p(3);
          d("disabled", i.switchViewButtonDisabled()),
            x("aria-label", i.getTranslation("chooseYear")),
            g(1),
            we(" ", i.getYear(e), " ");
        }
      }
      function AN(t, n) {
        if ((1 & t && (H(0), B(1), z()), 2 & t)) {
          const e = p(5);
          g(1),
            bh(
              "",
              e.yearPickerValues()[0],
              " - ",
              e.yearPickerValues()[e.yearPickerValues().length - 1],
              ""
            );
        }
      }
      function kN(t, n) {
        1 & t && j(0);
      }
      const ig = function (t) {
        return { $implicit: t };
      };
      function RN(t, n) {
        if (
          (1 & t &&
            (y(0, "span", 41),
            f(1, AN, 2, 2, "ng-container", 6),
            f(2, kN, 1, 0, "ng-container", 42),
            v()),
          2 & t)
        ) {
          const e = p(4);
          g(1),
            d("ngIf", !e.decadeTemplate),
            g(1),
            d("ngTemplateOutlet", e.decadeTemplate)(
              "ngTemplateOutletContext",
              Q(3, ig, e.yearPickerValues)
            );
        }
      }
      function FN(t, n) {
        1 & t && k(0, "ChevronRightIcon", 37),
          2 & t && d("styleClass", "p-datepicker-next-icon");
      }
      function LN(t, n) {}
      function PN(t, n) {
        1 & t && f(0, LN, 0, 0, "ng-template");
      }
      function NN(t, n) {
        if (
          (1 & t && (y(0, "span", 43), f(1, PN, 1, 0, null, 12), v()), 2 & t)
        ) {
          const e = p(4);
          g(1), d("ngTemplateOutlet", e.nextIconTemplate);
        }
      }
      function VN(t, n) {
        if ((1 & t && (y(0, "th", 49)(1, "span"), B(2), v()()), 2 & t)) {
          const e = p(5);
          g(2), Le(e.getTranslation("weekHeader"));
        }
      }
      function BN(t, n) {
        if ((1 & t && (y(0, "th", 50)(1, "span"), B(2), v()()), 2 & t)) {
          const e = n.$implicit;
          g(2), Le(e);
        }
      }
      function HN(t, n) {
        if ((1 & t && (y(0, "td", 53)(1, "span", 54), B(2), v()()), 2 & t)) {
          const e = p().index,
            i = p(2).$implicit;
          g(2), we(" ", i.weekNumbers[e], " ");
        }
      }
      function zN(t, n) {
        if ((1 & t && (H(0), B(1), z()), 2 & t)) {
          const e = p(2).$implicit;
          g(1), Le(e.day);
        }
      }
      function $N(t, n) {
        1 & t && j(0);
      }
      function jN(t, n) {
        if ((1 & t && (H(0), f(1, $N, 1, 0, "ng-container", 42), z()), 2 & t)) {
          const e = p(2).$implicit,
            i = p(6);
          g(1),
            d("ngTemplateOutlet", i.dateTemplate)(
              "ngTemplateOutletContext",
              Q(2, ig, e)
            );
        }
      }
      function UN(t, n) {
        1 & t && j(0);
      }
      function GN(t, n) {
        if ((1 & t && (H(0), f(1, UN, 1, 0, "ng-container", 42), z()), 2 & t)) {
          const e = p(2).$implicit,
            i = p(6);
          g(1),
            d("ngTemplateOutlet", i.disabledDateTemplate)(
              "ngTemplateOutletContext",
              Q(2, ig, e)
            );
        }
      }
      function WN(t, n) {
        if ((1 & t && (y(0, "div", 57), B(1), v()), 2 & t)) {
          const e = p(2).$implicit;
          g(1), we(" ", e.day, " ");
        }
      }
      const og = function (t, n) {
        return { "p-highlight": t, "p-disabled": n };
      };
      function KN(t, n) {
        if (1 & t) {
          const e = N();
          H(0),
            y(1, "span", 55),
            A("click", function (o) {
              T(e);
              const r = p().$implicit;
              return S(p(6).onDateSelect(o, r));
            })("keydown", function (o) {
              T(e);
              const r = p().$implicit,
                s = p(3).index;
              return S(p(3).onDateCellKeydown(o, r, s));
            }),
            f(2, zN, 2, 1, "ng-container", 6),
            f(3, jN, 2, 4, "ng-container", 6),
            f(4, GN, 2, 4, "ng-container", 6),
            v(),
            f(5, WN, 2, 1, "div", 56),
            z();
        }
        if (2 & t) {
          const e = p().$implicit,
            i = p(6);
          g(1),
            d(
              "ngClass",
              Ze(5, og, i.isSelected(e) && e.selectable, !e.selectable)
            ),
            g(1),
            d(
              "ngIf",
              !i.dateTemplate && (e.selectable || !i.disabledDateTemplate)
            ),
            g(1),
            d("ngIf", e.selectable || !i.disabledDateTemplate),
            g(1),
            d("ngIf", !e.selectable),
            g(1),
            d("ngIf", i.isSelected(e));
        }
      }
      const qN = function (t, n) {
        return { "p-datepicker-other-month": t, "p-datepicker-today": n };
      };
      function ZN(t, n) {
        if (
          (1 & t && (y(0, "td", 15), f(1, KN, 6, 8, "ng-container", 6), v()),
          2 & t)
        ) {
          const e = n.$implicit,
            i = p(6);
          d("ngClass", Ze(3, qN, e.otherMonth, e.today)),
            x("aria-label", e.day),
            g(1),
            d("ngIf", !e.otherMonth || i.showOtherMonths);
        }
      }
      function YN(t, n) {
        if (
          (1 & t &&
            (y(0, "tr"),
            f(1, HN, 3, 1, "td", 51),
            f(2, ZN, 2, 6, "td", 52),
            v()),
          2 & t)
        ) {
          const e = n.$implicit,
            i = p(5);
          g(1), d("ngIf", i.showWeek), g(1), d("ngForOf", e);
        }
      }
      function QN(t, n) {
        if (
          (1 & t &&
            (y(0, "div", 44)(1, "table", 45)(2, "thead")(3, "tr"),
            f(4, VN, 3, 1, "th", 46),
            f(5, BN, 3, 1, "th", 47),
            v()(),
            y(6, "tbody"),
            f(7, YN, 3, 2, "tr", 48),
            v()()()),
          2 & t)
        ) {
          const e = p().$implicit,
            i = p(3);
          g(4),
            d("ngIf", i.showWeek),
            g(1),
            d("ngForOf", i.weekDays),
            g(2),
            d("ngForOf", e.dates);
        }
      }
      function JN(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 24)(1, "div", 25),
            f(2, xN, 3, 3, "button", 26),
            y(3, "div", 27),
            f(4, MN, 2, 3, "button", 28),
            f(5, ON, 2, 3, "button", 29),
            f(6, RN, 3, 5, "span", 30),
            v(),
            y(7, "button", 31),
            A("keydown", function (o) {
              return T(e), S(p(3).onContainerButtonKeydown(o));
            })("click", function (o) {
              return T(e), S(p(3).onNextButtonClick(o));
            }),
            f(8, FN, 1, 1, "ChevronRightIcon", 32),
            f(9, NN, 2, 1, "span", 33),
            v()(),
            f(10, QN, 8, 3, "div", 34),
            v();
        }
        if (2 & t) {
          const e = n.index,
            i = p(3);
          g(2),
            d("ngIf", 0 === e),
            g(2),
            d("ngIf", "date" === i.currentView),
            g(1),
            d("ngIf", "year" !== i.currentView),
            g(1),
            d("ngIf", "year" === i.currentView),
            g(1),
            Lr(
              "display",
              1 === i.numberOfMonths || e === i.numberOfMonths - 1
                ? "inline-flex"
                : "none"
            ),
            x("aria-label", i.nextIconAriaLabel),
            g(1),
            d("ngIf", !i.nextIconTemplate),
            g(1),
            d("ngIf", i.nextIconTemplate),
            g(1),
            d("ngIf", "date" === i.currentView);
        }
      }
      function XN(t, n) {
        if ((1 & t && (y(0, "div", 57), B(1), v()), 2 & t)) {
          const e = p().$implicit;
          g(1), we(" ", e, " ");
        }
      }
      function e9(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "span", 60),
            A("click", function (o) {
              const s = T(e).index;
              return S(p(4).onMonthSelect(o, s));
            })("keydown", function (o) {
              const s = T(e).index;
              return S(p(4).onMonthCellKeydown(o, s));
            }),
            B(1),
            f(2, XN, 2, 1, "div", 56),
            v();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = n.index,
            o = p(4);
          d("ngClass", Ze(3, og, o.isMonthSelected(i), o.isMonthDisabled(i))),
            g(1),
            we(" ", e, " "),
            g(1),
            d("ngIf", o.isMonthSelected(i));
        }
      }
      function t9(t, n) {
        if (
          (1 & t && (y(0, "div", 58), f(1, e9, 3, 6, "span", 59), v()), 2 & t)
        ) {
          const e = p(3);
          g(1), d("ngForOf", e.monthPickerValues());
        }
      }
      function n9(t, n) {
        if ((1 & t && (y(0, "div", 57), B(1), v()), 2 & t)) {
          const e = p().$implicit;
          g(1), we(" ", e, " ");
        }
      }
      function i9(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "span", 63),
            A("click", function (o) {
              const s = T(e).$implicit;
              return S(p(4).onYearSelect(o, s));
            })("keydown", function (o) {
              const s = T(e).$implicit;
              return S(p(4).onYearCellKeydown(o, s));
            }),
            B(1),
            f(2, n9, 2, 1, "div", 56),
            v();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = p(4);
          d("ngClass", Ze(3, og, i.isYearSelected(e), i.isYearDisabled(e))),
            g(1),
            we(" ", e, " "),
            g(1),
            d("ngIf", i.isYearSelected(e));
        }
      }
      function o9(t, n) {
        if (
          (1 & t && (y(0, "div", 61), f(1, i9, 3, 6, "span", 62), v()), 2 & t)
        ) {
          const e = p(3);
          g(1), d("ngForOf", e.yearPickerValues());
        }
      }
      function r9(t, n) {
        if (
          (1 & t &&
            (H(0),
            y(1, "div", 20),
            f(2, JN, 11, 10, "div", 21),
            v(),
            f(3, t9, 2, 1, "div", 22),
            f(4, o9, 2, 1, "div", 23),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(2),
            d("ngForOf", e.months),
            g(1),
            d("ngIf", "month" === e.currentView),
            g(1),
            d("ngIf", "year" === e.currentView);
        }
      }
      function s9(t, n) {
        1 & t && k(0, "ChevronUpIcon");
      }
      function a9(t, n) {}
      function l9(t, n) {
        1 & t && f(0, a9, 0, 0, "ng-template");
      }
      function c9(t, n) {
        1 & t && (H(0), B(1, "0"), z());
      }
      function u9(t, n) {
        1 & t && k(0, "ChevronDownIcon");
      }
      function d9(t, n) {}
      function p9(t, n) {
        1 & t && f(0, d9, 0, 0, "ng-template");
      }
      function h9(t, n) {
        1 & t && k(0, "ChevronUpIcon");
      }
      function f9(t, n) {}
      function g9(t, n) {
        1 & t && f(0, f9, 0, 0, "ng-template");
      }
      function m9(t, n) {
        1 & t && (H(0), B(1, "0"), z());
      }
      function _9(t, n) {
        1 & t && k(0, "ChevronDownIcon");
      }
      function y9(t, n) {}
      function v9(t, n) {
        1 & t && f(0, y9, 0, 0, "ng-template");
      }
      function b9(t, n) {
        if ((1 & t && (y(0, "div", 67)(1, "span"), B(2), v()()), 2 & t)) {
          const e = p(3);
          g(2), Le(e.timeSeparator);
        }
      }
      function C9(t, n) {
        1 & t && k(0, "ChevronUpIcon");
      }
      function w9(t, n) {}
      function T9(t, n) {
        1 & t && f(0, w9, 0, 0, "ng-template");
      }
      function S9(t, n) {
        1 & t && (H(0), B(1, "0"), z());
      }
      function I9(t, n) {
        1 & t && k(0, "ChevronDownIcon");
      }
      function D9(t, n) {}
      function E9(t, n) {
        1 & t && f(0, D9, 0, 0, "ng-template");
      }
      function x9(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 72)(1, "button", 66),
            A("keydown", function (o) {
              return T(e), S(p(3).onContainerButtonKeydown(o));
            })("keydown.enter", function (o) {
              return T(e), S(p(3).incrementSecond(o));
            })("keydown.space", function (o) {
              return T(e), S(p(3).incrementSecond(o));
            })("mousedown", function (o) {
              return T(e), S(p(3).onTimePickerElementMouseDown(o, 2, 1));
            })("mouseup", function (o) {
              return T(e), S(p(3).onTimePickerElementMouseUp(o));
            })("keyup.enter", function (o) {
              return T(e), S(p(3).onTimePickerElementMouseUp(o));
            })("keyup.space", function (o) {
              return T(e), S(p(3).onTimePickerElementMouseUp(o));
            })("mouseleave", function () {
              return T(e), S(p(3).onTimePickerElementMouseLeave());
            }),
            f(2, C9, 1, 0, "ChevronUpIcon", 6),
            f(3, T9, 1, 0, null, 12),
            v(),
            y(4, "span"),
            f(5, S9, 2, 0, "ng-container", 6),
            B(6),
            v(),
            y(7, "button", 66),
            A("keydown", function (o) {
              return T(e), S(p(3).onContainerButtonKeydown(o));
            })("keydown.enter", function (o) {
              return T(e), S(p(3).decrementSecond(o));
            })("keydown.space", function (o) {
              return T(e), S(p(3).decrementSecond(o));
            })("mousedown", function (o) {
              return T(e), S(p(3).onTimePickerElementMouseDown(o, 2, -1));
            })("mouseup", function (o) {
              return T(e), S(p(3).onTimePickerElementMouseUp(o));
            })("keyup.enter", function (o) {
              return T(e), S(p(3).onTimePickerElementMouseUp(o));
            })("keyup.space", function (o) {
              return T(e), S(p(3).onTimePickerElementMouseUp(o));
            })("mouseleave", function () {
              return T(e), S(p(3).onTimePickerElementMouseLeave());
            }),
            f(8, I9, 1, 0, "ChevronDownIcon", 6),
            f(9, E9, 1, 0, null, 12),
            v()();
        }
        if (2 & t) {
          const e = p(3);
          g(1),
            x("aria-label", e.getTranslation("nextSecond")),
            g(1),
            d("ngIf", !e.incrementIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.incrementIconTemplate),
            g(2),
            d("ngIf", e.currentSecond < 10),
            g(1),
            Le(e.currentSecond),
            g(1),
            x("aria-label", e.getTranslation("prevSecond")),
            g(1),
            d("ngIf", !e.decrementIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.decrementIconTemplate);
        }
      }
      function M9(t, n) {
        1 & t && k(0, "ChevronUpIcon");
      }
      function O9(t, n) {}
      function A9(t, n) {
        1 & t && f(0, O9, 0, 0, "ng-template");
      }
      function k9(t, n) {
        1 & t && k(0, "ChevronDownIcon");
      }
      function R9(t, n) {}
      function F9(t, n) {
        1 & t && f(0, R9, 0, 0, "ng-template");
      }
      function L9(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 73)(1, "button", 74),
            A("keydown", function (o) {
              return T(e), S(p(3).onContainerButtonKeydown(o));
            })("click", function (o) {
              return T(e), S(p(3).toggleAMPM(o));
            })("keydown.enter", function (o) {
              return T(e), S(p(3).toggleAMPM(o));
            }),
            f(2, M9, 1, 0, "ChevronUpIcon", 6),
            f(3, A9, 1, 0, null, 12),
            v(),
            y(4, "span"),
            B(5),
            v(),
            y(6, "button", 74),
            A("keydown", function (o) {
              return T(e), S(p(3).onContainerButtonKeydown(o));
            })("click", function (o) {
              return T(e), S(p(3).toggleAMPM(o));
            })("keydown.enter", function (o) {
              return T(e), S(p(3).toggleAMPM(o));
            }),
            f(7, k9, 1, 0, "ChevronDownIcon", 6),
            f(8, F9, 1, 0, null, 12),
            v()();
        }
        if (2 & t) {
          const e = p(3);
          g(1),
            x("aria-label", e.getTranslation("am")),
            g(1),
            d("ngIf", !e.incrementIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.incrementIconTemplate),
            g(2),
            Le(e.pm ? "PM" : "AM"),
            g(1),
            x("aria-label", e.getTranslation("pm")),
            g(1),
            d("ngIf", !e.decrementIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.decrementIconTemplate);
        }
      }
      function P9(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 64)(1, "div", 65)(2, "button", 66),
            A("keydown", function (o) {
              return T(e), S(p(2).onContainerButtonKeydown(o));
            })("keydown.enter", function (o) {
              return T(e), S(p(2).incrementHour(o));
            })("keydown.space", function (o) {
              return T(e), S(p(2).incrementHour(o));
            })("mousedown", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseDown(o, 0, 1));
            })("mouseup", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("keyup.enter", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("keyup.space", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("mouseleave", function () {
              return T(e), S(p(2).onTimePickerElementMouseLeave());
            }),
            f(3, s9, 1, 0, "ChevronUpIcon", 6),
            f(4, l9, 1, 0, null, 12),
            v(),
            y(5, "span"),
            f(6, c9, 2, 0, "ng-container", 6),
            B(7),
            v(),
            y(8, "button", 66),
            A("keydown", function (o) {
              return T(e), S(p(2).onContainerButtonKeydown(o));
            })("keydown.enter", function (o) {
              return T(e), S(p(2).decrementHour(o));
            })("keydown.space", function (o) {
              return T(e), S(p(2).decrementHour(o));
            })("mousedown", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseDown(o, 0, -1));
            })("mouseup", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("keyup.enter", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("keyup.space", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("mouseleave", function () {
              return T(e), S(p(2).onTimePickerElementMouseLeave());
            }),
            f(9, u9, 1, 0, "ChevronDownIcon", 6),
            f(10, p9, 1, 0, null, 12),
            v()(),
            y(11, "div", 67)(12, "span"),
            B(13),
            v()(),
            y(14, "div", 68)(15, "button", 66),
            A("keydown", function (o) {
              return T(e), S(p(2).onContainerButtonKeydown(o));
            })("keydown.enter", function (o) {
              return T(e), S(p(2).incrementMinute(o));
            })("keydown.space", function (o) {
              return T(e), S(p(2).incrementMinute(o));
            })("mousedown", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseDown(o, 1, 1));
            })("mouseup", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("keyup.enter", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("keyup.space", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("mouseleave", function () {
              return T(e), S(p(2).onTimePickerElementMouseLeave());
            }),
            f(16, h9, 1, 0, "ChevronUpIcon", 6),
            f(17, g9, 1, 0, null, 12),
            v(),
            y(18, "span"),
            f(19, m9, 2, 0, "ng-container", 6),
            B(20),
            v(),
            y(21, "button", 66),
            A("keydown", function (o) {
              return T(e), S(p(2).onContainerButtonKeydown(o));
            })("keydown.enter", function (o) {
              return T(e), S(p(2).decrementMinute(o));
            })("keydown.space", function (o) {
              return T(e), S(p(2).decrementMinute(o));
            })("mousedown", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseDown(o, 1, -1));
            })("mouseup", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("keyup.enter", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("keyup.space", function (o) {
              return T(e), S(p(2).onTimePickerElementMouseUp(o));
            })("mouseleave", function () {
              return T(e), S(p(2).onTimePickerElementMouseLeave());
            }),
            f(22, _9, 1, 0, "ChevronDownIcon", 6),
            f(23, v9, 1, 0, null, 12),
            v()(),
            f(24, b9, 3, 1, "div", 69),
            f(25, x9, 10, 8, "div", 70),
            f(26, L9, 9, 7, "div", 71),
            v();
        }
        if (2 & t) {
          const e = p(2);
          g(2),
            x("aria-label", e.getTranslation("nextHour")),
            g(1),
            d("ngIf", !e.incrementIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.incrementIconTemplate),
            g(2),
            d("ngIf", e.currentHour < 10),
            g(1),
            Le(e.currentHour),
            g(1),
            x("aria-label", e.getTranslation("prevHour")),
            g(1),
            d("ngIf", !e.decrementIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.decrementIconTemplate),
            g(3),
            Le(e.timeSeparator),
            g(2),
            x("aria-label", e.getTranslation("nextMinute")),
            g(1),
            d("ngIf", !e.incrementIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.incrementIconTemplate),
            g(2),
            d("ngIf", e.currentMinute < 10),
            g(1),
            Le(e.currentMinute),
            g(1),
            x("aria-label", e.getTranslation("prevMinute")),
            g(1),
            d("ngIf", !e.decrementIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.decrementIconTemplate),
            g(1),
            d("ngIf", e.showSeconds),
            g(1),
            d("ngIf", e.showSeconds),
            g(1),
            d("ngIf", "12" == e.hourFormat);
        }
      }
      const $T = function (t) {
        return [t];
      };
      function N9(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 75)(1, "button", 76),
            A("keydown", function (o) {
              return T(e), S(p(2).onContainerButtonKeydown(o));
            })("click", function (o) {
              return T(e), S(p(2).onTodayButtonClick(o));
            }),
            v(),
            y(2, "button", 76),
            A("keydown", function (o) {
              return T(e), S(p(2).onContainerButtonKeydown(o));
            })("click", function (o) {
              return T(e), S(p(2).onClearButtonClick(o));
            }),
            v()();
        }
        if (2 & t) {
          const e = p(2);
          g(1),
            d("label", e.getTranslation("today"))(
              "ngClass",
              Q(4, $T, e.todayButtonStyleClass)
            ),
            g(1),
            d("label", e.getTranslation("clear"))(
              "ngClass",
              Q(6, $T, e.clearButtonStyleClass)
            );
        }
      }
      function V9(t, n) {
        1 & t && j(0);
      }
      const B9 = function (t, n, e, i, o, r) {
          return {
            "p-datepicker p-component": !0,
            "p-datepicker-inline": t,
            "p-disabled": n,
            "p-datepicker-timeonly": e,
            "p-datepicker-multiple-month": i,
            "p-datepicker-monthpicker": o,
            "p-datepicker-touch-ui": r,
          };
        },
        jT = function (t, n) {
          return { showTransitionParams: t, hideTransitionParams: n };
        },
        H9 = function (t) {
          return { value: "visibleTouchUI", params: t };
        },
        z9 = function (t) {
          return { value: "visible", params: t };
        };
      function $9(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 16, 17),
            A("@overlayAnimation.start", function (o) {
              return T(e), S(p().onOverlayAnimationStart(o));
            })("@overlayAnimation.done", function (o) {
              return T(e), S(p().onOverlayAnimationDone(o));
            })("click", function (o) {
              return T(e), S(p().onOverlayClick(o));
            }),
            jn(2),
            f(3, TN, 1, 0, "ng-container", 12),
            f(4, r9, 5, 3, "ng-container", 6),
            f(5, P9, 27, 20, "div", 18),
            f(6, N9, 3, 8, "div", 19),
            jn(7, 1),
            f(8, V9, 1, 0, "ng-container", 12),
            v();
        }
        if (2 & t) {
          const e = p();
          ne(e.panelStyleClass),
            d("ngStyle", e.panelStyle)(
              "ngClass",
              Vr(
                14,
                B9,
                e.inline,
                e.disabled,
                e.timeOnly,
                e.numberOfMonths > 1,
                "month" === e.view,
                e.touchUI
              )
            )(
              "@overlayAnimation",
              e.touchUI
                ? Q(
                    24,
                    H9,
                    Ze(21, jT, e.showTransitionOptions, e.hideTransitionOptions)
                  )
                : Q(
                    29,
                    z9,
                    Ze(26, jT, e.showTransitionOptions, e.hideTransitionOptions)
                  )
            )("@.disabled", !0 === e.inline),
            x("aria-label", e.getTranslation("chooseDate"))(
              "role",
              e.inline ? null : "dialog"
            )("aria-modal", e.inline ? null : "true"),
            g(3),
            d("ngTemplateOutlet", e.headerTemplate),
            g(1),
            d("ngIf", !e.timeOnly),
            g(1),
            d("ngIf", (e.showTime || e.timeOnly) && "date" === e.currentView),
            g(1),
            d("ngIf", e.showButtonBar),
            g(2),
            d("ngTemplateOutlet", e.footerTemplate);
        }
      }
      const j9 = [[["p-header"]], [["p-footer"]]],
        U9 = function (t, n, e, i) {
          return {
            "p-calendar": !0,
            "p-calendar-w-btn": t,
            "p-calendar-timeonly": n,
            "p-calendar-disabled": e,
            "p-focus": i,
          };
        },
        G9 = ["p-header", "p-footer"],
        W9 = { provide: Rt, useExisting: Te(() => UT), multi: !0 };
      let UT = (() => {
          class t {
            document;
            el;
            renderer;
            cd;
            zone;
            config;
            overlayService;
            style;
            styleClass;
            inputStyle;
            inputId;
            name;
            inputStyleClass;
            placeholder;
            ariaLabelledBy;
            ariaLabel;
            iconAriaLabel;
            disabled;
            dateFormat;
            multipleSeparator = ",";
            rangeSeparator = "-";
            inline = !1;
            showOtherMonths = !0;
            selectOtherMonths;
            showIcon;
            icon;
            appendTo;
            readonlyInput;
            shortYearCutoff = "+10";
            monthNavigator;
            yearNavigator;
            hourFormat = "24";
            timeOnly;
            stepHour = 1;
            stepMinute = 1;
            stepSecond = 1;
            showSeconds = !1;
            required;
            showOnFocus = !0;
            showWeek = !1;
            showClear = !1;
            dataType = "date";
            selectionMode = "single";
            maxDateCount;
            showButtonBar;
            todayButtonStyleClass = "p-button-text";
            clearButtonStyleClass = "p-button-text";
            autoZIndex = !0;
            baseZIndex = 0;
            panelStyleClass;
            panelStyle;
            keepInvalid = !1;
            hideOnDateTimeSelect = !0;
            touchUI;
            timeSeparator = ":";
            focusTrap = !0;
            showTransitionOptions = ".12s cubic-bezier(0, 0, 0.2, 1)";
            hideTransitionOptions = ".1s linear";
            tabindex;
            get minDate() {
              return this._minDate;
            }
            set minDate(e) {
              (this._minDate = e),
                null != this.currentMonth &&
                  null != this.currentMonth &&
                  this.currentYear &&
                  this.createMonths(this.currentMonth, this.currentYear);
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(e) {
              (this._maxDate = e),
                null != this.currentMonth &&
                  null != this.currentMonth &&
                  this.currentYear &&
                  this.createMonths(this.currentMonth, this.currentYear);
            }
            get disabledDates() {
              return this._disabledDates;
            }
            set disabledDates(e) {
              (this._disabledDates = e),
                null != this.currentMonth &&
                  null != this.currentMonth &&
                  this.currentYear &&
                  this.createMonths(this.currentMonth, this.currentYear);
            }
            get disabledDays() {
              return this._disabledDays;
            }
            set disabledDays(e) {
              (this._disabledDays = e),
                null != this.currentMonth &&
                  null != this.currentMonth &&
                  this.currentYear &&
                  this.createMonths(this.currentMonth, this.currentYear);
            }
            get yearRange() {
              return this._yearRange;
            }
            set yearRange(e) {
              if (((this._yearRange = e), e)) {
                const i = e.split(":"),
                  o = parseInt(i[0]),
                  r = parseInt(i[1]);
                this.populateYearOptions(o, r);
              }
            }
            get showTime() {
              return this._showTime;
            }
            set showTime(e) {
              (this._showTime = e),
                void 0 === this.currentHour &&
                  this.initTime(this.value || new Date()),
                this.updateInputfield();
            }
            get responsiveOptions() {
              return this._responsiveOptions;
            }
            set responsiveOptions(e) {
              (this._responsiveOptions = e),
                this.destroyResponsiveStyleElement(),
                this.createResponsiveStyle();
            }
            get numberOfMonths() {
              return this._numberOfMonths;
            }
            set numberOfMonths(e) {
              (this._numberOfMonths = e),
                this.destroyResponsiveStyleElement(),
                this.createResponsiveStyle();
            }
            get firstDayOfWeek() {
              return this._firstDayOfWeek;
            }
            set firstDayOfWeek(e) {
              (this._firstDayOfWeek = e), this.createWeekDays();
            }
            set locale(e) {
              console.warn(
                "Locale property has no effect, use new i18n API instead."
              );
            }
            get view() {
              return this._view;
            }
            set view(e) {
              (this._view = e), (this.currentView = this._view);
            }
            get defaultDate() {
              return this._defaultDate;
            }
            set defaultDate(e) {
              if (((this._defaultDate = e), this.initialized)) {
                const i = e || new Date();
                (this.currentMonth = i.getMonth()),
                  (this.currentYear = i.getFullYear()),
                  this.initTime(i),
                  this.createMonths(this.currentMonth, this.currentYear);
              }
            }
            onFocus = new L();
            onBlur = new L();
            onClose = new L();
            onSelect = new L();
            onClear = new L();
            onInput = new L();
            onTodayClick = new L();
            onClearClick = new L();
            onMonthChange = new L();
            onYearChange = new L();
            onClickOutside = new L();
            onShow = new L();
            templates;
            containerViewChild;
            inputfieldViewChild;
            set content(e) {
              (this.contentViewChild = e),
                this.contentViewChild &&
                  (this.isMonthNavigate
                    ? (Promise.resolve(null).then(() => this.updateFocus()),
                      (this.isMonthNavigate = !1))
                    : this.focus || this.initFocusableCell());
            }
            contentViewChild;
            value;
            dates;
            months;
            weekDays;
            currentMonth;
            currentYear;
            currentHour;
            currentMinute;
            currentSecond;
            pm;
            mask;
            maskClickListener;
            overlay;
            responsiveStyleElement;
            overlayVisible;
            onModelChange = () => {};
            onModelTouched = () => {};
            calendarElement;
            timePickerTimer;
            documentClickListener;
            animationEndListener;
            ticksTo1970;
            yearOptions;
            focus;
            isKeydown;
            filled;
            inputFieldValue = null;
            _minDate;
            _maxDate;
            _showTime;
            _yearRange;
            preventDocumentListener;
            dateTemplate;
            headerTemplate;
            footerTemplate;
            disabledDateTemplate;
            decadeTemplate;
            previousIconTemplate;
            nextIconTemplate;
            triggerIconTemplate;
            clearIconTemplate;
            decrementIconTemplate;
            incrementIconTemplate;
            _disabledDates;
            _disabledDays;
            selectElement;
            todayElement;
            focusElement;
            scrollHandler;
            documentResizeListener;
            navigationState = null;
            isMonthNavigate;
            initialized;
            translationSubscription;
            _locale;
            _responsiveOptions;
            currentView;
            attributeSelector;
            panelId;
            _numberOfMonths = 1;
            _firstDayOfWeek;
            _view = "date";
            preventFocus;
            _defaultDate;
            window;
            get locale() {
              return this._locale;
            }
            get iconButtonAriaLabel() {
              return this.iconAriaLabel
                ? this.iconAriaLabel
                : this.getTranslation("chooseDate");
            }
            get prevIconAriaLabel() {
              return this.getTranslation(
                "year" === this.currentView
                  ? "prevDecade"
                  : "month" === this.currentView
                  ? "prevYear"
                  : "prevMonth"
              );
            }
            get nextIconAriaLabel() {
              return this.getTranslation(
                "year" === this.currentView
                  ? "nextDecade"
                  : "month" === this.currentView
                  ? "nextYear"
                  : "nextMonth"
              );
            }
            constructor(e, i, o, r, s, a, l) {
              (this.document = e),
                (this.el = i),
                (this.renderer = o),
                (this.cd = r),
                (this.zone = s),
                (this.config = a),
                (this.overlayService = l),
                (this.window = this.document.defaultView);
            }
            ngOnInit() {
              (this.attributeSelector = zt()),
                (this.panelId = this.attributeSelector + "_panel");
              const e = this.defaultDate || new Date();
              this.createResponsiveStyle(),
                (this.currentMonth = e.getMonth()),
                (this.currentYear = e.getFullYear()),
                (this.yearOptions = []),
                (this.currentView = this.view),
                "date" === this.view &&
                  (this.createWeekDays(),
                  this.initTime(e),
                  this.createMonths(this.currentMonth, this.currentYear),
                  (this.ticksTo1970 =
                    24 *
                    (718685 +
                      Math.floor(492.5) -
                      Math.floor(19.7) +
                      Math.floor(4.925)) *
                    60 *
                    60 *
                    1e7)),
                (this.translationSubscription =
                  this.config.translationObserver.subscribe(() => {
                    this.createWeekDays(), this.cd.markForCheck();
                  })),
                (this.initialized = !0);
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "date":
                  default:
                    this.dateTemplate = e.template;
                    break;
                  case "decade":
                    this.decadeTemplate = e.template;
                    break;
                  case "disabledDate":
                    this.disabledDateTemplate = e.template;
                    break;
                  case "header":
                    this.headerTemplate = e.template;
                    break;
                  case "previousicon":
                    this.previousIconTemplate = e.template;
                    break;
                  case "nexticon":
                    this.nextIconTemplate = e.template;
                    break;
                  case "triggericon":
                    this.triggerIconTemplate = e.template;
                    break;
                  case "clearicon":
                    this.clearIconTemplate = e.template;
                    break;
                  case "decrementicon":
                    this.decrementIconTemplate = e.template;
                    break;
                  case "incrementicon":
                    this.incrementIconTemplate = e.template;
                    break;
                  case "footer":
                    this.footerTemplate = e.template;
                }
              });
            }
            ngAfterViewInit() {
              this.inline &&
                (this.contentViewChild &&
                  this.contentViewChild.nativeElement.setAttribute(
                    this.attributeSelector,
                    ""
                  ),
                this.disabled ||
                  (this.initFocusableCell(),
                  1 === this.numberOfMonths &&
                    (this.contentViewChild.nativeElement.style.width =
                      w.getOuterWidth(this.containerViewChild?.nativeElement) +
                      "px")));
            }
            getTranslation(e) {
              return this.config.getTranslation(e);
            }
            populateYearOptions(e, i) {
              this.yearOptions = [];
              for (let o = e; o <= i; o++) this.yearOptions.push(o);
            }
            createWeekDays() {
              this.weekDays = [];
              let e = this.getFirstDateOfWeek(),
                i = this.getTranslation(lt.DAY_NAMES_MIN);
              for (let o = 0; o < 7; o++)
                this.weekDays.push(i[e]), (e = 6 == e ? 0 : ++e);
            }
            monthPickerValues() {
              let e = [];
              for (let i = 0; i <= 11; i++)
                e.push(this.config.getTranslation("monthNamesShort")[i]);
              return e;
            }
            yearPickerValues() {
              let e = [],
                i = this.currentYear - (this.currentYear % 10);
              for (let o = 0; o < 10; o++) e.push(i + o);
              return e;
            }
            createMonths(e, i) {
              this.months = this.months = [];
              for (let o = 0; o < this.numberOfMonths; o++) {
                let r = e + o,
                  s = i;
                r > 11 && ((r = (r % 11) - 1), (s = i + 1)),
                  this.months.push(this.createMonth(r, s));
              }
            }
            getWeekNumber(e) {
              let i = new Date(e.getTime());
              i.setDate(i.getDate() + 4 - (i.getDay() || 7));
              let o = i.getTime();
              return (
                i.setMonth(0),
                i.setDate(1),
                Math.floor(Math.round((o - i.getTime()) / 864e5) / 7) + 1
              );
            }
            createMonth(e, i) {
              let o = [],
                r = this.getFirstDayOfMonthIndex(e, i),
                s = this.getDaysCountInMonth(e, i),
                a = this.getDaysCountInPrevMonth(e, i),
                l = 1,
                c = new Date(),
                u = [],
                h = Math.ceil((s + r) / 7);
              for (let m = 0; m < h; m++) {
                let _ = [];
                if (0 == m) {
                  for (let C = a - r + 1; C <= a; C++) {
                    let I = this.getPreviousMonthAndYear(e, i);
                    _.push({
                      day: C,
                      month: I.month,
                      year: I.year,
                      otherMonth: !0,
                      today: this.isToday(c, C, I.month, I.year),
                      selectable: this.isSelectable(C, I.month, I.year, !0),
                    });
                  }
                  let b = 7 - _.length;
                  for (let C = 0; C < b; C++)
                    _.push({
                      day: l,
                      month: e,
                      year: i,
                      today: this.isToday(c, l, e, i),
                      selectable: this.isSelectable(l, e, i, !1),
                    }),
                      l++;
                } else
                  for (let b = 0; b < 7; b++) {
                    if (l > s) {
                      let C = this.getNextMonthAndYear(e, i);
                      _.push({
                        day: l - s,
                        month: C.month,
                        year: C.year,
                        otherMonth: !0,
                        today: this.isToday(c, l - s, C.month, C.year),
                        selectable: this.isSelectable(
                          l - s,
                          C.month,
                          C.year,
                          !0
                        ),
                      });
                    } else
                      _.push({
                        day: l,
                        month: e,
                        year: i,
                        today: this.isToday(c, l, e, i),
                        selectable: this.isSelectable(l, e, i, !1),
                      });
                    l++;
                  }
                this.showWeek &&
                  u.push(
                    this.getWeekNumber(
                      new Date(_[0].year, _[0].month, _[0].day)
                    )
                  ),
                  o.push(_);
              }
              return { month: e, year: i, dates: o, weekNumbers: u };
            }
            initTime(e) {
              (this.pm = e.getHours() > 11),
                this.showTime
                  ? ((this.currentMinute = e.getMinutes()),
                    (this.currentSecond = e.getSeconds()),
                    this.setCurrentHourPM(e.getHours()))
                  : this.timeOnly &&
                    ((this.currentMinute = 0),
                    (this.currentHour = 0),
                    (this.currentSecond = 0));
            }
            navBackward(e) {
              this.disabled
                ? e.preventDefault()
                : ((this.isMonthNavigate = !0),
                  "month" === this.currentView
                    ? (this.decrementYear(),
                      setTimeout(() => {
                        this.updateFocus();
                      }, 1))
                    : "year" === this.currentView
                    ? (this.decrementDecade(),
                      setTimeout(() => {
                        this.updateFocus();
                      }, 1))
                    : (0 === this.currentMonth
                        ? ((this.currentMonth = 11), this.decrementYear())
                        : this.currentMonth--,
                      this.onMonthChange.emit({
                        month: this.currentMonth + 1,
                        year: this.currentYear,
                      }),
                      this.createMonths(this.currentMonth, this.currentYear)));
            }
            navForward(e) {
              this.disabled
                ? e.preventDefault()
                : ((this.isMonthNavigate = !0),
                  "month" === this.currentView
                    ? (this.incrementYear(),
                      setTimeout(() => {
                        this.updateFocus();
                      }, 1))
                    : "year" === this.currentView
                    ? (this.incrementDecade(),
                      setTimeout(() => {
                        this.updateFocus();
                      }, 1))
                    : (11 === this.currentMonth
                        ? ((this.currentMonth = 0), this.incrementYear())
                        : this.currentMonth++,
                      this.onMonthChange.emit({
                        month: this.currentMonth + 1,
                        year: this.currentYear,
                      }),
                      this.createMonths(this.currentMonth, this.currentYear)));
            }
            decrementYear() {
              this.currentYear--;
              let e = this.yearOptions;
              if (this.yearNavigator && this.currentYear < e[0]) {
                let i = e[e.length - 1] - e[0];
                this.populateYearOptions(e[0] - i, e[e.length - 1] - i);
              }
            }
            decrementDecade() {
              this.currentYear = this.currentYear - 10;
            }
            incrementDecade() {
              this.currentYear = this.currentYear + 10;
            }
            incrementYear() {
              this.currentYear++;
              let e = this.yearOptions;
              if (this.yearNavigator && this.currentYear > e[e.length - 1]) {
                let i = e[e.length - 1] - e[0];
                this.populateYearOptions(e[0] + i, e[e.length - 1] + i);
              }
            }
            switchToMonthView(e) {
              this.setCurrentView("month"), e.preventDefault();
            }
            switchToYearView(e) {
              this.setCurrentView("year"), e.preventDefault();
            }
            onDateSelect(e, i) {
              !this.disabled && i.selectable
                ? (this.isMultipleSelection() && this.isSelected(i)
                    ? ((this.value = this.value.filter(
                        (o, r) => !this.isDateEquals(o, i)
                      )),
                      0 === this.value.length && (this.value = null),
                      this.updateModel(this.value))
                    : this.shouldSelectDate(i) && this.selectDate(i),
                  this.isSingleSelection() &&
                    this.hideOnDateTimeSelect &&
                    setTimeout(() => {
                      e.preventDefault(),
                        this.hideOverlay(),
                        this.mask && this.disableModality(),
                        this.cd.markForCheck();
                    }, 150),
                  this.updateInputfield(),
                  e.preventDefault())
                : e.preventDefault();
            }
            shouldSelectDate(e) {
              return (
                !this.isMultipleSelection() ||
                null == this.maxDateCount ||
                this.maxDateCount > (this.value ? this.value.length : 0)
              );
            }
            onMonthSelect(e, i) {
              "month" === this.view
                ? this.onDateSelect(e, {
                    year: this.currentYear,
                    month: i,
                    day: 1,
                    selectable: !0,
                  })
                : ((this.currentMonth = i),
                  this.createMonths(this.currentMonth, this.currentYear),
                  this.setCurrentView("date"),
                  this.onMonthChange.emit({
                    month: this.currentMonth + 1,
                    year: this.currentYear,
                  }));
            }
            onYearSelect(e, i) {
              "year" === this.view
                ? this.onDateSelect(e, {
                    year: i,
                    month: 0,
                    day: 1,
                    selectable: !0,
                  })
                : ((this.currentYear = i),
                  this.setCurrentView("month"),
                  this.onYearChange.emit({
                    month: this.currentMonth + 1,
                    year: this.currentYear,
                  }));
            }
            updateInputfield() {
              let e = "";
              if (this.value)
                if (this.isSingleSelection())
                  e = this.formatDateTime(this.value);
                else if (this.isMultipleSelection())
                  for (let i = 0; i < this.value.length; i++)
                    (e += this.formatDateTime(this.value[i])),
                      i !== this.value.length - 1 &&
                        (e += this.multipleSeparator + " ");
                else if (
                  this.isRangeSelection() &&
                  this.value &&
                  this.value.length
                ) {
                  let o = this.value[1];
                  (e = this.formatDateTime(this.value[0])),
                    o &&
                      (e +=
                        " " +
                        this.rangeSeparator +
                        " " +
                        this.formatDateTime(o));
                }
              (this.inputFieldValue = e),
                this.updateFilledState(),
                this.inputfieldViewChild &&
                  this.inputfieldViewChild.nativeElement &&
                  (this.inputfieldViewChild.nativeElement.value =
                    this.inputFieldValue);
            }
            formatDateTime(e) {
              let i = this.keepInvalid ? e : null;
              return (
                this.isValidDate(e) &&
                  (this.timeOnly
                    ? (i = this.formatTime(e))
                    : ((i = this.formatDate(e, this.getDateFormat())),
                      this.showTime && (i += " " + this.formatTime(e)))),
                i
              );
            }
            setCurrentHourPM(e) {
              "12" == this.hourFormat
                ? ((this.pm = e > 11),
                  (this.currentHour =
                    e >= 12 ? (12 == e ? 12 : e - 12) : 0 == e ? 12 : e))
                : (this.currentHour = e);
            }
            setCurrentView(e) {
              (this.currentView = e),
                this.cd.detectChanges(),
                this.alignOverlay();
            }
            selectDate(e) {
              let i = new Date(e.year, e.month, e.day);
              if (
                (this.showTime &&
                  (i.setHours(
                    "12" == this.hourFormat
                      ? 12 === this.currentHour
                        ? this.pm
                          ? 12
                          : 0
                        : this.pm
                        ? this.currentHour + 12
                        : this.currentHour
                      : this.currentHour
                  ),
                  i.setMinutes(this.currentMinute),
                  i.setSeconds(this.currentSecond)),
                this.minDate &&
                  this.minDate > i &&
                  ((i = this.minDate),
                  this.setCurrentHourPM(i.getHours()),
                  (this.currentMinute = i.getMinutes()),
                  (this.currentSecond = i.getSeconds())),
                this.maxDate &&
                  this.maxDate < i &&
                  ((i = this.maxDate),
                  this.setCurrentHourPM(i.getHours()),
                  (this.currentMinute = i.getMinutes()),
                  (this.currentSecond = i.getSeconds())),
                this.isSingleSelection())
              )
                this.updateModel(i);
              else if (this.isMultipleSelection())
                this.updateModel(this.value ? [...this.value, i] : [i]);
              else if (this.isRangeSelection())
                if (this.value && this.value.length) {
                  let o = this.value[0],
                    r = this.value[1];
                  !r && i.getTime() >= o.getTime()
                    ? (r = i)
                    : ((o = i), (r = null)),
                    this.updateModel([o, r]);
                } else this.updateModel([i, null]);
              this.onSelect.emit(i);
            }
            updateModel(e) {
              if (((this.value = e), "date" == this.dataType))
                this.onModelChange(this.value);
              else if ("string" == this.dataType)
                if (this.isSingleSelection())
                  this.onModelChange(this.formatDateTime(this.value));
                else {
                  let i = null;
                  Array.isArray(this.value) &&
                    (i = this.value.map((o) => this.formatDateTime(o))),
                    this.onModelChange(i);
                }
            }
            getFirstDayOfMonthIndex(e, i) {
              let o = new Date();
              o.setDate(1), o.setMonth(e), o.setFullYear(i);
              let r = o.getDay() + this.getSundayIndex();
              return r >= 7 ? r - 7 : r;
            }
            getDaysCountInMonth(e, i) {
              return (
                32 - this.daylightSavingAdjust(new Date(i, e, 32)).getDate()
              );
            }
            getDaysCountInPrevMonth(e, i) {
              let o = this.getPreviousMonthAndYear(e, i);
              return this.getDaysCountInMonth(o.month, o.year);
            }
            getPreviousMonthAndYear(e, i) {
              let o, r;
              return (
                0 === e ? ((o = 11), (r = i - 1)) : ((o = e - 1), (r = i)),
                { month: o, year: r }
              );
            }
            getNextMonthAndYear(e, i) {
              let o, r;
              return (
                11 === e ? ((o = 0), (r = i + 1)) : ((o = e + 1), (r = i)),
                { month: o, year: r }
              );
            }
            getSundayIndex() {
              let e = this.getFirstDateOfWeek();
              return e > 0 ? 7 - e : 0;
            }
            isSelected(e) {
              if (!this.value) return !1;
              if (this.isSingleSelection())
                return this.isDateEquals(this.value, e);
              if (this.isMultipleSelection()) {
                let i = !1;
                for (let o of this.value)
                  if (((i = this.isDateEquals(o, e)), i)) break;
                return i;
              }
              return this.isRangeSelection()
                ? this.value[1]
                  ? this.isDateEquals(this.value[0], e) ||
                    this.isDateEquals(this.value[1], e) ||
                    this.isDateBetween(this.value[0], this.value[1], e)
                  : this.isDateEquals(this.value[0], e)
                : void 0;
            }
            isComparable() {
              return null != this.value && "string" != typeof this.value;
            }
            isMonthSelected(e) {
              if (this.isComparable() && !this.isMultipleSelection()) {
                const [i, o] = this.isRangeSelection()
                    ? this.value
                    : [this.value, this.value],
                  r = new Date(this.currentYear, e, 1);
                return r >= i && r <= (o ?? i);
              }
              return !1;
            }
            isMonthDisabled(e) {
              for (
                let i = 1;
                i < this.getDaysCountInMonth(e, this.currentYear) + 1;
                i++
              )
                if (this.isSelectable(i, e, this.currentYear, !1)) return !1;
              return !0;
            }
            isYearDisabled(e) {
              return !this.isSelectable(1, this.currentMonth, e, !1);
            }
            isYearSelected(e) {
              if (this.isComparable()) {
                let i = this.isRangeSelection() ? this.value[0] : this.value;
                return !this.isMultipleSelection() && i.getFullYear() === e;
              }
              return !1;
            }
            isDateEquals(e, i) {
              return (
                !(!e || !P.isDate(e)) &&
                e.getDate() === i.day &&
                e.getMonth() === i.month &&
                e.getFullYear() === i.year
              );
            }
            isDateBetween(e, i, o) {
              if (P.isDate(e) && P.isDate(i)) {
                let s = new Date(o.year, o.month, o.day);
                return e.getTime() <= s.getTime() && i.getTime() >= s.getTime();
              }
              return !1;
            }
            isSingleSelection() {
              return "single" === this.selectionMode;
            }
            isRangeSelection() {
              return "range" === this.selectionMode;
            }
            isMultipleSelection() {
              return "multiple" === this.selectionMode;
            }
            isToday(e, i, o, r) {
              return (
                e.getDate() === i && e.getMonth() === o && e.getFullYear() === r
              );
            }
            isSelectable(e, i, o, r) {
              let s = !0,
                a = !0,
                l = !0,
                c = !0;
              return (
                !(r && !this.selectOtherMonths) &&
                (this.minDate &&
                  (this.minDate.getFullYear() > o ||
                    (this.minDate.getFullYear() === o &&
                      (this.minDate.getMonth() > i ||
                        (this.minDate.getMonth() === i &&
                          this.minDate.getDate() > e)))) &&
                  (s = !1),
                this.maxDate &&
                  (this.maxDate.getFullYear() < o ||
                    (this.maxDate.getFullYear() === o &&
                      (this.maxDate.getMonth() < i ||
                        (this.maxDate.getMonth() === i &&
                          this.maxDate.getDate() < e)))) &&
                  (a = !1),
                this.disabledDates && (l = !this.isDateDisabled(e, i, o)),
                this.disabledDays && (c = !this.isDayDisabled(e, i, o)),
                s && a && l && c)
              );
            }
            isDateDisabled(e, i, o) {
              if (this.disabledDates)
                for (let r of this.disabledDates)
                  if (
                    r.getFullYear() === o &&
                    r.getMonth() === i &&
                    r.getDate() === e
                  )
                    return !0;
              return !1;
            }
            isDayDisabled(e, i, o) {
              if (this.disabledDays) {
                let s = new Date(o, i, e).getDay();
                return -1 !== this.disabledDays.indexOf(s);
              }
              return !1;
            }
            onInputFocus(e) {
              (this.focus = !0),
                this.showOnFocus && this.showOverlay(),
                this.onFocus.emit(e);
            }
            onInputClick() {
              this.showOnFocus && !this.overlayVisible && this.showOverlay();
            }
            onInputBlur(e) {
              (this.focus = !1),
                this.onBlur.emit(e),
                this.keepInvalid || this.updateInputfield(),
                this.onModelTouched();
            }
            onButtonClick(e, i) {
              this.overlayVisible
                ? this.hideOverlay()
                : (i.focus(), this.showOverlay());
            }
            clear() {
              (this.inputFieldValue = null),
                (this.value = null),
                this.onModelChange(this.value),
                this.onClear.emit();
            }
            onOverlayClick(e) {
              this.overlayService.add({
                originalEvent: e,
                target: this.el.nativeElement,
              });
            }
            getMonthName(e) {
              return this.config.getTranslation("monthNames")[e];
            }
            getYear(e) {
              return "month" === this.currentView ? this.currentYear : e.year;
            }
            switchViewButtonDisabled() {
              return this.numberOfMonths > 1 || this.disabled;
            }
            onPrevButtonClick(e) {
              (this.navigationState = { backward: !0, button: !0 }),
                this.navBackward(e);
            }
            onNextButtonClick(e) {
              (this.navigationState = { backward: !1, button: !0 }),
                this.navForward(e);
            }
            onContainerButtonKeydown(e) {
              switch (e.which) {
                case 9:
                  this.inline || this.trapFocus(e);
                  break;
                case 27:
                  this.inputfieldViewChild?.nativeElement.focus(),
                    (this.overlayVisible = !1),
                    e.preventDefault();
              }
            }
            onInputKeydown(e) {
              (this.isKeydown = !0),
                40 === e.keyCode && this.contentViewChild
                  ? this.trapFocus(e)
                  : 27 === e.keyCode
                  ? this.overlayVisible &&
                    (this.inputfieldViewChild?.nativeElement.focus(),
                    (this.overlayVisible = !1),
                    e.preventDefault())
                  : 13 === e.keyCode
                  ? this.overlayVisible &&
                    ((this.overlayVisible = !1), e.preventDefault())
                  : 9 === e.keyCode &&
                    this.contentViewChild &&
                    (w
                      .getFocusableElements(this.contentViewChild.nativeElement)
                      .forEach((i) => (i.tabIndex = "-1")),
                    this.overlayVisible && (this.overlayVisible = !1));
            }
            onDateCellKeydown(e, i, o) {
              const r = e.currentTarget,
                s = r.parentElement;
              switch (e.which) {
                case 40: {
                  r.tabIndex = "-1";
                  let a = w.index(s),
                    l = s.parentElement.nextElementSibling;
                  l
                    ? w.hasClass(l.children[a].children[0], "p-disabled")
                      ? ((this.navigationState = { backward: !1 }),
                        this.navForward(e))
                      : ((l.children[a].children[0].tabIndex = "0"),
                        l.children[a].children[0].focus())
                    : ((this.navigationState = { backward: !1 }),
                      this.navForward(e)),
                    e.preventDefault();
                  break;
                }
                case 38: {
                  r.tabIndex = "-1";
                  let a = w.index(s),
                    l = s.parentElement.previousElementSibling;
                  if (l) {
                    let c = l.children[a].children[0];
                    w.hasClass(c, "p-disabled")
                      ? ((this.navigationState = { backward: !0 }),
                        this.navBackward(e))
                      : ((c.tabIndex = "0"), c.focus());
                  } else
                    (this.navigationState = { backward: !0 }),
                      this.navBackward(e);
                  e.preventDefault();
                  break;
                }
                case 37: {
                  r.tabIndex = "-1";
                  let a = s.previousElementSibling;
                  if (a) {
                    let l = a.children[0];
                    w.hasClass(l, "p-disabled") ||
                    w.hasClass(l.parentElement, "p-datepicker-weeknumber")
                      ? this.navigateToMonth(!0, o)
                      : ((l.tabIndex = "0"), l.focus());
                  } else this.navigateToMonth(!0, o);
                  e.preventDefault();
                  break;
                }
                case 39: {
                  r.tabIndex = "-1";
                  let a = s.nextElementSibling;
                  if (a) {
                    let l = a.children[0];
                    w.hasClass(l, "p-disabled")
                      ? this.navigateToMonth(!1, o)
                      : ((l.tabIndex = "0"), l.focus());
                  } else this.navigateToMonth(!1, o);
                  e.preventDefault();
                  break;
                }
                case 13:
                case 32:
                  this.onDateSelect(e, i), e.preventDefault();
                  break;
                case 27:
                  this.inputfieldViewChild?.nativeElement.focus(),
                    (this.overlayVisible = !1),
                    e.preventDefault();
                  break;
                case 9:
                  this.inline || this.trapFocus(e);
              }
            }
            onMonthCellKeydown(e, i) {
              const o = e.currentTarget;
              switch (e.which) {
                case 38:
                case 40: {
                  o.tabIndex = "-1";
                  var r = o.parentElement.children,
                    s = w.index(o);
                  let a = r[40 === e.which ? s + 3 : s - 3];
                  a && ((a.tabIndex = "0"), a.focus()), e.preventDefault();
                  break;
                }
                case 37: {
                  o.tabIndex = "-1";
                  let a = o.previousElementSibling;
                  a
                    ? ((a.tabIndex = "0"), a.focus())
                    : ((this.navigationState = { backward: !0 }),
                      this.navBackward(e)),
                    e.preventDefault();
                  break;
                }
                case 39: {
                  o.tabIndex = "-1";
                  let a = o.nextElementSibling;
                  a
                    ? ((a.tabIndex = "0"), a.focus())
                    : ((this.navigationState = { backward: !1 }),
                      this.navForward(e)),
                    e.preventDefault();
                  break;
                }
                case 13:
                case 32:
                  this.onMonthSelect(e, i), e.preventDefault();
                  break;
                case 27:
                  this.inputfieldViewChild?.nativeElement.focus(),
                    (this.overlayVisible = !1),
                    e.preventDefault();
                  break;
                case 9:
                  this.inline || this.trapFocus(e);
              }
            }
            onYearCellKeydown(e, i) {
              const o = e.currentTarget;
              switch (e.which) {
                case 38:
                case 40: {
                  o.tabIndex = "-1";
                  var r = o.parentElement.children,
                    s = w.index(o);
                  let a = r[40 === e.which ? s + 2 : s - 2];
                  a && ((a.tabIndex = "0"), a.focus()), e.preventDefault();
                  break;
                }
                case 37: {
                  o.tabIndex = "-1";
                  let a = o.previousElementSibling;
                  a
                    ? ((a.tabIndex = "0"), a.focus())
                    : ((this.navigationState = { backward: !0 }),
                      this.navBackward(e)),
                    e.preventDefault();
                  break;
                }
                case 39: {
                  o.tabIndex = "-1";
                  let a = o.nextElementSibling;
                  a
                    ? ((a.tabIndex = "0"), a.focus())
                    : ((this.navigationState = { backward: !1 }),
                      this.navForward(e)),
                    e.preventDefault();
                  break;
                }
                case 13:
                case 32:
                  this.onYearSelect(e, i), e.preventDefault();
                  break;
                case 27:
                  this.inputfieldViewChild?.nativeElement.focus(),
                    (this.overlayVisible = !1),
                    e.preventDefault();
                  break;
                case 9:
                  this.trapFocus(e);
              }
            }
            navigateToMonth(e, i) {
              if (e)
                if (1 === this.numberOfMonths || 0 === i)
                  (this.navigationState = { backward: !0 }),
                    this.navBackward(event);
                else {
                  let r = w.find(
                      this.contentViewChild.nativeElement.children[i - 1],
                      ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                    ),
                    s = r[r.length - 1];
                  (s.tabIndex = "0"), s.focus();
                }
              else if (
                1 === this.numberOfMonths ||
                i === this.numberOfMonths - 1
              )
                (this.navigationState = { backward: !1 }),
                  this.navForward(event);
              else {
                let r = w.findSingle(
                  this.contentViewChild.nativeElement.children[i + 1],
                  ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                );
                (r.tabIndex = "0"), r.focus();
              }
            }
            updateFocus() {
              let e;
              if (this.navigationState) {
                if (this.navigationState.button)
                  this.initFocusableCell(),
                    this.navigationState.backward
                      ? w
                          .findSingle(
                            this.contentViewChild.nativeElement,
                            ".p-datepicker-prev"
                          )
                          .focus()
                      : w
                          .findSingle(
                            this.contentViewChild.nativeElement,
                            ".p-datepicker-next"
                          )
                          .focus();
                else {
                  if (this.navigationState.backward) {
                    let i;
                    (i = w.find(
                      this.contentViewChild.nativeElement,
                      "month" === this.currentView
                        ? ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                        : "year" === this.currentView
                        ? ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                        : ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                    )),
                      i && i.length > 0 && (e = i[i.length - 1]);
                  } else
                    e = w.findSingle(
                      this.contentViewChild.nativeElement,
                      "month" === this.currentView
                        ? ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                        : "year" === this.currentView
                        ? ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                        : ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                    );
                  e && ((e.tabIndex = "0"), e.focus());
                }
                this.navigationState = null;
              } else this.initFocusableCell();
            }
            initFocusableCell() {
              const e = this.contentViewChild?.nativeElement;
              let i;
              if ("month" === this.currentView) {
                let o = w.find(
                    e,
                    ".p-monthpicker .p-monthpicker-month:not(.p-disabled)"
                  ),
                  r = w.findSingle(
                    e,
                    ".p-monthpicker .p-monthpicker-month.p-highlight"
                  );
                o.forEach((s) => (s.tabIndex = -1)),
                  (i = r || o[0]),
                  0 === o.length &&
                    w
                      .find(
                        e,
                        '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = "0"]'
                      )
                      .forEach((a) => (a.tabIndex = -1));
              } else if ("year" === this.currentView) {
                let o = w.find(
                    e,
                    ".p-yearpicker .p-yearpicker-year:not(.p-disabled)"
                  ),
                  r = w.findSingle(
                    e,
                    ".p-yearpicker .p-yearpicker-year.p-highlight"
                  );
                o.forEach((s) => (s.tabIndex = -1)),
                  (i = r || o[0]),
                  0 === o.length &&
                    w
                      .find(
                        e,
                        '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = "0"]'
                      )
                      .forEach((a) => (a.tabIndex = -1));
              } else if (((i = w.findSingle(e, "span.p-highlight")), !i)) {
                let o = w.findSingle(
                  e,
                  "td.p-datepicker-today span:not(.p-disabled):not(.p-ink)"
                );
                i =
                  o ||
                  w.findSingle(
                    e,
                    ".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"
                  );
              }
              i &&
                ((i.tabIndex = "0"),
                !this.preventFocus &&
                  (!this.navigationState || !this.navigationState.button) &&
                  setTimeout(() => {
                    this.disabled || i.focus();
                  }, 1),
                (this.preventFocus = !1));
            }
            trapFocus(e) {
              let i = w.getFocusableElements(
                this.contentViewChild.nativeElement
              );
              if (i && i.length > 0)
                if (i[0].ownerDocument.activeElement) {
                  let o = i.indexOf(i[0].ownerDocument.activeElement);
                  if (e.shiftKey)
                    if (-1 == o || 0 === o)
                      if (this.focusTrap) i[i.length - 1].focus();
                      else {
                        if (-1 === o) return this.hideOverlay();
                        if (0 === o) return;
                      }
                    else i[o - 1].focus();
                  else if (-1 == o)
                    if (this.timeOnly) i[0].focus();
                    else {
                      let r = 0;
                      for (let s = 0; s < i.length; s++)
                        "SPAN" === i[s].tagName && (r = s);
                      i[r].focus();
                    }
                  else if (o === i.length - 1) {
                    if (!this.focusTrap && -1 != o) return this.hideOverlay();
                    i[0].focus();
                  } else i[o + 1].focus();
                } else i[0].focus();
              e.preventDefault();
            }
            onMonthDropdownChange(e) {
              (this.currentMonth = parseInt(e)),
                this.onMonthChange.emit({
                  month: this.currentMonth + 1,
                  year: this.currentYear,
                }),
                this.createMonths(this.currentMonth, this.currentYear);
            }
            onYearDropdownChange(e) {
              (this.currentYear = parseInt(e)),
                this.onYearChange.emit({
                  month: this.currentMonth + 1,
                  year: this.currentYear,
                }),
                this.createMonths(this.currentMonth, this.currentYear);
            }
            convertTo24Hour = function (e, i) {
              return "12" == this.hourFormat
                ? 12 === e
                  ? i
                    ? 12
                    : 0
                  : i
                  ? e + 12
                  : e
                : e;
            };
            validateTime(e, i, o, r) {
              let s = this.value;
              const a = this.convertTo24Hour(e, r);
              this.isRangeSelection() && (s = this.value[1] || this.value[0]),
                this.isMultipleSelection() &&
                  (s = this.value[this.value.length - 1]);
              const l = s ? s.toDateString() : null;
              return !(
                (this.minDate &&
                  l &&
                  this.minDate.toDateString() === l &&
                  (this.minDate.getHours() > a ||
                    (this.minDate.getHours() === a &&
                      (this.minDate.getMinutes() > i ||
                        (this.minDate.getMinutes() === i &&
                          this.minDate.getSeconds() > o))))) ||
                (this.maxDate &&
                  l &&
                  this.maxDate.toDateString() === l &&
                  (this.maxDate.getHours() < a ||
                    (this.maxDate.getHours() === a &&
                      (this.maxDate.getMinutes() < i ||
                        (this.maxDate.getMinutes() === i &&
                          this.maxDate.getSeconds() < o)))))
              );
            }
            incrementHour(e) {
              let o = this.currentHour + this.stepHour,
                r = this.pm;
              "24" == this.hourFormat
                ? (o = o >= 24 ? o - 24 : o)
                : "12" == this.hourFormat &&
                  (this.currentHour < 12 && o > 11 && (r = !this.pm),
                  (o = o >= 13 ? o - 12 : o)),
                this.validateTime(
                  o,
                  this.currentMinute,
                  this.currentSecond,
                  r
                ) && ((this.currentHour = o), (this.pm = r)),
                e.preventDefault();
            }
            onTimePickerElementMouseDown(e, i, o) {
              this.disabled || (this.repeat(e, null, i, o), e.preventDefault());
            }
            onTimePickerElementMouseUp(e) {
              this.disabled || (this.clearTimePickerTimer(), this.updateTime());
            }
            onTimePickerElementMouseLeave() {
              !this.disabled &&
                this.timePickerTimer &&
                (this.clearTimePickerTimer(), this.updateTime());
            }
            repeat(e, i, o, r) {
              let s = i || 500;
              switch (
                (this.clearTimePickerTimer(),
                (this.timePickerTimer = setTimeout(() => {
                  this.repeat(e, 100, o, r), this.cd.markForCheck();
                }, s)),
                o)
              ) {
                case 0:
                  1 === r ? this.incrementHour(e) : this.decrementHour(e);
                  break;
                case 1:
                  1 === r ? this.incrementMinute(e) : this.decrementMinute(e);
                  break;
                case 2:
                  1 === r ? this.incrementSecond(e) : this.decrementSecond(e);
              }
              this.updateInputfield();
            }
            clearTimePickerTimer() {
              this.timePickerTimer &&
                (clearTimeout(this.timePickerTimer),
                (this.timePickerTimer = null));
            }
            decrementHour(e) {
              let i = this.currentHour - this.stepHour,
                o = this.pm;
              "24" == this.hourFormat
                ? (i = i < 0 ? 24 + i : i)
                : "12" == this.hourFormat &&
                  (12 === this.currentHour && (o = !this.pm),
                  (i = i <= 0 ? 12 + i : i)),
                this.validateTime(
                  i,
                  this.currentMinute,
                  this.currentSecond,
                  o
                ) && ((this.currentHour = i), (this.pm = o)),
                e.preventDefault();
            }
            incrementMinute(e) {
              let i = this.currentMinute + this.stepMinute;
              (i = i > 59 ? i - 60 : i),
                this.validateTime(
                  this.currentHour,
                  i,
                  this.currentSecond,
                  this.pm
                ) && (this.currentMinute = i),
                e.preventDefault();
            }
            decrementMinute(e) {
              let i = this.currentMinute - this.stepMinute;
              (i = i < 0 ? 60 + i : i),
                this.validateTime(
                  this.currentHour,
                  i,
                  this.currentSecond,
                  this.pm
                ) && (this.currentMinute = i),
                e.preventDefault();
            }
            incrementSecond(e) {
              let i = this.currentSecond + this.stepSecond;
              (i = i > 59 ? i - 60 : i),
                this.validateTime(
                  this.currentHour,
                  this.currentMinute,
                  i,
                  this.pm
                ) && (this.currentSecond = i),
                e.preventDefault();
            }
            decrementSecond(e) {
              let i = this.currentSecond - this.stepSecond;
              (i = i < 0 ? 60 + i : i),
                this.validateTime(
                  this.currentHour,
                  this.currentMinute,
                  i,
                  this.pm
                ) && (this.currentSecond = i),
                e.preventDefault();
            }
            updateTime() {
              let e = this.value;
              this.isRangeSelection() && (e = this.value[1] || this.value[0]),
                this.isMultipleSelection() &&
                  (e = this.value[this.value.length - 1]),
                (e = e ? new Date(e.getTime()) : new Date()),
                e.setHours(
                  "12" == this.hourFormat
                    ? 12 === this.currentHour
                      ? this.pm
                        ? 12
                        : 0
                      : this.pm
                      ? this.currentHour + 12
                      : this.currentHour
                    : this.currentHour
                ),
                e.setMinutes(this.currentMinute),
                e.setSeconds(this.currentSecond),
                this.isRangeSelection() &&
                  (e = this.value[1] ? [this.value[0], e] : [e, null]),
                this.isMultipleSelection() &&
                  (e = [...this.value.slice(0, -1), e]),
                this.updateModel(e),
                this.onSelect.emit(e),
                this.updateInputfield();
            }
            toggleAMPM(e) {
              const i = !this.pm;
              this.validateTime(
                this.currentHour,
                this.currentMinute,
                this.currentSecond,
                i
              ) && ((this.pm = i), this.updateTime()),
                e.preventDefault();
            }
            onUserInput(e) {
              if (!this.isKeydown) return;
              this.isKeydown = !1;
              let i = e.target.value;
              try {
                let o = this.parseValueFromString(i);
                this.isValidSelection(o)
                  ? (this.updateModel(o), this.updateUI())
                  : this.keepInvalid && this.updateModel(o);
              } catch {
                this.updateModel(this.keepInvalid ? i : null);
              }
              (this.filled = null != i && i.length), this.onInput.emit(e);
            }
            isValidSelection(e) {
              let i = !0;
              return (
                this.isSingleSelection()
                  ? this.isSelectable(
                      e.getDate(),
                      e.getMonth(),
                      e.getFullYear(),
                      !1
                    ) || (i = !1)
                  : e.every((o) =>
                      this.isSelectable(
                        o.getDate(),
                        o.getMonth(),
                        o.getFullYear(),
                        !1
                      )
                    ) &&
                    this.isRangeSelection() &&
                    (i = e.length > 1 && e[1] > e[0]),
                i
              );
            }
            parseValueFromString(e) {
              if (!e || 0 === e.trim().length) return null;
              let i;
              if (this.isSingleSelection()) i = this.parseDateTime(e);
              else if (this.isMultipleSelection()) {
                let o = e.split(this.multipleSeparator);
                i = [];
                for (let r of o) i.push(this.parseDateTime(r.trim()));
              } else if (this.isRangeSelection()) {
                let o = e.split(" " + this.rangeSeparator + " ");
                i = [];
                for (let r = 0; r < o.length; r++)
                  i[r] = this.parseDateTime(o[r].trim());
              }
              return i;
            }
            parseDateTime(e) {
              let i,
                o = e.split(" ");
              if (this.timeOnly)
                (i = new Date()), this.populateTime(i, o[0], o[1]);
              else {
                const r = this.getDateFormat();
                if (this.showTime) {
                  let s = "12" == this.hourFormat ? o.pop() : null,
                    a = o.pop();
                  (i = this.parseDate(o.join(" "), r)),
                    this.populateTime(i, a, s);
                } else i = this.parseDate(e, r);
              }
              return i;
            }
            populateTime(e, i, o) {
              if ("12" == this.hourFormat && !o) throw "Invalid Time";
              this.pm = "PM" === o || "pm" === o;
              let r = this.parseTime(i);
              e.setHours(r.hour),
                e.setMinutes(r.minute),
                e.setSeconds(r.second);
            }
            isValidDate(e) {
              return P.isDate(e) && P.isNotEmpty(e);
            }
            updateUI() {
              let e = this.value;
              Array.isArray(e) && (e = e[0]);
              let i =
                this.defaultDate &&
                this.isValidDate(this.defaultDate) &&
                !this.value
                  ? this.defaultDate
                  : e && this.isValidDate(e)
                  ? e
                  : new Date();
              (this.currentMonth = i.getMonth()),
                (this.currentYear = i.getFullYear()),
                this.createMonths(this.currentMonth, this.currentYear),
                (this.showTime || this.timeOnly) &&
                  (this.setCurrentHourPM(i.getHours()),
                  (this.currentMinute = i.getMinutes()),
                  (this.currentSecond = i.getSeconds()));
            }
            showOverlay() {
              this.overlayVisible ||
                (this.updateUI(),
                this.touchUI || (this.preventFocus = !0),
                (this.overlayVisible = !0));
            }
            hideOverlay() {
              this.inputfieldViewChild?.nativeElement.focus(),
                (this.overlayVisible = !1),
                this.clearTimePickerTimer(),
                this.touchUI && this.disableModality(),
                this.cd.markForCheck();
            }
            toggle() {
              this.inline ||
                (this.overlayVisible
                  ? this.hideOverlay()
                  : (this.showOverlay(),
                    this.inputfieldViewChild?.nativeElement.focus()));
            }
            onOverlayAnimationStart(e) {
              switch (e.toState) {
                case "visible":
                case "visibleTouchUI":
                  this.inline ||
                    ((this.overlay = e.element),
                    this.overlay?.setAttribute(this.attributeSelector, ""),
                    this.appendOverlay(),
                    this.updateFocus(),
                    this.autoZIndex &&
                      (this.touchUI
                        ? yn.set(
                            "modal",
                            this.overlay,
                            this.baseZIndex || this.config.zIndex.modal
                          )
                        : yn.set(
                            "overlay",
                            this.overlay,
                            this.baseZIndex || this.config.zIndex.overlay
                          )),
                    this.alignOverlay(),
                    this.onShow.emit(e));
                  break;
                case "void":
                  this.onOverlayHide(), this.onClose.emit(e);
              }
            }
            onOverlayAnimationDone(e) {
              switch (e.toState) {
                case "visible":
                case "visibleTouchUI":
                  this.inline ||
                    (this.bindDocumentClickListener(),
                    this.bindDocumentResizeListener(),
                    this.bindScrollListener());
                  break;
                case "void":
                  this.autoZIndex && yn.clear(e.element);
              }
            }
            appendOverlay() {
              this.appendTo &&
                ("body" === this.appendTo
                  ? this.document.body.appendChild(this.overlay)
                  : w.appendChild(this.overlay, this.appendTo));
            }
            restoreOverlayAppend() {
              this.overlay &&
                this.appendTo &&
                this.el.nativeElement.appendChild(this.overlay);
            }
            alignOverlay() {
              this.touchUI
                ? this.enableModality(this.overlay)
                : this.overlay &&
                  (this.appendTo
                    ? ("date" === this.view
                        ? ((this.overlay.style.width =
                            w.getOuterWidth(this.overlay) + "px"),
                          (this.overlay.style.minWidth =
                            w.getOuterWidth(
                              this.inputfieldViewChild?.nativeElement
                            ) + "px"))
                        : (this.overlay.style.width =
                            w.getOuterWidth(
                              this.inputfieldViewChild?.nativeElement
                            ) + "px"),
                      w.absolutePosition(
                        this.overlay,
                        this.inputfieldViewChild?.nativeElement
                      ))
                    : w.relativePosition(
                        this.overlay,
                        this.inputfieldViewChild?.nativeElement
                      ));
            }
            enableModality(e) {
              !this.mask &&
                this.touchUI &&
                ((this.mask = this.renderer.createElement("div")),
                this.renderer.setStyle(
                  this.mask,
                  "zIndex",
                  String(parseInt(e.style.zIndex) - 1)
                ),
                w.addMultipleClasses(
                  this.mask,
                  "p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter"
                ),
                (this.maskClickListener = this.renderer.listen(
                  this.mask,
                  "click",
                  (o) => {
                    this.disableModality(), (this.overlayVisible = !1);
                  }
                )),
                this.renderer.appendChild(this.document.body, this.mask),
                w.blockBodyScroll());
            }
            disableModality() {
              this.mask &&
                (w.addClass(this.mask, "p-component-overlay-leave"),
                this.animationEndListener ||
                  (this.animationEndListener = this.renderer.listen(
                    this.mask,
                    "animationend",
                    this.destroyMask.bind(this)
                  )));
            }
            destroyMask() {
              if (!this.mask) return;
              this.renderer.removeChild(this.document.body, this.mask);
              let i,
                e = this.document.body.children;
              for (let o = 0; o < e.length; o++)
                if (w.hasClass(e[o], "p-datepicker-mask-scrollblocker")) {
                  i = !0;
                  break;
                }
              i || w.unblockBodyScroll(),
                this.unbindAnimationEndListener(),
                this.unbindMaskClickListener(),
                (this.mask = null);
            }
            unbindMaskClickListener() {
              this.maskClickListener &&
                (this.maskClickListener(), (this.maskClickListener = null));
            }
            unbindAnimationEndListener() {
              this.animationEndListener &&
                this.mask &&
                (this.animationEndListener(),
                (this.animationEndListener = null));
            }
            writeValue(e) {
              if (
                ((this.value = e), this.value && "string" == typeof this.value)
              )
                try {
                  this.value = this.parseValueFromString(this.value);
                } catch {
                  this.keepInvalid && (this.value = e);
                }
              this.updateInputfield(), this.updateUI(), this.cd.markForCheck();
            }
            registerOnChange(e) {
              this.onModelChange = e;
            }
            registerOnTouched(e) {
              this.onModelTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e), this.cd.markForCheck();
            }
            getDateFormat() {
              return this.dateFormat || this.getTranslation("dateFormat");
            }
            getFirstDateOfWeek() {
              return (
                this._firstDayOfWeek ||
                this.getTranslation(lt.FIRST_DAY_OF_WEEK)
              );
            }
            formatDate(e, i) {
              if (!e) return "";
              let o;
              const r = (u) => {
                  const h = o + 1 < i.length && i.charAt(o + 1) === u;
                  return h && o++, h;
                },
                s = (u, h, m) => {
                  let _ = "" + h;
                  if (r(u)) for (; _.length < m; ) _ = "0" + _;
                  return _;
                },
                a = (u, h, m, _) => (r(u) ? _[h] : m[h]);
              let l = "",
                c = !1;
              if (e)
                for (o = 0; o < i.length; o++)
                  if (c)
                    "'" !== i.charAt(o) || r("'")
                      ? (l += i.charAt(o))
                      : (c = !1);
                  else
                    switch (i.charAt(o)) {
                      case "d":
                        l += s("d", e.getDate(), 2);
                        break;
                      case "D":
                        l += a(
                          "D",
                          e.getDay(),
                          this.getTranslation(lt.DAY_NAMES_SHORT),
                          this.getTranslation(lt.DAY_NAMES)
                        );
                        break;
                      case "o":
                        l += s(
                          "o",
                          Math.round(
                            (new Date(
                              e.getFullYear(),
                              e.getMonth(),
                              e.getDate()
                            ).getTime() -
                              new Date(e.getFullYear(), 0, 0).getTime()) /
                              864e5
                          ),
                          3
                        );
                        break;
                      case "m":
                        l += s("m", e.getMonth() + 1, 2);
                        break;
                      case "M":
                        l += a(
                          "M",
                          e.getMonth(),
                          this.getTranslation(lt.MONTH_NAMES_SHORT),
                          this.getTranslation(lt.MONTH_NAMES)
                        );
                        break;
                      case "y":
                        l += r("y")
                          ? e.getFullYear()
                          : (e.getFullYear() % 100 < 10 ? "0" : "") +
                            (e.getFullYear() % 100);
                        break;
                      case "@":
                        l += e.getTime();
                        break;
                      case "!":
                        l += 1e4 * e.getTime() + this.ticksTo1970;
                        break;
                      case "'":
                        r("'") ? (l += "'") : (c = !0);
                        break;
                      default:
                        l += i.charAt(o);
                    }
              return l;
            }
            formatTime(e) {
              if (!e) return "";
              let i = "",
                o = e.getHours(),
                r = e.getMinutes(),
                s = e.getSeconds();
              return (
                "12" == this.hourFormat && o > 11 && 12 != o && (o -= 12),
                (i +=
                  "12" == this.hourFormat && 0 === o
                    ? 12
                    : o < 10
                    ? "0" + o
                    : o),
                (i += ":"),
                (i += r < 10 ? "0" + r : r),
                this.showSeconds && ((i += ":"), (i += s < 10 ? "0" + s : s)),
                "12" == this.hourFormat &&
                  (i += e.getHours() > 11 ? " PM" : " AM"),
                i
              );
            }
            parseTime(e) {
              let i = e.split(":");
              if (i.length !== (this.showSeconds ? 3 : 2)) throw "Invalid time";
              let r = parseInt(i[0]),
                s = parseInt(i[1]),
                a = this.showSeconds ? parseInt(i[2]) : null;
              if (
                isNaN(r) ||
                isNaN(s) ||
                r > 23 ||
                s > 59 ||
                ("12" == this.hourFormat && r > 12) ||
                (this.showSeconds && (isNaN(a) || a > 59))
              )
                throw "Invalid time";
              return (
                "12" == this.hourFormat &&
                  (12 !== r && this.pm
                    ? (r += 12)
                    : !this.pm && 12 === r && (r -= 12)),
                { hour: r, minute: s, second: a }
              );
            }
            parseDate(e, i) {
              if (null == i || null == e) throw "Invalid arguments";
              if ("" === (e = "object" == typeof e ? e.toString() : e + ""))
                return null;
              let o,
                r,
                s,
                b,
                a = 0,
                l =
                  "string" != typeof this.shortYearCutoff
                    ? this.shortYearCutoff
                    : (new Date().getFullYear() % 100) +
                      parseInt(this.shortYearCutoff, 10),
                c = -1,
                u = -1,
                h = -1,
                m = -1,
                _ = !1,
                C = (F) => {
                  let V = o + 1 < i.length && i.charAt(o + 1) === F;
                  return V && o++, V;
                },
                I = (F) => {
                  let V = C(F),
                    Z =
                      "@" === F
                        ? 14
                        : "!" === F
                        ? 20
                        : "y" === F && V
                        ? 4
                        : "o" === F
                        ? 3
                        : 2,
                    Ae = new RegExp(
                      "^\\d{" + ("y" === F ? Z : 1) + "," + Z + "}"
                    ),
                    ze = e.substring(a).match(Ae);
                  if (!ze) throw "Missing number at position " + a;
                  return (a += ze[0].length), parseInt(ze[0], 10);
                },
                M = (F, V, Z) => {
                  let ge = -1,
                    Ae = C(F) ? Z : V,
                    ze = [];
                  for (let Ke = 0; Ke < Ae.length; Ke++) ze.push([Ke, Ae[Ke]]);
                  ze.sort((Ke, Ft) => -(Ke[1].length - Ft[1].length));
                  for (let Ke = 0; Ke < ze.length; Ke++) {
                    let Ft = ze[Ke][1];
                    if (
                      e.substr(a, Ft.length).toLowerCase() === Ft.toLowerCase()
                    ) {
                      (ge = ze[Ke][0]), (a += Ft.length);
                      break;
                    }
                  }
                  if (-1 !== ge) return ge + 1;
                  throw "Unknown name at position " + a;
                },
                E = () => {
                  if (e.charAt(a) !== i.charAt(o))
                    throw "Unexpected literal at position " + a;
                  a++;
                };
              for ("month" === this.view && (h = 1), o = 0; o < i.length; o++)
                if (_) "'" !== i.charAt(o) || C("'") ? E() : (_ = !1);
                else
                  switch (i.charAt(o)) {
                    case "d":
                      h = I("d");
                      break;
                    case "D":
                      M(
                        "D",
                        this.getTranslation(lt.DAY_NAMES_SHORT),
                        this.getTranslation(lt.DAY_NAMES)
                      );
                      break;
                    case "o":
                      m = I("o");
                      break;
                    case "m":
                      u = I("m");
                      break;
                    case "M":
                      u = M(
                        "M",
                        this.getTranslation(lt.MONTH_NAMES_SHORT),
                        this.getTranslation(lt.MONTH_NAMES)
                      );
                      break;
                    case "y":
                      c = I("y");
                      break;
                    case "@":
                      (b = new Date(I("@"))),
                        (c = b.getFullYear()),
                        (u = b.getMonth() + 1),
                        (h = b.getDate());
                      break;
                    case "!":
                      (b = new Date((I("!") - this.ticksTo1970) / 1e4)),
                        (c = b.getFullYear()),
                        (u = b.getMonth() + 1),
                        (h = b.getDate());
                      break;
                    case "'":
                      C("'") ? E() : (_ = !0);
                      break;
                    default:
                      E();
                  }
              if (a < e.length && ((s = e.substr(a)), !/^\s+/.test(s)))
                throw "Extra/unparsed characters found in date: " + s;
              if (
                (-1 === c
                  ? (c = new Date().getFullYear())
                  : c < 100 &&
                    (c +=
                      new Date().getFullYear() -
                      (new Date().getFullYear() % 100) +
                      (c <= l ? 0 : -100)),
                m > -1)
              )
                for (
                  u = 1, h = m;
                  (r = this.getDaysCountInMonth(c, u - 1)), !(h <= r);

                )
                  u++, (h -= r);
              if (
                ("year" === this.view &&
                  ((u = -1 === u ? 1 : u), (h = -1 === h ? 1 : h)),
                (b = this.daylightSavingAdjust(new Date(c, u - 1, h))),
                b.getFullYear() !== c ||
                  b.getMonth() + 1 !== u ||
                  b.getDate() !== h)
              )
                throw "Invalid date";
              return b;
            }
            daylightSavingAdjust(e) {
              return e
                ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
                : null;
            }
            updateFilledState() {
              this.filled = this.inputFieldValue && "" != this.inputFieldValue;
            }
            onTodayButtonClick(e) {
              const i = new Date(),
                o = {
                  day: i.getDate(),
                  month: i.getMonth(),
                  year: i.getFullYear(),
                  otherMonth:
                    i.getMonth() !== this.currentMonth ||
                    i.getFullYear() !== this.currentYear,
                  today: !0,
                  selectable: !0,
                };
              this.createMonths(i.getMonth(), i.getFullYear()),
                this.onDateSelect(e, o),
                this.onTodayClick.emit(e);
            }
            onClearButtonClick(e) {
              this.updateModel(null),
                this.updateInputfield(),
                this.hideOverlay(),
                this.onClearClick.emit(e);
            }
            createResponsiveStyle() {
              if (this.numberOfMonths > 1 && this.responsiveOptions) {
                this.responsiveStyleElement ||
                  ((this.responsiveStyleElement =
                    this.renderer.createElement("style")),
                  (this.responsiveStyleElement.type = "text/css"),
                  this.renderer.appendChild(
                    this.document.body,
                    this.responsiveStyleElement
                  ));
                let e = "";
                if (this.responsiveOptions) {
                  let i = [...this.responsiveOptions]
                    .filter((o) => !(!o.breakpoint || !o.numMonths))
                    .sort(
                      (o, r) =>
                        -1 *
                        o.breakpoint.localeCompare(r.breakpoint, void 0, {
                          numeric: !0,
                        })
                    );
                  for (let o = 0; o < i.length; o++) {
                    let { breakpoint: r, numMonths: s } = i[o],
                      a = `\n                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${s}) .p-datepicker-next {\n                            display: inline-flex !important;\n                        }\n                    `;
                    for (let l = s; l < this.numberOfMonths; l++)
                      a += `\n                            .p-datepicker[${
                        this.attributeSelector
                      }] .p-datepicker-group:nth-child(${
                        l + 1
                      }) {\n                                display: none !important;\n                            }\n                        `;
                    e += `\n                        @media screen and (max-width: ${r}) {\n                            ${a}\n                        }\n                    `;
                  }
                }
                this.responsiveStyleElement.innerHTML = e;
              }
            }
            destroyResponsiveStyleElement() {
              this.responsiveStyleElement &&
                (this.responsiveStyleElement.remove(),
                (this.responsiveStyleElement = null));
            }
            bindDocumentClickListener() {
              this.documentClickListener ||
                this.zone.runOutsideAngular(() => {
                  this.documentClickListener = this.renderer.listen(
                    this.el
                      ? this.el.nativeElement.ownerDocument
                      : this.document,
                    "mousedown",
                    (i) => {
                      this.isOutsideClicked(i) &&
                        this.overlayVisible &&
                        this.zone.run(() => {
                          this.hideOverlay(),
                            this.onClickOutside.emit(i),
                            this.cd.markForCheck();
                        });
                    }
                  );
                });
            }
            unbindDocumentClickListener() {
              this.documentClickListener &&
                (this.documentClickListener(),
                (this.documentClickListener = null));
            }
            bindDocumentResizeListener() {
              !this.documentResizeListener &&
                !this.touchUI &&
                (this.documentResizeListener = this.renderer.listen(
                  this.window,
                  "resize",
                  this.onWindowResize.bind(this)
                ));
            }
            unbindDocumentResizeListener() {
              this.documentResizeListener &&
                (this.documentResizeListener(),
                (this.documentResizeListener = null));
            }
            bindScrollListener() {
              this.scrollHandler ||
                (this.scrollHandler = new du(
                  this.containerViewChild?.nativeElement,
                  () => {
                    this.overlayVisible && this.hideOverlay();
                  }
                )),
                this.scrollHandler.bindScrollListener();
            }
            unbindScrollListener() {
              this.scrollHandler && this.scrollHandler.unbindScrollListener();
            }
            isOutsideClicked(e) {
              return !(
                this.el.nativeElement.isSameNode(e.target) ||
                this.isNavIconClicked(e) ||
                this.el.nativeElement.contains(e.target) ||
                (this.overlay && this.overlay.contains(e.target))
              );
            }
            isNavIconClicked(e) {
              return (
                w.hasClass(e.target, "p-datepicker-prev") ||
                w.hasClass(e.target, "p-datepicker-prev-icon") ||
                w.hasClass(e.target, "p-datepicker-next") ||
                w.hasClass(e.target, "p-datepicker-next-icon")
              );
            }
            onWindowResize() {
              this.overlayVisible && !w.isTouchDevice() && this.hideOverlay();
            }
            onOverlayHide() {
              (this.currentView = this.view),
                this.mask && this.destroyMask(),
                this.unbindDocumentClickListener(),
                this.unbindDocumentResizeListener(),
                this.unbindScrollListener(),
                (this.overlay = null);
            }
            ngOnDestroy() {
              this.scrollHandler &&
                (this.scrollHandler.destroy(), (this.scrollHandler = null)),
                this.translationSubscription &&
                  this.translationSubscription.unsubscribe(),
                this.overlay && this.autoZIndex && yn.clear(this.overlay),
                this.destroyResponsiveStyleElement(),
                this.clearTimePickerTimer(),
                this.restoreOverlayAppend(),
                this.onOverlayHide();
            }
            static ɵfac = function (i) {
              return new (i || t)(
                D(Qe),
                D(Fe),
                D(Tt),
                D(Ct),
                D(_e),
                D(Ri),
                D(Da)
              );
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-calendar"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              viewQuery: function (i, o) {
                if ((1 & i && (me(lN, 5), me(cN, 5), me(uN, 5)), 2 & i)) {
                  let r;
                  J((r = X())) && (o.containerViewChild = r.first),
                    J((r = X())) && (o.inputfieldViewChild = r.first),
                    J((r = X())) && (o.content = r.first);
                }
              },
              hostAttrs: [1, "p-element", "p-inputwrapper"],
              hostVars: 6,
              hostBindings: function (i, o) {
                2 & i &&
                  On("p-inputwrapper-filled", o.filled)(
                    "p-inputwrapper-focus",
                    o.focus
                  )("p-calendar-clearable", o.showClear && !o.disabled);
              },
              inputs: {
                style: "style",
                styleClass: "styleClass",
                inputStyle: "inputStyle",
                inputId: "inputId",
                name: "name",
                inputStyleClass: "inputStyleClass",
                placeholder: "placeholder",
                ariaLabelledBy: "ariaLabelledBy",
                ariaLabel: "ariaLabel",
                iconAriaLabel: "iconAriaLabel",
                disabled: "disabled",
                dateFormat: "dateFormat",
                multipleSeparator: "multipleSeparator",
                rangeSeparator: "rangeSeparator",
                inline: "inline",
                showOtherMonths: "showOtherMonths",
                selectOtherMonths: "selectOtherMonths",
                showIcon: "showIcon",
                icon: "icon",
                appendTo: "appendTo",
                readonlyInput: "readonlyInput",
                shortYearCutoff: "shortYearCutoff",
                monthNavigator: "monthNavigator",
                yearNavigator: "yearNavigator",
                hourFormat: "hourFormat",
                timeOnly: "timeOnly",
                stepHour: "stepHour",
                stepMinute: "stepMinute",
                stepSecond: "stepSecond",
                showSeconds: "showSeconds",
                required: "required",
                showOnFocus: "showOnFocus",
                showWeek: "showWeek",
                showClear: "showClear",
                dataType: "dataType",
                selectionMode: "selectionMode",
                maxDateCount: "maxDateCount",
                showButtonBar: "showButtonBar",
                todayButtonStyleClass: "todayButtonStyleClass",
                clearButtonStyleClass: "clearButtonStyleClass",
                autoZIndex: "autoZIndex",
                baseZIndex: "baseZIndex",
                panelStyleClass: "panelStyleClass",
                panelStyle: "panelStyle",
                keepInvalid: "keepInvalid",
                hideOnDateTimeSelect: "hideOnDateTimeSelect",
                touchUI: "touchUI",
                timeSeparator: "timeSeparator",
                focusTrap: "focusTrap",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
                tabindex: "tabindex",
                minDate: "minDate",
                maxDate: "maxDate",
                disabledDates: "disabledDates",
                disabledDays: "disabledDays",
                yearRange: "yearRange",
                showTime: "showTime",
                responsiveOptions: "responsiveOptions",
                numberOfMonths: "numberOfMonths",
                firstDayOfWeek: "firstDayOfWeek",
                locale: "locale",
                view: "view",
                defaultDate: "defaultDate",
              },
              outputs: {
                onFocus: "onFocus",
                onBlur: "onBlur",
                onClose: "onClose",
                onSelect: "onSelect",
                onClear: "onClear",
                onInput: "onInput",
                onTodayClick: "onTodayClick",
                onClearClick: "onClearClick",
                onMonthChange: "onMonthChange",
                onYearChange: "onYearChange",
                onClickOutside: "onClickOutside",
                onShow: "onShow",
              },
              features: [Ee([W9])],
              ngContentSelectors: G9,
              decls: 4,
              vars: 11,
              consts: [
                [3, "ngClass", "ngStyle"],
                ["container", ""],
                [3, "ngIf"],
                [3, "class", "ngStyle", "ngClass", "click", 4, "ngIf"],
                [
                  "type",
                  "text",
                  "role",
                  "combobox",
                  "aria-autocomplete",
                  "none",
                  "aria-haspopup",
                  "dialog",
                  "autocomplete",
                  "off",
                  3,
                  "value",
                  "readonly",
                  "ngStyle",
                  "placeholder",
                  "disabled",
                  "ngClass",
                  "focus",
                  "keydown",
                  "click",
                  "blur",
                  "input",
                ],
                ["inputfield", ""],
                [4, "ngIf"],
                [
                  "type",
                  "button",
                  "aria-haspopup",
                  "dialog",
                  "pButton",
                  "",
                  "pRipple",
                  "",
                  "class",
                  "p-datepicker-trigger p-button-icon-only",
                  "tabindex",
                  "0",
                  3,
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [3, "styleClass", "click", 4, "ngIf"],
                ["class", "p-calendar-clear-icon", 3, "click", 4, "ngIf"],
                [3, "styleClass", "click"],
                [1, "p-calendar-clear-icon", 3, "click"],
                [4, "ngTemplateOutlet"],
                [
                  "type",
                  "button",
                  "aria-haspopup",
                  "dialog",
                  "pButton",
                  "",
                  "pRipple",
                  "",
                  "tabindex",
                  "0",
                  1,
                  "p-datepicker-trigger",
                  "p-button-icon-only",
                  3,
                  "disabled",
                  "click",
                ],
                [3, "ngClass", 4, "ngIf"],
                [3, "ngClass"],
                [3, "ngStyle", "ngClass", "click"],
                ["contentWrapper", ""],
                ["class", "p-timepicker", 4, "ngIf"],
                ["class", "p-datepicker-buttonbar", 4, "ngIf"],
                [1, "p-datepicker-group-container"],
                ["class", "p-datepicker-group", 4, "ngFor", "ngForOf"],
                ["class", "p-monthpicker", 4, "ngIf"],
                ["class", "p-yearpicker", 4, "ngIf"],
                [1, "p-datepicker-group"],
                [1, "p-datepicker-header"],
                [
                  "class",
                  "p-datepicker-prev p-link",
                  "type",
                  "button",
                  "pRipple",
                  "",
                  3,
                  "keydown",
                  "click",
                  4,
                  "ngIf",
                ],
                [1, "p-datepicker-title"],
                [
                  "type",
                  "button",
                  "class",
                  "p-datepicker-month p-link",
                  3,
                  "disabled",
                  "click",
                  "keydown",
                  4,
                  "ngIf",
                ],
                [
                  "type",
                  "button",
                  "class",
                  "p-datepicker-year p-link",
                  3,
                  "disabled",
                  "click",
                  "keydown",
                  4,
                  "ngIf",
                ],
                ["class", "p-datepicker-decade", 4, "ngIf"],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-datepicker-next",
                  "p-link",
                  3,
                  "keydown",
                  "click",
                ],
                [3, "styleClass", 4, "ngIf"],
                ["class", "p-datepicker-next-icon", 4, "ngIf"],
                ["class", "p-datepicker-calendar-container", 4, "ngIf"],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-datepicker-prev",
                  "p-link",
                  3,
                  "keydown",
                  "click",
                ],
                ["class", "p-datepicker-prev-icon", 4, "ngIf"],
                [3, "styleClass"],
                [1, "p-datepicker-prev-icon"],
                [
                  "type",
                  "button",
                  1,
                  "p-datepicker-month",
                  "p-link",
                  3,
                  "disabled",
                  "click",
                  "keydown",
                ],
                [
                  "type",
                  "button",
                  1,
                  "p-datepicker-year",
                  "p-link",
                  3,
                  "disabled",
                  "click",
                  "keydown",
                ],
                [1, "p-datepicker-decade"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "p-datepicker-next-icon"],
                [1, "p-datepicker-calendar-container"],
                ["role", "grid", 1, "p-datepicker-calendar"],
                ["class", "p-datepicker-weekheader p-disabled", 4, "ngIf"],
                ["scope", "col", 4, "ngFor", "ngForOf"],
                [4, "ngFor", "ngForOf"],
                [1, "p-datepicker-weekheader", "p-disabled"],
                ["scope", "col"],
                ["class", "p-datepicker-weeknumber", 4, "ngIf"],
                [3, "ngClass", 4, "ngFor", "ngForOf"],
                [1, "p-datepicker-weeknumber"],
                [1, "p-disabled"],
                [
                  "draggable",
                  "false",
                  "pRipple",
                  "",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                ],
                [
                  "class",
                  "p-hidden-accessible",
                  "aria-live",
                  "polite",
                  4,
                  "ngIf",
                ],
                ["aria-live", "polite", 1, "p-hidden-accessible"],
                [1, "p-monthpicker"],
                [
                  "class",
                  "p-monthpicker-month",
                  "pRipple",
                  "",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  "pRipple",
                  "",
                  1,
                  "p-monthpicker-month",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                ],
                [1, "p-yearpicker"],
                [
                  "class",
                  "p-yearpicker-year",
                  "pRipple",
                  "",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  "pRipple",
                  "",
                  1,
                  "p-yearpicker-year",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                ],
                [1, "p-timepicker"],
                [1, "p-hour-picker"],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-link",
                  3,
                  "keydown",
                  "keydown.enter",
                  "keydown.space",
                  "mousedown",
                  "mouseup",
                  "keyup.enter",
                  "keyup.space",
                  "mouseleave",
                ],
                [1, "p-separator"],
                [1, "p-minute-picker"],
                ["class", "p-separator", 4, "ngIf"],
                ["class", "p-second-picker", 4, "ngIf"],
                ["class", "p-ampm-picker", 4, "ngIf"],
                [1, "p-second-picker"],
                [1, "p-ampm-picker"],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-link",
                  3,
                  "keydown",
                  "click",
                  "keydown.enter",
                ],
                [1, "p-datepicker-buttonbar"],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "pRipple",
                  "",
                  3,
                  "label",
                  "ngClass",
                  "keydown",
                  "click",
                ],
              ],
              template: function (i, o) {
                1 & i &&
                  (Ii(j9),
                  y(0, "span", 0, 1),
                  f(2, wN, 4, 20, "ng-template", 2),
                  f(3, $9, 9, 31, "div", 3),
                  v()),
                  2 & i &&
                    (ne(o.styleClass),
                    d(
                      "ngClass",
                      Ic(
                        6,
                        U9,
                        o.showIcon,
                        o.timeOnly,
                        o.disabled,
                        o.focus || o.overlayVisible
                      )
                    )("ngStyle", o.style),
                    g(2),
                    d("ngIf", !o.inline),
                    g(1),
                    d("ngIf", o.inline || o.overlayVisible));
              },
              dependencies: function () {
                return [Bt, Oi, wt, St, Xt, ng, Ao, VT, BT, HT, qr, li, zT];
              },
              styles: [
                "@layer primeng{.p-calendar{position:relative;display:inline-flex;max-width:100%}.p-calendar .p-inputtext{flex:1 1 auto;width:1%}.p-calendar-w-btn .p-inputtext{border-top-right-radius:0;border-bottom-right-radius:0}.p-calendar-w-btn .p-datepicker-trigger{border-top-left-radius:0;border-bottom-left-radius:0}.p-fluid .p-calendar{display:flex}.p-fluid .p-calendar .p-inputtext{width:1%}.p-calendar .p-datepicker{min-width:100%}.p-datepicker{width:auto;position:absolute;top:0;left:0}.p-datepicker-inline{display:inline-block;position:static;overflow-x:auto}.p-datepicker-header{display:flex;align-items:center;justify-content:space-between}.p-datepicker-header .p-datepicker-title{margin:0 auto}.p-datepicker-prev,.p-datepicker-next{cursor:pointer;display:inline-flex;justify-content:center;align-items:center;overflow:hidden;position:relative}.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group{flex:1 1 auto}.p-datepicker-multiple-month .p-datepicker-group-container{display:flex}.p-datepicker table{width:100%;border-collapse:collapse}.p-datepicker td>span{display:flex;justify-content:center;align-items:center;cursor:pointer;margin:0 auto;overflow:hidden;position:relative}.p-monthpicker-month{width:33.3%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-datepicker-buttonbar{display:flex;justify-content:space-between;align-items:center}.p-timepicker{display:flex;justify-content:center;align-items:center}.p-timepicker button{display:flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-timepicker>div{display:flex;align-items:center;flex-direction:column}.p-datepicker-touch-ui,.p-calendar .p-datepicker-touch-ui{position:fixed;top:50%;left:50%;min-width:80vw;transform:translate(-50%,-50%)}.p-yearpicker-year{width:50%;display:inline-flex;align-items:center;justify-content:center;cursor:pointer;overflow:hidden;position:relative}.p-calendar-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-calendar-clearable{position:relative}}\n",
              ],
              encapsulation: 2,
              data: {
                animation: [
                  Lf("overlayAnimation", [
                    F6(
                      "visibleTouchUI",
                      Pn({ transform: "translate(-50%,-50%)", opacity: 1 })
                    ),
                    eo("void => visible", [
                      Pn({ opacity: 0, transform: "scaleY(0.8)" }),
                      Xi(
                        "{{showTransitionParams}}",
                        Pn({ opacity: 1, transform: "*" })
                      ),
                    ]),
                    eo("visible => void", [
                      Xi("{{hideTransitionParams}}", Pn({ opacity: 0 })),
                    ]),
                    eo("void => visibleTouchUI", [
                      Pn({
                        opacity: 0,
                        transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                      }),
                      Xi("{{showTransitionParams}}"),
                    ]),
                    eo("visibleTouchUI => void", [
                      Xi(
                        "{{hideTransitionParams}}",
                        Pn({
                          opacity: 0,
                          transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                        })
                      ),
                    ]),
                  ]),
                ],
              },
              changeDetection: 0,
            });
          }
          return t;
        })(),
        GT = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({
              imports: [pt, Kr, ht, Wr, VT, BT, HT, qr, li, zT, Kr, ht],
            });
          }
          return t;
        })(),
        K9 = (() => {
          class t {
            host;
            constructor(e) {
              this.host = e;
            }
            autofocus;
            focused = !1;
            ngAfterContentChecked() {
              if (!this.focused && this.autofocus) {
                const e = w.getFocusableElements(this.host.nativeElement);
                0 === e.length && this.host.nativeElement.focus(),
                  e.length > 0 && e[0].focus(),
                  (this.focused = !0);
              }
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Fe));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pAutoFocus", ""]],
              hostAttrs: [1, "p-element"],
              inputs: { autofocus: "autofocus" },
            });
          }
          return t;
        })(),
        q9 = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt] });
          }
          return t;
        })();
      const Z9 = ["overlay"],
        Y9 = ["content"];
      function Q9(t, n) {
        1 & t && j(0);
      }
      const J9 = function (t, n, e) {
          return {
            showTransitionParams: t,
            hideTransitionParams: n,
            transform: e,
          };
        },
        X9 = function (t) {
          return { value: "visible", params: t };
        },
        e5 = function (t) {
          return { mode: t };
        },
        t5 = function (t) {
          return { $implicit: t };
        };
      function n5(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 1, 3),
            A("click", function (o) {
              return T(e), S(p(2).onOverlayContentClick(o));
            })("@overlayContentAnimation.start", function (o) {
              return T(e), S(p(2).onOverlayContentAnimationStart(o));
            })("@overlayContentAnimation.done", function (o) {
              return T(e), S(p(2).onOverlayContentAnimationDone(o));
            }),
            jn(2),
            f(3, Q9, 1, 0, "ng-container", 4),
            v();
        }
        if (2 & t) {
          const e = p(2);
          ne(e.contentStyleClass),
            d("ngStyle", e.contentStyle)("ngClass", "p-overlay-content")(
              "@overlayContentAnimation",
              Q(
                11,
                X9,
                kn(
                  7,
                  J9,
                  e.showTransitionOptions,
                  e.hideTransitionOptions,
                  e.transformOptions[
                    e.modal ? e.overlayResponsiveDirection : "default"
                  ]
                )
              )
            ),
            g(3),
            d("ngTemplateOutlet", e.contentTemplate)(
              "ngTemplateOutletContext",
              Q(15, t5, Q(13, e5, e.overlayMode))
            );
        }
      }
      const i5 = function (t, n, e, i, o, r, s, a, l, c, u, h, m, _) {
        return {
          "p-overlay p-component": !0,
          "p-overlay-modal p-component-overlay p-component-overlay-enter": t,
          "p-overlay-center": n,
          "p-overlay-top": e,
          "p-overlay-top-start": i,
          "p-overlay-top-end": o,
          "p-overlay-bottom": r,
          "p-overlay-bottom-start": s,
          "p-overlay-bottom-end": a,
          "p-overlay-left": l,
          "p-overlay-left-start": c,
          "p-overlay-left-end": u,
          "p-overlay-right": h,
          "p-overlay-right-start": m,
          "p-overlay-right-end": _,
        };
      };
      function o5(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 1, 2),
            A("click", function () {
              return T(e), S(p().onOverlayClick());
            }),
            f(2, n5, 4, 17, "div", 0),
            v();
        }
        if (2 & t) {
          const e = p();
          ne(e.styleClass),
            d("ngStyle", e.style)(
              "ngClass",
              Ah(5, i5, [
                e.modal,
                e.modal && "center" === e.overlayResponsiveDirection,
                e.modal && "top" === e.overlayResponsiveDirection,
                e.modal && "top-start" === e.overlayResponsiveDirection,
                e.modal && "top-end" === e.overlayResponsiveDirection,
                e.modal && "bottom" === e.overlayResponsiveDirection,
                e.modal && "bottom-start" === e.overlayResponsiveDirection,
                e.modal && "bottom-end" === e.overlayResponsiveDirection,
                e.modal && "left" === e.overlayResponsiveDirection,
                e.modal && "left-start" === e.overlayResponsiveDirection,
                e.modal && "left-end" === e.overlayResponsiveDirection,
                e.modal && "right" === e.overlayResponsiveDirection,
                e.modal && "right-start" === e.overlayResponsiveDirection,
                e.modal && "right-end" === e.overlayResponsiveDirection,
              ])
            ),
            g(2),
            d("ngIf", e.visible);
        }
      }
      const r5 = ["*"],
        s5 = { provide: Rt, useExisting: Te(() => rg), multi: !0 },
        a5 = xw([
          Pn({ transform: "{{transform}}", opacity: 0 }),
          Xi("{{showTransitionParams}}"),
        ]),
        l5 = xw([
          Xi(
            "{{hideTransitionParams}}",
            Pn({ transform: "{{transform}}", opacity: 0 })
          ),
        ]);
      let rg = (() => {
          class t {
            document;
            platformId;
            el;
            renderer;
            config;
            overlayService;
            cd;
            zone;
            get visible() {
              return this._visible;
            }
            set visible(e) {
              (this._visible = e),
                this._visible && !this.modalVisible && (this.modalVisible = !0);
            }
            get mode() {
              return this._mode || this.overlayOptions?.mode;
            }
            set mode(e) {
              this._mode = e;
            }
            get style() {
              return P.merge(
                this._style,
                this.modal
                  ? this.overlayResponsiveOptions?.style
                  : this.overlayOptions?.style
              );
            }
            set style(e) {
              this._style = e;
            }
            get styleClass() {
              return P.merge(
                this._styleClass,
                this.modal
                  ? this.overlayResponsiveOptions?.styleClass
                  : this.overlayOptions?.styleClass
              );
            }
            set styleClass(e) {
              this._styleClass = e;
            }
            get contentStyle() {
              return P.merge(
                this._contentStyle,
                this.modal
                  ? this.overlayResponsiveOptions?.contentStyle
                  : this.overlayOptions?.contentStyle
              );
            }
            set contentStyle(e) {
              this._contentStyle = e;
            }
            get contentStyleClass() {
              return P.merge(
                this._contentStyleClass,
                this.modal
                  ? this.overlayResponsiveOptions?.contentStyleClass
                  : this.overlayOptions?.contentStyleClass
              );
            }
            set contentStyleClass(e) {
              this._contentStyleClass = e;
            }
            get target() {
              const e = this._target || this.overlayOptions?.target;
              return void 0 === e ? "@prev" : e;
            }
            set target(e) {
              this._target = e;
            }
            get appendTo() {
              return this._appendTo || this.overlayOptions?.appendTo;
            }
            set appendTo(e) {
              this._appendTo = e;
            }
            get autoZIndex() {
              const e = this._autoZIndex || this.overlayOptions?.autoZIndex;
              return void 0 === e || e;
            }
            set autoZIndex(e) {
              this._autoZIndex = e;
            }
            get baseZIndex() {
              const e = this._baseZIndex || this.overlayOptions?.baseZIndex;
              return void 0 === e ? 0 : e;
            }
            set baseZIndex(e) {
              this._baseZIndex = e;
            }
            get showTransitionOptions() {
              const e =
                this._showTransitionOptions ||
                this.overlayOptions?.showTransitionOptions;
              return void 0 === e ? ".12s cubic-bezier(0, 0, 0.2, 1)" : e;
            }
            set showTransitionOptions(e) {
              this._showTransitionOptions = e;
            }
            get hideTransitionOptions() {
              const e =
                this._hideTransitionOptions ||
                this.overlayOptions?.hideTransitionOptions;
              return void 0 === e ? ".1s linear" : e;
            }
            set hideTransitionOptions(e) {
              this._hideTransitionOptions = e;
            }
            get listener() {
              return this._listener || this.overlayOptions?.listener;
            }
            set listener(e) {
              this._listener = e;
            }
            get responsive() {
              return this._responsive || this.overlayOptions?.responsive;
            }
            set responsive(e) {
              this._responsive = e;
            }
            get options() {
              return this._options;
            }
            set options(e) {
              this._options = e;
            }
            visibleChange = new L();
            onBeforeShow = new L();
            onShow = new L();
            onBeforeHide = new L();
            onHide = new L();
            onAnimationStart = new L();
            onAnimationDone = new L();
            templates;
            overlayViewChild;
            contentViewChild;
            contentTemplate;
            _visible = !1;
            _mode;
            _style;
            _styleClass;
            _contentStyle;
            _contentStyleClass;
            _target;
            _appendTo;
            _autoZIndex;
            _baseZIndex;
            _showTransitionOptions;
            _hideTransitionOptions;
            _listener;
            _responsive;
            _options;
            modalVisible = !1;
            isOverlayClicked = !1;
            isOverlayContentClicked = !1;
            scrollHandler;
            documentClickListener;
            documentResizeListener;
            documentKeyboardListener;
            window;
            transformOptions = {
              default: "scaleY(0.8)",
              center: "scale(0.7)",
              top: "translate3d(0px, -100%, 0px)",
              "top-start": "translate3d(0px, -100%, 0px)",
              "top-end": "translate3d(0px, -100%, 0px)",
              bottom: "translate3d(0px, 100%, 0px)",
              "bottom-start": "translate3d(0px, 100%, 0px)",
              "bottom-end": "translate3d(0px, 100%, 0px)",
              left: "translate3d(-100%, 0px, 0px)",
              "left-start": "translate3d(-100%, 0px, 0px)",
              "left-end": "translate3d(-100%, 0px, 0px)",
              right: "translate3d(100%, 0px, 0px)",
              "right-start": "translate3d(100%, 0px, 0px)",
              "right-end": "translate3d(100%, 0px, 0px)",
            };
            get modal() {
              if (Ai(this.platformId))
                return (
                  "modal" === this.mode ||
                  (this.overlayResponsiveOptions &&
                    this.window?.matchMedia(
                      this.overlayResponsiveOptions.media?.replace(
                        "@media",
                        ""
                      ) ||
                        `(max-width: ${this.overlayResponsiveOptions.breakpoint})`
                    ).matches)
                );
            }
            get overlayMode() {
              return this.mode || (this.modal ? "modal" : "overlay");
            }
            get overlayOptions() {
              return { ...this.config?.overlayOptions, ...this.options };
            }
            get overlayResponsiveOptions() {
              return { ...this.overlayOptions?.responsive, ...this.responsive };
            }
            get overlayResponsiveDirection() {
              return this.overlayResponsiveOptions?.direction || "center";
            }
            get overlayEl() {
              return this.overlayViewChild?.nativeElement;
            }
            get contentEl() {
              return this.contentViewChild?.nativeElement;
            }
            get targetEl() {
              return w.getTargetElement(this.target, this.el?.nativeElement);
            }
            constructor(e, i, o, r, s, a, l, c) {
              (this.document = e),
                (this.platformId = i),
                (this.el = o),
                (this.renderer = r),
                (this.config = s),
                (this.overlayService = a),
                (this.cd = l),
                (this.zone = c),
                (this.window = this.document.defaultView);
            }
            ngAfterContentInit() {
              this.templates?.forEach((e) => {
                e.getType(), (this.contentTemplate = e.template);
              });
            }
            show(e, i = !1) {
              this.onVisibleChange(!0),
                this.handleEvents("onShow", {
                  overlay: e || this.overlayEl,
                  target: this.targetEl,
                  mode: this.overlayMode,
                }),
                i && w.focus(this.targetEl),
                this.modal &&
                  w.addClass(this.document?.body, "p-overflow-hidden");
            }
            hide(e, i = !1) {
              this.visible &&
                (this.onVisibleChange(!1),
                this.handleEvents("onHide", {
                  overlay: e || this.overlayEl,
                  target: this.targetEl,
                  mode: this.overlayMode,
                }),
                i && w.focus(this.targetEl),
                this.modal &&
                  w.removeClass(this.document?.body, "p-overflow-hidden"));
            }
            alignOverlay() {
              !this.modal &&
                w.alignOverlay(this.overlayEl, this.targetEl, this.appendTo);
            }
            onVisibleChange(e) {
              (this._visible = e), this.visibleChange.emit(e);
            }
            onOverlayClick() {
              this.isOverlayClicked = !0;
            }
            onOverlayContentClick(e) {
              this.overlayService.add({
                originalEvent: e,
                target: this.targetEl,
              }),
                (this.isOverlayContentClicked = !0);
            }
            onOverlayContentAnimationStart(e) {
              switch (e.toState) {
                case "visible":
                  this.handleEvents("onBeforeShow", {
                    overlay: this.overlayEl,
                    target: this.targetEl,
                    mode: this.overlayMode,
                  }),
                    this.autoZIndex &&
                      yn.set(
                        this.overlayMode,
                        this.overlayEl,
                        this.baseZIndex + this.config?.zIndex[this.overlayMode]
                      ),
                    w.appendOverlay(
                      this.overlayEl,
                      "body" === this.appendTo
                        ? this.document.body
                        : this.appendTo,
                      this.appendTo
                    ),
                    this.alignOverlay();
                  break;
                case "void":
                  this.handleEvents("onBeforeHide", {
                    overlay: this.overlayEl,
                    target: this.targetEl,
                    mode: this.overlayMode,
                  }),
                    this.modal &&
                      w.addClass(this.overlayEl, "p-component-overlay-leave");
              }
              this.handleEvents("onAnimationStart", e);
            }
            onOverlayContentAnimationDone(e) {
              const i = this.overlayEl || e.element.parentElement;
              switch (e.toState) {
                case "visible":
                  this.show(i, !0), this.bindListeners();
                  break;
                case "void":
                  this.hide(i, !0),
                    this.unbindListeners(),
                    w.appendOverlay(
                      this.overlayEl,
                      this.targetEl,
                      this.appendTo
                    ),
                    yn.clear(i),
                    (this.modalVisible = !1),
                    this.cd.markForCheck();
              }
              this.handleEvents("onAnimationDone", e);
            }
            handleEvents(e, i) {
              this[e].emit(i),
                this.options && this.options[e] && this.options[e](i),
                this.config?.overlayOptions &&
                  (this.config?.overlayOptions)[e] &&
                  (this.config?.overlayOptions)[e](i);
            }
            bindListeners() {
              this.bindScrollListener(),
                this.bindDocumentClickListener(),
                this.bindDocumentResizeListener(),
                this.bindDocumentKeyboardListener();
            }
            unbindListeners() {
              this.unbindScrollListener(),
                this.unbindDocumentClickListener(),
                this.unbindDocumentResizeListener(),
                this.unbindDocumentKeyboardListener();
            }
            bindScrollListener() {
              this.scrollHandler ||
                (this.scrollHandler = new du(this.targetEl, (e) => {
                  (!this.listener ||
                    this.listener(e, {
                      type: "scroll",
                      mode: this.overlayMode,
                      valid: !0,
                    })) &&
                    this.hide(e, !0);
                })),
                this.scrollHandler.bindScrollListener();
            }
            unbindScrollListener() {
              this.scrollHandler && this.scrollHandler.unbindScrollListener();
            }
            bindDocumentClickListener() {
              this.documentClickListener ||
                (this.documentClickListener = this.renderer.listen(
                  this.document,
                  "click",
                  (e) => {
                    const o = !(
                      (this.targetEl &&
                        (this.targetEl.isSameNode(e.target) ||
                          (!this.isOverlayClicked &&
                            this.targetEl.contains(e.target)))) ||
                      this.isOverlayContentClicked
                    );
                    (this.listener
                      ? this.listener(e, {
                          type: "outside",
                          mode: this.overlayMode,
                          valid: 3 !== e.which && o,
                        })
                      : o) && this.hide(e),
                      (this.isOverlayClicked = this.isOverlayContentClicked =
                        !1);
                  }
                ));
            }
            unbindDocumentClickListener() {
              this.documentClickListener &&
                (this.documentClickListener(),
                (this.documentClickListener = null));
            }
            bindDocumentResizeListener() {
              this.documentResizeListener ||
                (this.documentResizeListener = this.renderer.listen(
                  this.window,
                  "resize",
                  (e) => {
                    (this.listener
                      ? this.listener(e, {
                          type: "resize",
                          mode: this.overlayMode,
                          valid: !w.isTouchDevice(),
                        })
                      : !w.isTouchDevice()) && this.hide(e, !0);
                  }
                ));
            }
            unbindDocumentResizeListener() {
              this.documentResizeListener &&
                (this.documentResizeListener(),
                (this.documentResizeListener = null));
            }
            bindDocumentKeyboardListener() {
              this.documentKeyboardListener ||
                this.zone.runOutsideAngular(() => {
                  this.documentKeyboardListener = this.renderer.listen(
                    this.window,
                    "keydown",
                    (e) => {
                      !1 !== this.overlayOptions.hideOnEscape &&
                        "Escape" === e.code &&
                        (this.listener
                          ? this.listener(e, {
                              type: "keydown",
                              mode: this.overlayMode,
                              valid: !w.isTouchDevice(),
                            })
                          : !w.isTouchDevice()) &&
                        this.zone.run(() => {
                          this.hide(e, !0);
                        });
                    }
                  );
                });
            }
            unbindDocumentKeyboardListener() {
              this.documentKeyboardListener &&
                (this.documentKeyboardListener(),
                (this.documentKeyboardListener = null));
            }
            ngOnDestroy() {
              this.hide(this.overlayEl, !0),
                this.overlayEl &&
                  (w.appendOverlay(
                    this.overlayEl,
                    this.targetEl,
                    this.appendTo
                  ),
                  yn.clear(this.overlayEl)),
                this.scrollHandler &&
                  (this.scrollHandler.destroy(), (this.scrollHandler = null)),
                this.unbindListeners();
            }
            static ɵfac = function (i) {
              return new (i || t)(
                D(Qe),
                D(xn),
                D(Fe),
                D(Tt),
                D(Ri),
                D(Da),
                D(Ct),
                D(_e)
              );
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-overlay"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              viewQuery: function (i, o) {
                if ((1 & i && (me(Z9, 5), me(Y9, 5)), 2 & i)) {
                  let r;
                  J((r = X())) && (o.overlayViewChild = r.first),
                    J((r = X())) && (o.contentViewChild = r.first);
                }
              },
              hostAttrs: [1, "p-element"],
              inputs: {
                visible: "visible",
                mode: "mode",
                style: "style",
                styleClass: "styleClass",
                contentStyle: "contentStyle",
                contentStyleClass: "contentStyleClass",
                target: "target",
                appendTo: "appendTo",
                autoZIndex: "autoZIndex",
                baseZIndex: "baseZIndex",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
                listener: "listener",
                responsive: "responsive",
                options: "options",
              },
              outputs: {
                visibleChange: "visibleChange",
                onBeforeShow: "onBeforeShow",
                onShow: "onShow",
                onBeforeHide: "onBeforeHide",
                onHide: "onHide",
                onAnimationStart: "onAnimationStart",
                onAnimationDone: "onAnimationDone",
              },
              features: [Ee([s5])],
              ngContentSelectors: r5,
              decls: 1,
              vars: 1,
              consts: [
                [3, "ngStyle", "class", "ngClass", "click", 4, "ngIf"],
                [3, "ngStyle", "ngClass", "click"],
                ["overlay", ""],
                ["content", ""],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
              ],
              template: function (i, o) {
                1 & i && (Ii(), f(0, o5, 3, 20, "div", 0)),
                  2 & i && d("ngIf", o.modalVisible);
              },
              dependencies: [Bt, wt, St, Xt],
              styles: [
                "@layer primeng{.p-overlay{position:absolute;top:0;left:0}.p-overlay-modal{display:flex;align-items:center;justify-content:center;position:fixed;top:0;left:0;width:100%;height:100%}.p-overlay-content{transform-origin:inherit}.p-overlay-modal>.p-overlay-content{z-index:1;width:90%}.p-overlay-top{align-items:flex-start}.p-overlay-top-start{align-items:flex-start;justify-content:flex-start}.p-overlay-top-end{align-items:flex-start;justify-content:flex-end}.p-overlay-bottom{align-items:flex-end}.p-overlay-bottom-start{align-items:flex-end;justify-content:flex-start}.p-overlay-bottom-end{align-items:flex-end;justify-content:flex-end}.p-overlay-left{justify-content:flex-start}.p-overlay-left-start{justify-content:flex-start;align-items:flex-start}.p-overlay-left-end{justify-content:flex-start;align-items:flex-end}.p-overlay-right{justify-content:flex-end}.p-overlay-right-start{justify-content:flex-end;align-items:flex-start}.p-overlay-right-end{justify-content:flex-end;align-items:flex-end}}\n",
              ],
              encapsulation: 2,
              data: {
                animation: [
                  Lf("overlayContentAnimation", [
                    eo(":enter", [Mw(a5)]),
                    eo(":leave", [Mw(l5)]),
                  ]),
                ],
              },
              changeDetection: 0,
            });
          }
          return t;
        })(),
        pu = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt, ht, ht] });
          }
          return t;
        })();
      const c5 = ["element"],
        u5 = ["content"];
      function d5(t, n) {
        1 & t && j(0);
      }
      const sg = function (t, n) {
        return { $implicit: t, options: n };
      };
      function p5(t, n) {
        if ((1 & t && (H(0), f(1, d5, 1, 0, "ng-container", 7), z()), 2 & t)) {
          const e = p(2);
          g(1),
            d("ngTemplateOutlet", e.contentTemplate)(
              "ngTemplateOutletContext",
              Ze(2, sg, e.loadedItems, e.getContentOptions())
            );
        }
      }
      function h5(t, n) {
        1 & t && j(0);
      }
      function f5(t, n) {
        if ((1 & t && (H(0), f(1, h5, 1, 0, "ng-container", 7), z()), 2 & t)) {
          const e = n.$implicit,
            i = n.index,
            o = p(3);
          g(1),
            d("ngTemplateOutlet", o.itemTemplate)(
              "ngTemplateOutletContext",
              Ze(2, sg, e, o.getOptions(i))
            );
        }
      }
      const g5 = function (t) {
        return { "p-scroller-loading": t };
      };
      function m5(t, n) {
        if (
          (1 & t &&
            (y(0, "div", 8, 9), f(2, f5, 2, 5, "ng-container", 10), v()),
          2 & t)
        ) {
          const e = p(2);
          d("ngClass", Q(5, g5, e.d_loading))("ngStyle", e.contentStyle),
            x("data-pc-section", "content"),
            g(2),
            d("ngForOf", e.loadedItems)("ngForTrackBy", e._trackBy || e.index);
        }
      }
      function _5(t, n) {
        1 & t && k(0, "div", 11),
          2 & t &&
            (d("ngStyle", p(2).spacerStyle), x("data-pc-section", "spacer"));
      }
      function y5(t, n) {
        1 & t && j(0);
      }
      const v5 = function (t) {
          return { numCols: t };
        },
        WT = function (t) {
          return { options: t };
        };
      function b5(t, n) {
        if ((1 & t && (H(0), f(1, y5, 1, 0, "ng-container", 7), z()), 2 & t)) {
          const e = n.index,
            i = p(4);
          g(1),
            d("ngTemplateOutlet", i.loaderTemplate)(
              "ngTemplateOutletContext",
              Q(
                4,
                WT,
                i.getLoaderOptions(
                  e,
                  i.both && Q(2, v5, i._numItemsInViewport.cols)
                )
              )
            );
        }
      }
      function C5(t, n) {
        if ((1 & t && (H(0), f(1, b5, 2, 6, "ng-container", 14), z()), 2 & t)) {
          const e = p(3);
          g(1), d("ngForOf", e.loaderArr);
        }
      }
      function w5(t, n) {
        1 & t && j(0);
      }
      const T5 = function () {
        return { styleClass: "p-scroller-loading-icon" };
      };
      function S5(t, n) {
        if ((1 & t && (H(0), f(1, w5, 1, 0, "ng-container", 7), z()), 2 & t)) {
          const e = p(4);
          g(1),
            d("ngTemplateOutlet", e.loaderIconTemplate)(
              "ngTemplateOutletContext",
              Q(3, WT, An(2, T5))
            );
        }
      }
      function I5(t, n) {
        1 & t && k(0, "SpinnerIcon", 16),
          2 & t &&
            (d("styleClass", "p-scroller-loading-icon"),
            x("data-pc-section", "loadingIcon"));
      }
      function D5(t, n) {
        if (
          (1 & t &&
            (f(0, S5, 2, 5, "ng-container", 0),
            f(1, I5, 1, 2, "ng-template", null, 15, Yt)),
          2 & t)
        ) {
          const e = rt(2);
          d("ngIf", p(3).loaderIconTemplate)("ngIfElse", e);
        }
      }
      const E5 = function (t) {
        return { "p-component-overlay": t };
      };
      function x5(t, n) {
        if (
          (1 & t &&
            (y(0, "div", 12),
            f(1, C5, 2, 1, "ng-container", 0),
            f(2, D5, 3, 2, "ng-template", null, 13, Yt),
            v()),
          2 & t)
        ) {
          const e = rt(3),
            i = p(2);
          d("ngClass", Q(4, E5, !i.loaderTemplate)),
            x("data-pc-section", "loader"),
            g(1),
            d("ngIf", i.loaderTemplate)("ngIfElse", e);
        }
      }
      const M5 = function (t, n, e) {
        return {
          "p-scroller": !0,
          "p-scroller-inline": t,
          "p-both-scroll": n,
          "p-horizontal-scroll": e,
        };
      };
      function O5(t, n) {
        if (1 & t) {
          const e = N();
          H(0),
            y(1, "div", 2, 3),
            A("scroll", function (o) {
              return T(e), S(p().onContainerScroll(o));
            }),
            f(3, p5, 2, 5, "ng-container", 0),
            f(4, m5, 3, 7, "ng-template", null, 4, Yt),
            f(6, _5, 1, 2, "div", 5),
            f(7, x5, 4, 6, "div", 6),
            v(),
            z();
        }
        if (2 & t) {
          const e = rt(5),
            i = p();
          g(1),
            ne(i._styleClass),
            d("ngStyle", i._style)(
              "ngClass",
              kn(12, M5, i.inline, i.both, i.horizontal)
            ),
            x("id", i._id)("tabindex", i.tabindex)("data-pc-name", "scroller")(
              "data-pc-section",
              "root"
            ),
            g(2),
            d("ngIf", i.contentTemplate)("ngIfElse", e),
            g(3),
            d("ngIf", i._showSpacer),
            g(1),
            d("ngIf", !i.loaderDisabled && i._showLoader && i.d_loading);
        }
      }
      function A5(t, n) {
        1 & t && j(0);
      }
      const k5 = function (t, n) {
        return { rows: t, columns: n };
      };
      function R5(t, n) {
        if ((1 & t && (H(0), f(1, A5, 1, 0, "ng-container", 7), z()), 2 & t)) {
          const e = p(2);
          g(1),
            d("ngTemplateOutlet", e.contentTemplate)(
              "ngTemplateOutletContext",
              Ze(5, sg, e.items, Ze(2, k5, e._items, e.loadedColumns))
            );
        }
      }
      function F5(t, n) {
        if ((1 & t && (jn(0), f(1, R5, 2, 8, "ng-container", 17)), 2 & t)) {
          const e = p();
          g(1), d("ngIf", e.contentTemplate);
        }
      }
      const L5 = ["*"];
      let ag = (() => {
          class t {
            document;
            platformId;
            renderer;
            cd;
            zone;
            get id() {
              return this._id;
            }
            set id(e) {
              this._id = e;
            }
            get style() {
              return this._style;
            }
            set style(e) {
              this._style = e;
            }
            get styleClass() {
              return this._styleClass;
            }
            set styleClass(e) {
              this._styleClass = e;
            }
            get tabindex() {
              return this._tabindex;
            }
            set tabindex(e) {
              this._tabindex = e;
            }
            get items() {
              return this._items;
            }
            set items(e) {
              this._items = e;
            }
            get itemSize() {
              return this._itemSize;
            }
            set itemSize(e) {
              this._itemSize = e;
            }
            get scrollHeight() {
              return this._scrollHeight;
            }
            set scrollHeight(e) {
              this._scrollHeight = e;
            }
            get scrollWidth() {
              return this._scrollWidth;
            }
            set scrollWidth(e) {
              this._scrollWidth = e;
            }
            get orientation() {
              return this._orientation;
            }
            set orientation(e) {
              this._orientation = e;
            }
            get step() {
              return this._step;
            }
            set step(e) {
              this._step = e;
            }
            get delay() {
              return this._delay;
            }
            set delay(e) {
              this._delay = e;
            }
            get resizeDelay() {
              return this._resizeDelay;
            }
            set resizeDelay(e) {
              this._resizeDelay = e;
            }
            get appendOnly() {
              return this._appendOnly;
            }
            set appendOnly(e) {
              this._appendOnly = e;
            }
            get inline() {
              return this._inline;
            }
            set inline(e) {
              this._inline = e;
            }
            get lazy() {
              return this._lazy;
            }
            set lazy(e) {
              this._lazy = e;
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              this._disabled = e;
            }
            get loaderDisabled() {
              return this._loaderDisabled;
            }
            set loaderDisabled(e) {
              this._loaderDisabled = e;
            }
            get columns() {
              return this._columns;
            }
            set columns(e) {
              this._columns = e;
            }
            get showSpacer() {
              return this._showSpacer;
            }
            set showSpacer(e) {
              this._showSpacer = e;
            }
            get showLoader() {
              return this._showLoader;
            }
            set showLoader(e) {
              this._showLoader = e;
            }
            get numToleratedItems() {
              return this._numToleratedItems;
            }
            set numToleratedItems(e) {
              this._numToleratedItems = e;
            }
            get loading() {
              return this._loading;
            }
            set loading(e) {
              this._loading = e;
            }
            get autoSize() {
              return this._autoSize;
            }
            set autoSize(e) {
              this._autoSize = e;
            }
            get trackBy() {
              return this._trackBy;
            }
            set trackBy(e) {
              this._trackBy = e;
            }
            get options() {
              return this._options;
            }
            set options(e) {
              (this._options = e),
                e &&
                  "object" == typeof e &&
                  Object.entries(e).forEach(
                    ([i, o]) => this[`_${i}`] !== o && (this[`_${i}`] = o)
                  );
            }
            onLazyLoad = new L();
            onScroll = new L();
            onScrollIndexChange = new L();
            elementViewChild;
            contentViewChild;
            templates;
            _id;
            _style;
            _styleClass;
            _tabindex = 0;
            _items;
            _itemSize = 0;
            _scrollHeight;
            _scrollWidth;
            _orientation = "vertical";
            _step = 0;
            _delay = 0;
            _resizeDelay = 10;
            _appendOnly = !1;
            _inline = !1;
            _lazy = !1;
            _disabled = !1;
            _loaderDisabled = !1;
            _columns;
            _showSpacer = !0;
            _showLoader = !1;
            _numToleratedItems;
            _loading;
            _autoSize = !1;
            _trackBy;
            _options;
            d_loading = !1;
            d_numToleratedItems;
            contentEl;
            contentTemplate;
            itemTemplate;
            loaderTemplate;
            loaderIconTemplate;
            first = 0;
            last = 0;
            page = 0;
            isRangeChanged = !1;
            numItemsInViewport = 0;
            lastScrollPos = 0;
            lazyLoadState = {};
            loaderArr = [];
            spacerStyle = {};
            contentStyle = {};
            scrollTimeout;
            resizeTimeout;
            initialized = !1;
            windowResizeListener;
            defaultWidth;
            defaultHeight;
            defaultContentWidth;
            defaultContentHeight;
            get vertical() {
              return "vertical" === this._orientation;
            }
            get horizontal() {
              return "horizontal" === this._orientation;
            }
            get both() {
              return "both" === this._orientation;
            }
            get loadedItems() {
              return this._items && !this.d_loading
                ? this.both
                  ? this._items
                      .slice(
                        this._appendOnly ? 0 : this.first.rows,
                        this.last.rows
                      )
                      .map((e) =>
                        this._columns
                          ? e
                          : e.slice(
                              this._appendOnly ? 0 : this.first.cols,
                              this.last.cols
                            )
                      )
                  : this.horizontal && this._columns
                  ? this._items
                  : this._items.slice(
                      this._appendOnly ? 0 : this.first,
                      this.last
                    )
                : [];
            }
            get loadedRows() {
              return this.d_loading
                ? this._loaderDisabled
                  ? this.loaderArr
                  : []
                : this.loadedItems;
            }
            get loadedColumns() {
              return this._columns && (this.both || this.horizontal)
                ? this.d_loading && this._loaderDisabled
                  ? this.both
                    ? this.loaderArr[0]
                    : this.loaderArr
                  : this._columns.slice(
                      this.both ? this.first.cols : this.first,
                      this.both ? this.last.cols : this.last
                    )
                : this._columns;
            }
            get isPageChanged() {
              return !this._step || this.page !== this.getPageByFirst();
            }
            constructor(e, i, o, r, s) {
              (this.document = e),
                (this.platformId = i),
                (this.renderer = o),
                (this.cd = r),
                (this.zone = s);
            }
            ngOnInit() {
              this.setInitialState();
            }
            ngOnChanges(e) {
              let i = !1;
              if (e.loading) {
                const { previousValue: o, currentValue: r } = e.loading;
                this.lazy &&
                  o !== r &&
                  r !== this.d_loading &&
                  ((this.d_loading = r), (i = !0));
              }
              if (
                (e.orientation &&
                  (this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0),
                e.numToleratedItems)
              ) {
                const { previousValue: o, currentValue: r } =
                  e.numToleratedItems;
                o !== r &&
                  r !== this.d_numToleratedItems &&
                  (this.d_numToleratedItems = r);
              }
              if (e.options) {
                const { previousValue: o, currentValue: r } = e.options;
                this.lazy &&
                  o?.loading !== r?.loading &&
                  r?.loading !== this.d_loading &&
                  ((this.d_loading = r.loading), (i = !0)),
                  o?.numToleratedItems !== r?.numToleratedItems &&
                    r?.numToleratedItems !== this.d_numToleratedItems &&
                    (this.d_numToleratedItems = r.numToleratedItems);
              }
              this.initialized &&
                !i &&
                (e.items?.previousValue?.length !==
                  e.items?.currentValue?.length ||
                  e.itemSize ||
                  e.scrollHeight ||
                  e.scrollWidth) &&
                (this.init(), this.calculateAutoSize());
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "content":
                    this.contentTemplate = e.template;
                    break;
                  case "item":
                  default:
                    this.itemTemplate = e.template;
                    break;
                  case "loader":
                    this.loaderTemplate = e.template;
                    break;
                  case "loadericon":
                    this.loaderIconTemplate = e.template;
                }
              });
            }
            ngAfterViewInit() {
              Promise.resolve().then(() => {
                this.viewInit();
              });
            }
            ngAfterViewChecked() {
              this.initialized || this.viewInit();
            }
            ngOnDestroy() {
              this.unbindResizeListener(),
                (this.contentEl = null),
                (this.initialized = !1);
            }
            viewInit() {
              Ai(this.platformId) &&
                w.isVisible(this.elementViewChild?.nativeElement) &&
                (this.setInitialState(),
                this.setContentEl(this.contentEl),
                this.init(),
                (this.defaultWidth = w.getWidth(
                  this.elementViewChild?.nativeElement
                )),
                (this.defaultHeight = w.getHeight(
                  this.elementViewChild?.nativeElement
                )),
                (this.defaultContentWidth = w.getWidth(this.contentEl)),
                (this.defaultContentHeight = w.getHeight(this.contentEl)),
                (this.initialized = !0));
            }
            init() {
              this._disabled ||
                (this.setSize(),
                this.calculateOptions(),
                this.setSpacerSize(),
                this.bindResizeListener(),
                this.cd.detectChanges());
            }
            setContentEl(e) {
              this.contentEl =
                e ||
                this.contentViewChild?.nativeElement ||
                w.findSingle(
                  this.elementViewChild?.nativeElement,
                  ".p-scroller-content"
                );
            }
            setInitialState() {
              (this.first = this.both ? { rows: 0, cols: 0 } : 0),
                (this.last = this.both ? { rows: 0, cols: 0 } : 0),
                (this.numItemsInViewport = this.both
                  ? { rows: 0, cols: 0 }
                  : 0),
                (this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0),
                (this.d_loading = this._loading || !1),
                (this.d_numToleratedItems = this._numToleratedItems),
                (this.loaderArr = []),
                (this.spacerStyle = {}),
                (this.contentStyle = {});
            }
            getElementRef() {
              return this.elementViewChild;
            }
            getPageByFirst() {
              return Math.floor(
                (this.first + 4 * this.d_numToleratedItems) / (this._step || 1)
              );
            }
            scrollTo(e) {
              (this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0),
                this.elementViewChild?.nativeElement?.scrollTo(e);
            }
            scrollToIndex(e, i = "auto") {
              const { numToleratedItems: o } = this.calculateNumItems(),
                r = this.getContentPosition(),
                s = (u = 0, h) => (u <= h ? 0 : u),
                a = (u, h, m) => u * h + m,
                l = (u = 0, h = 0) =>
                  this.scrollTo({ left: u, top: h, behavior: i });
              let c = 0;
              this.both
                ? ((c = { rows: s(e[0], o[0]), cols: s(e[1], o[1]) }),
                  l(
                    a(c.cols, this._itemSize[1], r.left),
                    a(c.rows, this._itemSize[0], r.top)
                  ))
                : ((c = s(e, o)),
                  this.horizontal
                    ? l(a(c, this._itemSize, r.left), 0)
                    : l(0, a(c, this._itemSize, r.top))),
                (this.isRangeChanged = this.first !== c),
                (this.first = c);
            }
            scrollInView(e, i, o = "auto") {
              if (i) {
                const { first: r, viewport: s } = this.getRenderedRange(),
                  a = (u = 0, h = 0) =>
                    this.scrollTo({ left: u, top: h, behavior: o }),
                  c = "to-end" === i;
                if ("to-start" === i) {
                  if (this.both)
                    s.first.rows - r.rows > e[0]
                      ? a(
                          s.first.cols * this._itemSize[1],
                          (s.first.rows - 1) * this._itemSize[0]
                        )
                      : s.first.cols - r.cols > e[1] &&
                        a(
                          (s.first.cols - 1) * this._itemSize[1],
                          s.first.rows * this._itemSize[0]
                        );
                  else if (s.first - r > e) {
                    const u = (s.first - 1) * this._itemSize;
                    this.horizontal ? a(u, 0) : a(0, u);
                  }
                } else if (c)
                  if (this.both)
                    s.last.rows - r.rows <= e[0] + 1
                      ? a(
                          s.first.cols * this._itemSize[1],
                          (s.first.rows + 1) * this._itemSize[0]
                        )
                      : s.last.cols - r.cols <= e[1] + 1 &&
                        a(
                          (s.first.cols + 1) * this._itemSize[1],
                          s.first.rows * this._itemSize[0]
                        );
                  else if (s.last - r <= e + 1) {
                    const u = (s.first + 1) * this._itemSize;
                    this.horizontal ? a(u, 0) : a(0, u);
                  }
              } else this.scrollToIndex(e, o);
            }
            getRenderedRange() {
              const e = (r, s) => Math.floor(r / (s || r));
              let i = this.first,
                o = 0;
              if (this.elementViewChild?.nativeElement) {
                const { scrollTop: r, scrollLeft: s } =
                  this.elementViewChild.nativeElement;
                this.both
                  ? ((i = {
                      rows: e(r, this._itemSize[0]),
                      cols: e(s, this._itemSize[1]),
                    }),
                    (o = {
                      rows: i.rows + this.numItemsInViewport.rows,
                      cols: i.cols + this.numItemsInViewport.cols,
                    }))
                  : ((i = e(this.horizontal ? s : r, this._itemSize)),
                    (o = i + this.numItemsInViewport));
              }
              return {
                first: this.first,
                last: this.last,
                viewport: { first: i, last: o },
              };
            }
            calculateNumItems() {
              const e = this.getContentPosition(),
                i =
                  (this.elementViewChild?.nativeElement
                    ? this.elementViewChild.nativeElement.offsetWidth - e.left
                    : 0) || 0,
                o =
                  (this.elementViewChild?.nativeElement
                    ? this.elementViewChild.nativeElement.offsetHeight - e.top
                    : 0) || 0,
                r = (c, u) => Math.ceil(c / (u || c)),
                s = (c) => Math.ceil(c / 2),
                a = this.both
                  ? {
                      rows: r(o, this._itemSize[0]),
                      cols: r(i, this._itemSize[1]),
                    }
                  : r(this.horizontal ? i : o, this._itemSize);
              return {
                numItemsInViewport: a,
                numToleratedItems:
                  this.d_numToleratedItems ||
                  (this.both ? [s(a.rows), s(a.cols)] : s(a)),
              };
            }
            calculateOptions() {
              const { numItemsInViewport: e, numToleratedItems: i } =
                  this.calculateNumItems(),
                o = (a, l, c, u = !1) =>
                  this.getLast(a + l + (a < c ? 2 : 3) * c, u),
                r = this.first,
                s = this.both
                  ? {
                      rows: o(this.first.rows, e.rows, i[0]),
                      cols: o(this.first.cols, e.cols, i[1], !0),
                    }
                  : o(this.first, e, i);
              (this.last = s),
                (this.numItemsInViewport = e),
                (this.d_numToleratedItems = i),
                this.showLoader &&
                  (this.loaderArr = this.both
                    ? Array.from({ length: e.rows }).map(() =>
                        Array.from({ length: e.cols })
                      )
                    : Array.from({ length: e })),
                this._lazy &&
                  Promise.resolve().then(() => {
                    (this.lazyLoadState = {
                      first: this._step
                        ? this.both
                          ? { rows: 0, cols: r.cols }
                          : 0
                        : r,
                      last: Math.min(
                        this._step ? this._step : this.last,
                        this.items.length
                      ),
                    }),
                      this.handleEvents("onLazyLoad", this.lazyLoadState);
                  });
            }
            calculateAutoSize() {
              this._autoSize &&
                !this.d_loading &&
                Promise.resolve().then(() => {
                  if (this.contentEl) {
                    (this.contentEl.style.minHeight =
                      this.contentEl.style.minWidth =
                        "auto"),
                      (this.contentEl.style.position = "relative"),
                      (this.elementViewChild.nativeElement.style.contain =
                        "none");
                    const [e, i] = [
                      w.getWidth(this.contentEl),
                      w.getHeight(this.contentEl),
                    ];
                    e !== this.defaultContentWidth &&
                      (this.elementViewChild.nativeElement.style.width = ""),
                      i !== this.defaultContentHeight &&
                        (this.elementViewChild.nativeElement.style.height = "");
                    const [o, r] = [
                      w.getWidth(this.elementViewChild.nativeElement),
                      w.getHeight(this.elementViewChild.nativeElement),
                    ];
                    (this.both || this.horizontal) &&
                      (this.elementViewChild.nativeElement.style.width =
                        o < this.defaultWidth
                          ? o + "px"
                          : this._scrollWidth || this.defaultWidth + "px"),
                      (this.both || this.vertical) &&
                        (this.elementViewChild.nativeElement.style.height =
                          r < this.defaultHeight
                            ? r + "px"
                            : this._scrollHeight || this.defaultHeight + "px"),
                      (this.contentEl.style.minHeight =
                        this.contentEl.style.minWidth =
                          ""),
                      (this.contentEl.style.position = ""),
                      (this.elementViewChild.nativeElement.style.contain = "");
                  }
                });
            }
            getLast(e = 0, i = !1) {
              return this._items
                ? Math.min(
                    i
                      ? (this._columns || this._items[0]).length
                      : this._items.length,
                    e
                  )
                : 0;
            }
            getContentPosition() {
              if (this.contentEl) {
                const e = getComputedStyle(this.contentEl),
                  i =
                    parseFloat(e.paddingLeft) +
                    Math.max(parseFloat(e.left) || 0, 0),
                  o =
                    parseFloat(e.paddingRight) +
                    Math.max(parseFloat(e.right) || 0, 0),
                  r =
                    parseFloat(e.paddingTop) +
                    Math.max(parseFloat(e.top) || 0, 0),
                  s =
                    parseFloat(e.paddingBottom) +
                    Math.max(parseFloat(e.bottom) || 0, 0);
                return {
                  left: i,
                  right: o,
                  top: r,
                  bottom: s,
                  x: i + o,
                  y: r + s,
                };
              }
              return { left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };
            }
            setSize() {
              if (this.elementViewChild?.nativeElement) {
                const e =
                    this.elementViewChild.nativeElement.parentElement
                      .parentElement,
                  i =
                    this._scrollWidth ||
                    `${
                      this.elementViewChild.nativeElement.offsetWidth ||
                      e.offsetWidth
                    }px`,
                  o =
                    this._scrollHeight ||
                    `${
                      this.elementViewChild.nativeElement.offsetHeight ||
                      e.offsetHeight
                    }px`,
                  r = (s, a) =>
                    (this.elementViewChild.nativeElement.style[s] = a);
                this.both || this.horizontal
                  ? (r("height", o), r("width", i))
                  : r("height", o);
              }
            }
            setSpacerSize() {
              if (this._items) {
                const e = this.getContentPosition(),
                  i = (o, r, s, a = 0) =>
                    (this.spacerStyle = {
                      ...this.spacerStyle,
                      [`${o}`]: (r || []).length * s + a + "px",
                    });
                this.both
                  ? (i("height", this._items, this._itemSize[0], e.y),
                    i(
                      "width",
                      this._columns || this._items[1],
                      this._itemSize[1],
                      e.x
                    ))
                  : this.horizontal
                  ? i(
                      "width",
                      this._columns || this._items,
                      this._itemSize,
                      e.x
                    )
                  : i("height", this._items, this._itemSize, e.y);
              }
            }
            setContentPosition(e) {
              if (this.contentEl && !this._appendOnly) {
                const i = e ? e.first : this.first,
                  o = (s, a) => s * a,
                  r = (s = 0, a = 0) =>
                    (this.contentStyle = {
                      ...this.contentStyle,
                      transform: `translate3d(${s}px, ${a}px, 0)`,
                    });
                if (this.both)
                  r(o(i.cols, this._itemSize[1]), o(i.rows, this._itemSize[0]));
                else {
                  const s = o(i, this._itemSize);
                  this.horizontal ? r(s, 0) : r(0, s);
                }
              }
            }
            onScrollPositionChange(e) {
              const i = e.target,
                o = this.getContentPosition(),
                r = (I, M) => (I ? (I > M ? I - M : I) : 0),
                s = (I, M) => Math.floor(I / (M || I)),
                a = (I, M, E, F, V, Z) =>
                  I <= V ? V : Z ? E - F - V : M + V - 1,
                l = (I, M, E, F, V, Z, ge) =>
                  I <= Z
                    ? 0
                    : Math.max(
                        0,
                        ge ? (I < M ? E : I - Z) : I > M ? E : I - 2 * Z
                      ),
                c = (I, M, E, F, V, Z = !1) => {
                  let ge = M + F + 2 * V;
                  return I >= V && (ge += V + 1), this.getLast(ge, Z);
                },
                u = r(i.scrollTop, o.top),
                h = r(i.scrollLeft, o.left);
              let m = this.both ? { rows: 0, cols: 0 } : 0,
                _ = this.last,
                b = !1,
                C = this.lastScrollPos;
              if (this.both) {
                const I = this.lastScrollPos.top <= u,
                  M = this.lastScrollPos.left <= h;
                if (!this._appendOnly || (this._appendOnly && (I || M))) {
                  const E = {
                      rows: s(u, this._itemSize[0]),
                      cols: s(h, this._itemSize[1]),
                    },
                    F = {
                      rows: a(
                        E.rows,
                        this.first.rows,
                        this.last.rows,
                        this.numItemsInViewport.rows,
                        this.d_numToleratedItems[0],
                        I
                      ),
                      cols: a(
                        E.cols,
                        this.first.cols,
                        this.last.cols,
                        this.numItemsInViewport.cols,
                        this.d_numToleratedItems[1],
                        M
                      ),
                    };
                  (m = {
                    rows: l(
                      E.rows,
                      F.rows,
                      this.first.rows,
                      0,
                      0,
                      this.d_numToleratedItems[0],
                      I
                    ),
                    cols: l(
                      E.cols,
                      F.cols,
                      this.first.cols,
                      0,
                      0,
                      this.d_numToleratedItems[1],
                      M
                    ),
                  }),
                    (_ = {
                      rows: c(
                        E.rows,
                        m.rows,
                        0,
                        this.numItemsInViewport.rows,
                        this.d_numToleratedItems[0]
                      ),
                      cols: c(
                        E.cols,
                        m.cols,
                        0,
                        this.numItemsInViewport.cols,
                        this.d_numToleratedItems[1],
                        !0
                      ),
                    }),
                    (b =
                      m.rows !== this.first.rows ||
                      _.rows !== this.last.rows ||
                      m.cols !== this.first.cols ||
                      _.cols !== this.last.cols ||
                      this.isRangeChanged),
                    (C = { top: u, left: h });
                }
              } else {
                const I = this.horizontal ? h : u,
                  M = this.lastScrollPos <= I;
                if (!this._appendOnly || (this._appendOnly && M)) {
                  const E = s(I, this._itemSize);
                  (m = l(
                    E,
                    a(
                      E,
                      this.first,
                      this.last,
                      this.numItemsInViewport,
                      this.d_numToleratedItems,
                      M
                    ),
                    this.first,
                    0,
                    0,
                    this.d_numToleratedItems,
                    M
                  )),
                    (_ = c(
                      E,
                      m,
                      0,
                      this.numItemsInViewport,
                      this.d_numToleratedItems
                    )),
                    (b =
                      m !== this.first ||
                      _ !== this.last ||
                      this.isRangeChanged),
                    (C = I);
                }
              }
              return { first: m, last: _, isRangeChanged: b, scrollPos: C };
            }
            onScrollChange(e) {
              const {
                first: i,
                last: o,
                isRangeChanged: r,
                scrollPos: s,
              } = this.onScrollPositionChange(e);
              if (r) {
                const a = { first: i, last: o };
                if (
                  (this.setContentPosition(a),
                  (this.first = i),
                  (this.last = o),
                  (this.lastScrollPos = s),
                  this.handleEvents("onScrollIndexChange", a),
                  this._lazy && this.isPageChanged)
                ) {
                  const l = {
                    first: this._step
                      ? Math.min(
                          this.getPageByFirst() * this._step,
                          this.items.length - this._step
                        )
                      : i,
                    last: Math.min(
                      this._step ? (this.getPageByFirst() + 1) * this._step : o,
                      this.items.length
                    ),
                  };
                  (this.lazyLoadState.first !== l.first ||
                    this.lazyLoadState.last !== l.last) &&
                    this.handleEvents("onLazyLoad", l),
                    (this.lazyLoadState = l);
                }
              }
            }
            onContainerScroll(e) {
              if (
                (this.handleEvents("onScroll", { originalEvent: e }),
                this._delay && this.isPageChanged)
              ) {
                if (
                  (this.scrollTimeout && clearTimeout(this.scrollTimeout),
                  !this.d_loading && this.showLoader)
                ) {
                  const { isRangeChanged: i } = this.onScrollPositionChange(e);
                  (i || (this._step && this.isPageChanged)) &&
                    ((this.d_loading = !0), this.cd.detectChanges());
                }
                this.scrollTimeout = setTimeout(() => {
                  this.onScrollChange(e),
                    this.d_loading &&
                      this.showLoader &&
                      (!this._lazy || void 0 === this._loading) &&
                      ((this.d_loading = !1),
                      (this.page = this.getPageByFirst()),
                      this.cd.detectChanges());
                }, this._delay);
              } else !this.d_loading && this.onScrollChange(e);
            }
            bindResizeListener() {
              Ai(this.platformId) &&
                (this.windowResizeListener ||
                  this.zone.runOutsideAngular(() => {
                    const e = this.document.defaultView,
                      i = w.isTouchDevice() ? "orientationchange" : "resize";
                    this.windowResizeListener = this.renderer.listen(
                      e,
                      i,
                      this.onWindowResize.bind(this)
                    );
                  }));
            }
            unbindResizeListener() {
              this.windowResizeListener &&
                (this.windowResizeListener(),
                (this.windowResizeListener = null));
            }
            onWindowResize() {
              this.resizeTimeout && clearTimeout(this.resizeTimeout),
                (this.resizeTimeout = setTimeout(() => {
                  if (w.isVisible(this.elementViewChild?.nativeElement)) {
                    const [e, i] = [
                        w.getWidth(this.elementViewChild?.nativeElement),
                        w.getHeight(this.elementViewChild?.nativeElement),
                      ],
                      [o, r] = [
                        e !== this.defaultWidth,
                        i !== this.defaultHeight,
                      ];
                    (this.both
                      ? o || r
                      : this.horizontal
                      ? o
                      : this.vertical && r) &&
                      this.zone.run(() => {
                        (this.d_numToleratedItems = this._numToleratedItems),
                          (this.defaultWidth = e),
                          (this.defaultHeight = i),
                          (this.defaultContentWidth = w.getWidth(
                            this.contentEl
                          )),
                          (this.defaultContentHeight = w.getHeight(
                            this.contentEl
                          )),
                          this.init();
                      });
                  }
                }, this._resizeDelay));
            }
            handleEvents(e, i) {
              return this.options && this.options[e]
                ? this.options[e](i)
                : this[e].emit(i);
            }
            getContentOptions() {
              return {
                contentStyleClass:
                  "p-scroller-content " +
                  (this.d_loading ? "p-scroller-loading" : ""),
                items: this.loadedItems,
                getItemOptions: (e) => this.getOptions(e),
                loading: this.d_loading,
                getLoaderOptions: (e, i) => this.getLoaderOptions(e, i),
                itemSize: this._itemSize,
                rows: this.loadedRows,
                columns: this.loadedColumns,
                spacerStyle: this.spacerStyle,
                contentStyle: this.contentStyle,
                vertical: this.vertical,
                horizontal: this.horizontal,
                both: this.both,
              };
            }
            getOptions(e) {
              const i = (this._items || []).length,
                o = this.both ? this.first.rows + e : this.first + e;
              return {
                index: o,
                count: i,
                first: 0 === o,
                last: o === i - 1,
                even: o % 2 == 0,
                odd: o % 2 != 0,
              };
            }
            getLoaderOptions(e, i) {
              const o = this.loaderArr.length;
              return {
                index: e,
                count: o,
                first: 0 === e,
                last: e === o - 1,
                even: e % 2 == 0,
                odd: e % 2 != 0,
                ...i,
              };
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Qe), D(xn), D(Tt), D(Ct), D(_e));
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-scroller"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              viewQuery: function (i, o) {
                if ((1 & i && (me(c5, 5), me(u5, 5)), 2 & i)) {
                  let r;
                  J((r = X())) && (o.elementViewChild = r.first),
                    J((r = X())) && (o.contentViewChild = r.first);
                }
              },
              hostAttrs: [1, "p-scroller-viewport", "p-element"],
              inputs: {
                id: "id",
                style: "style",
                styleClass: "styleClass",
                tabindex: "tabindex",
                items: "items",
                itemSize: "itemSize",
                scrollHeight: "scrollHeight",
                scrollWidth: "scrollWidth",
                orientation: "orientation",
                step: "step",
                delay: "delay",
                resizeDelay: "resizeDelay",
                appendOnly: "appendOnly",
                inline: "inline",
                lazy: "lazy",
                disabled: "disabled",
                loaderDisabled: "loaderDisabled",
                columns: "columns",
                showSpacer: "showSpacer",
                showLoader: "showLoader",
                numToleratedItems: "numToleratedItems",
                loading: "loading",
                autoSize: "autoSize",
                trackBy: "trackBy",
                options: "options",
              },
              outputs: {
                onLazyLoad: "onLazyLoad",
                onScroll: "onScroll",
                onScrollIndexChange: "onScrollIndexChange",
              },
              features: [_t],
              ngContentSelectors: L5,
              decls: 3,
              vars: 2,
              consts: [
                [4, "ngIf", "ngIfElse"],
                ["disabledContainer", ""],
                [3, "ngStyle", "ngClass", "scroll"],
                ["element", ""],
                ["buildInContent", ""],
                ["class", "p-scroller-spacer", 3, "ngStyle", 4, "ngIf"],
                ["class", "p-scroller-loader", 3, "ngClass", 4, "ngIf"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "p-scroller-content", 3, "ngClass", "ngStyle"],
                ["content", ""],
                [4, "ngFor", "ngForOf", "ngForTrackBy"],
                [1, "p-scroller-spacer", 3, "ngStyle"],
                [1, "p-scroller-loader", 3, "ngClass"],
                ["buildInLoader", ""],
                [4, "ngFor", "ngForOf"],
                ["buildInLoaderIcon", ""],
                [3, "styleClass"],
                [4, "ngIf"],
              ],
              template: function (i, o) {
                if (
                  (1 & i &&
                    (Ii(),
                    f(0, O5, 8, 16, "ng-container", 0),
                    f(1, F5, 2, 1, "ng-template", null, 1, Yt)),
                  2 & i)
                ) {
                  const r = rt(2);
                  d("ngIf", !o._disabled)("ngIfElse", r);
                }
              },
              dependencies: function () {
                return [Bt, Oi, wt, St, Xt, Gr];
              },
              styles: [
                "@layer primeng{p-scroller{flex:1;outline:0 none}.p-scroller{position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;outline:0 none}.p-scroller-content{position:absolute;top:0;left:0;min-height:100%;min-width:100%;will-change:transform}.p-scroller-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0;pointer-events:none}.p-scroller-loader{position:sticky;top:0;left:0;width:100%;height:100%}.p-scroller-loader.p-component-overlay{display:flex;align-items:center;justify-content:center}.p-scroller-loading-icon{scale:2}.p-scroller-inline .p-scroller-content{position:static}}\n",
              ],
              encapsulation: 2,
            });
          }
          return t;
        })(),
        Zr = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt, ht, Gr, ht] });
          }
          return t;
        })(),
        lg = (() => {
          class t {
            platformId;
            el;
            zone;
            config;
            renderer;
            viewContainer;
            tooltipPosition;
            tooltipEvent = "hover";
            appendTo;
            positionStyle;
            tooltipStyleClass;
            tooltipZIndex;
            escape = !0;
            showDelay;
            hideDelay;
            life;
            positionTop;
            positionLeft;
            autoHide = !0;
            fitContent = !0;
            hideOnEscape = !0;
            content;
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = e), this.deactivate();
            }
            tooltipOptions;
            _tooltipOptions = {
              tooltipLabel: null,
              tooltipPosition: "right",
              tooltipEvent: "hover",
              appendTo: "body",
              positionStyle: null,
              tooltipStyleClass: null,
              tooltipZIndex: "auto",
              escape: !0,
              disabled: null,
              showDelay: null,
              hideDelay: null,
              positionTop: null,
              positionLeft: null,
              life: null,
              autoHide: !0,
              hideOnEscape: !0,
              id: zt() + "_tooltip",
            };
            _disabled;
            container;
            styleClass;
            tooltipText;
            showTimeout;
            hideTimeout;
            active;
            mouseEnterListener;
            mouseLeaveListener;
            containerMouseleaveListener;
            clickListener;
            focusListener;
            blurListener;
            scrollHandler;
            resizeListener;
            constructor(e, i, o, r, s, a) {
              (this.platformId = e),
                (this.el = i),
                (this.zone = o),
                (this.config = r),
                (this.renderer = s),
                (this.viewContainer = a);
            }
            ngAfterViewInit() {
              Ai(this.platformId) &&
                this.zone.runOutsideAngular(() => {
                  if ("hover" === this.getOption("tooltipEvent"))
                    (this.mouseEnterListener = this.onMouseEnter.bind(this)),
                      (this.mouseLeaveListener = this.onMouseLeave.bind(this)),
                      (this.clickListener = this.onInputClick.bind(this)),
                      this.el.nativeElement.addEventListener(
                        "mouseenter",
                        this.mouseEnterListener
                      ),
                      this.el.nativeElement.addEventListener(
                        "click",
                        this.clickListener
                      ),
                      this.el.nativeElement.addEventListener(
                        "mouseleave",
                        this.mouseLeaveListener
                      );
                  else if ("focus" === this.getOption("tooltipEvent")) {
                    (this.focusListener = this.onFocus.bind(this)),
                      (this.blurListener = this.onBlur.bind(this));
                    let e = this.getTarget(this.el.nativeElement);
                    e.addEventListener("focus", this.focusListener),
                      e.addEventListener("blur", this.blurListener);
                  }
                });
            }
            ngOnChanges(e) {
              e.tooltipPosition &&
                this.setOption({
                  tooltipPosition: e.tooltipPosition.currentValue,
                }),
                e.tooltipEvent &&
                  this.setOption({ tooltipEvent: e.tooltipEvent.currentValue }),
                e.appendTo &&
                  this.setOption({ appendTo: e.appendTo.currentValue }),
                e.positionStyle &&
                  this.setOption({
                    positionStyle: e.positionStyle.currentValue,
                  }),
                e.tooltipStyleClass &&
                  this.setOption({
                    tooltipStyleClass: e.tooltipStyleClass.currentValue,
                  }),
                e.tooltipZIndex &&
                  this.setOption({
                    tooltipZIndex: e.tooltipZIndex.currentValue,
                  }),
                e.escape && this.setOption({ escape: e.escape.currentValue }),
                e.showDelay &&
                  this.setOption({ showDelay: e.showDelay.currentValue }),
                e.hideDelay &&
                  this.setOption({ hideDelay: e.hideDelay.currentValue }),
                e.life && this.setOption({ life: e.life.currentValue }),
                e.positionTop &&
                  this.setOption({ positionTop: e.positionTop.currentValue }),
                e.positionLeft &&
                  this.setOption({ positionLeft: e.positionLeft.currentValue }),
                e.disabled &&
                  this.setOption({ disabled: e.disabled.currentValue }),
                e.content &&
                  (this.setOption({ tooltipLabel: e.content.currentValue }),
                  this.active &&
                    (e.content.currentValue
                      ? this.container && this.container.offsetParent
                        ? (this.updateText(), this.align())
                        : this.show()
                      : this.hide())),
                e.autoHide &&
                  this.setOption({ autoHide: e.autoHide.currentValue }),
                e.id && this.setOption({ id: e.id.currentValue }),
                e.tooltipOptions &&
                  ((this._tooltipOptions = {
                    ...this._tooltipOptions,
                    ...e.tooltipOptions.currentValue,
                  }),
                  this.deactivate(),
                  this.active &&
                    (this.getOption("tooltipLabel")
                      ? this.container && this.container.offsetParent
                        ? (this.updateText(), this.align())
                        : this.show()
                      : this.hide()));
            }
            isAutoHide() {
              return this.getOption("autoHide");
            }
            onMouseEnter(e) {
              !this.container && !this.showTimeout && this.activate();
            }
            onMouseLeave(e) {
              (this.isAutoHide() ||
                !(
                  w.hasClass(e.relatedTarget, "p-tooltip") ||
                  w.hasClass(e.relatedTarget, "p-tooltip-text") ||
                  w.hasClass(e.relatedTarget, "p-tooltip-arrow")
                )) &&
                this.deactivate();
            }
            onFocus(e) {
              this.activate();
            }
            onBlur(e) {
              this.deactivate();
            }
            onInputClick(e) {
              this.deactivate();
            }
            onPressEscape() {
              this.hideOnEscape && this.deactivate();
            }
            activate() {
              if (
                ((this.active = !0),
                this.clearHideTimeout(),
                this.getOption("showDelay")
                  ? (this.showTimeout = setTimeout(() => {
                      this.show();
                    }, this.getOption("showDelay")))
                  : this.show(),
                this.getOption("life"))
              ) {
                let e = this.getOption("showDelay")
                  ? this.getOption("life") + this.getOption("showDelay")
                  : this.getOption("life");
                this.hideTimeout = setTimeout(() => {
                  this.hide();
                }, e);
              }
            }
            deactivate() {
              (this.active = !1),
                this.clearShowTimeout(),
                this.getOption("hideDelay")
                  ? (this.clearHideTimeout(),
                    (this.hideTimeout = setTimeout(() => {
                      this.hide();
                    }, this.getOption("hideDelay"))))
                  : this.hide();
            }
            create() {
              this.container && (this.clearHideTimeout(), this.remove()),
                (this.container = document.createElement("div")),
                this.container.setAttribute("id", this.getOption("id")),
                this.container.setAttribute("role", "tooltip");
              let e = document.createElement("div");
              (e.className = "p-tooltip-arrow"),
                this.container.appendChild(e),
                (this.tooltipText = document.createElement("div")),
                (this.tooltipText.className = "p-tooltip-text"),
                this.updateText(),
                this.getOption("positionStyle") &&
                  (this.container.style.position =
                    this.getOption("positionStyle")),
                this.container.appendChild(this.tooltipText),
                "body" === this.getOption("appendTo")
                  ? document.body.appendChild(this.container)
                  : "target" === this.getOption("appendTo")
                  ? w.appendChild(this.container, this.el.nativeElement)
                  : w.appendChild(this.container, this.getOption("appendTo")),
                (this.container.style.display = "inline-block"),
                this.fitContent && (this.container.style.width = "fit-content"),
                this.isAutoHide()
                  ? (this.container.style.pointerEvents = "none")
                  : ((this.container.style.pointerEvents = "unset"),
                    this.bindContainerMouseleaveListener());
            }
            bindContainerMouseleaveListener() {
              this.containerMouseleaveListener ||
                (this.containerMouseleaveListener = this.renderer.listen(
                  this.container ?? this.container.nativeElement,
                  "mouseleave",
                  (i) => {
                    this.deactivate();
                  }
                ));
            }
            unbindContainerMouseleaveListener() {
              this.containerMouseleaveListener &&
                (this.bindContainerMouseleaveListener(),
                (this.containerMouseleaveListener = null));
            }
            show() {
              !this.getOption("tooltipLabel") ||
                this.getOption("disabled") ||
                (this.create(),
                this.align(),
                w.fadeIn(this.container, 250),
                "auto" === this.getOption("tooltipZIndex")
                  ? yn.set(
                      "tooltip",
                      this.container,
                      this.config.zIndex.tooltip
                    )
                  : (this.container.style.zIndex =
                      this.getOption("tooltipZIndex")),
                this.bindDocumentResizeListener(),
                this.bindScrollListener());
            }
            hide() {
              "auto" === this.getOption("tooltipZIndex") &&
                yn.clear(this.container),
                this.remove();
            }
            updateText() {
              const e = this.getOption("tooltipLabel");
              if (e instanceof Wn) {
                const i = this.viewContainer.createEmbeddedView(e);
                i.detectChanges(),
                  i.rootNodes.forEach((o) => this.tooltipText.appendChild(o));
              } else
                this.getOption("escape")
                  ? ((this.tooltipText.innerHTML = ""),
                    this.tooltipText.appendChild(document.createTextNode(e)))
                  : (this.tooltipText.innerHTML = e);
            }
            align() {
              switch (this.getOption("tooltipPosition")) {
                case "top":
                  this.alignTop(),
                    this.isOutOfBounds() &&
                      (this.alignBottom(),
                      this.isOutOfBounds() &&
                        (this.alignRight(),
                        this.isOutOfBounds() && this.alignLeft()));
                  break;
                case "bottom":
                  this.alignBottom(),
                    this.isOutOfBounds() &&
                      (this.alignTop(),
                      this.isOutOfBounds() &&
                        (this.alignRight(),
                        this.isOutOfBounds() && this.alignLeft()));
                  break;
                case "left":
                  this.alignLeft(),
                    this.isOutOfBounds() &&
                      (this.alignRight(),
                      this.isOutOfBounds() &&
                        (this.alignTop(),
                        this.isOutOfBounds() && this.alignBottom()));
                  break;
                case "right":
                  this.alignRight(),
                    this.isOutOfBounds() &&
                      (this.alignLeft(),
                      this.isOutOfBounds() &&
                        (this.alignTop(),
                        this.isOutOfBounds() && this.alignBottom()));
              }
            }
            getHostOffset() {
              if (
                "body" === this.getOption("appendTo") ||
                "target" === this.getOption("appendTo")
              ) {
                let e = this.el.nativeElement.getBoundingClientRect();
                return {
                  left: e.left + w.getWindowScrollLeft(),
                  top: e.top + w.getWindowScrollTop(),
                };
              }
              return { left: 0, top: 0 };
            }
            alignRight() {
              this.preAlign("right");
              let e = this.getHostOffset(),
                i = e.left + w.getOuterWidth(this.el.nativeElement),
                o =
                  e.top +
                  (w.getOuterHeight(this.el.nativeElement) -
                    w.getOuterHeight(this.container)) /
                    2;
              (this.container.style.left =
                i + this.getOption("positionLeft") + "px"),
                (this.container.style.top =
                  o + this.getOption("positionTop") + "px");
            }
            alignLeft() {
              this.preAlign("left");
              let e = this.getHostOffset(),
                i = e.left - w.getOuterWidth(this.container),
                o =
                  e.top +
                  (w.getOuterHeight(this.el.nativeElement) -
                    w.getOuterHeight(this.container)) /
                    2;
              (this.container.style.left =
                i + this.getOption("positionLeft") + "px"),
                (this.container.style.top =
                  o + this.getOption("positionTop") + "px");
            }
            alignTop() {
              this.preAlign("top");
              let e = this.getHostOffset(),
                i =
                  e.left +
                  (w.getOuterWidth(this.el.nativeElement) -
                    w.getOuterWidth(this.container)) /
                    2,
                o = e.top - w.getOuterHeight(this.container);
              (this.container.style.left =
                i + this.getOption("positionLeft") + "px"),
                (this.container.style.top =
                  o + this.getOption("positionTop") + "px");
            }
            alignBottom() {
              this.preAlign("bottom");
              let e = this.getHostOffset(),
                i =
                  e.left +
                  (w.getOuterWidth(this.el.nativeElement) -
                    w.getOuterWidth(this.container)) /
                    2,
                o = e.top + w.getOuterHeight(this.el.nativeElement);
              (this.container.style.left =
                i + this.getOption("positionLeft") + "px"),
                (this.container.style.top =
                  o + this.getOption("positionTop") + "px");
            }
            setOption(e) {
              this._tooltipOptions = { ...this._tooltipOptions, ...e };
            }
            getOption(e) {
              return this._tooltipOptions[e];
            }
            getTarget(e) {
              return w.hasClass(e, "p-inputwrapper")
                ? w.findSingle(e, "input")
                : e;
            }
            preAlign(e) {
              (this.container.style.left = "-999px"),
                (this.container.style.top = "-999px");
              let i = "p-tooltip p-component p-tooltip-" + e;
              this.container.className = this.getOption("tooltipStyleClass")
                ? i + " " + this.getOption("tooltipStyleClass")
                : i;
            }
            isOutOfBounds() {
              let e = this.container.getBoundingClientRect(),
                i = e.top,
                o = e.left,
                r = w.getOuterWidth(this.container),
                s = w.getOuterHeight(this.container),
                a = w.getViewport();
              return o + r > a.width || o < 0 || i < 0 || i + s > a.height;
            }
            onWindowResize(e) {
              this.hide();
            }
            bindDocumentResizeListener() {
              this.zone.runOutsideAngular(() => {
                (this.resizeListener = this.onWindowResize.bind(this)),
                  window.addEventListener("resize", this.resizeListener);
              });
            }
            unbindDocumentResizeListener() {
              this.resizeListener &&
                (window.removeEventListener("resize", this.resizeListener),
                (this.resizeListener = null));
            }
            bindScrollListener() {
              this.scrollHandler ||
                (this.scrollHandler = new du(this.el.nativeElement, () => {
                  this.container && this.hide();
                })),
                this.scrollHandler.bindScrollListener();
            }
            unbindScrollListener() {
              this.scrollHandler && this.scrollHandler.unbindScrollListener();
            }
            unbindEvents() {
              if ("hover" === this.getOption("tooltipEvent"))
                this.el.nativeElement.removeEventListener(
                  "mouseenter",
                  this.mouseEnterListener
                ),
                  this.el.nativeElement.removeEventListener(
                    "mouseleave",
                    this.mouseLeaveListener
                  ),
                  this.el.nativeElement.removeEventListener(
                    "click",
                    this.clickListener
                  );
              else if ("focus" === this.getOption("tooltipEvent")) {
                let e = this.getTarget(this.el.nativeElement);
                e.removeEventListener("focus", this.focusListener),
                  e.removeEventListener("blur", this.blurListener);
              }
              this.unbindDocumentResizeListener();
            }
            remove() {
              this.container &&
                this.container.parentElement &&
                ("body" === this.getOption("appendTo")
                  ? document.body.removeChild(this.container)
                  : "target" === this.getOption("appendTo")
                  ? this.el.nativeElement.removeChild(this.container)
                  : w.removeChild(this.container, this.getOption("appendTo"))),
                this.unbindDocumentResizeListener(),
                this.unbindScrollListener(),
                this.unbindContainerMouseleaveListener(),
                this.clearTimeouts(),
                (this.container = null),
                (this.scrollHandler = null);
            }
            clearShowTimeout() {
              this.showTimeout &&
                (clearTimeout(this.showTimeout), (this.showTimeout = null));
            }
            clearHideTimeout() {
              this.hideTimeout &&
                (clearTimeout(this.hideTimeout), (this.hideTimeout = null));
            }
            clearTimeouts() {
              this.clearShowTimeout(), this.clearHideTimeout();
            }
            ngOnDestroy() {
              this.unbindEvents(),
                this.container && yn.clear(this.container),
                this.remove(),
                this.scrollHandler &&
                  (this.scrollHandler.destroy(), (this.scrollHandler = null));
            }
            static ɵfac = function (i) {
              return new (i || t)(D(xn), D(Fe), D(_e), D(Ri), D(Tt), D(Rn));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pTooltip", ""]],
              hostAttrs: [1, "p-element"],
              hostBindings: function (i, o) {
                1 & i &&
                  A(
                    "keydown.escape",
                    function (s) {
                      return o.onPressEscape(s);
                    },
                    0,
                    B1
                  );
              },
              inputs: {
                tooltipPosition: "tooltipPosition",
                tooltipEvent: "tooltipEvent",
                appendTo: "appendTo",
                positionStyle: "positionStyle",
                tooltipStyleClass: "tooltipStyleClass",
                tooltipZIndex: "tooltipZIndex",
                escape: "escape",
                showDelay: "showDelay",
                hideDelay: "hideDelay",
                life: "life",
                positionTop: "positionTop",
                positionLeft: "positionLeft",
                autoHide: "autoHide",
                fitContent: "fitContent",
                hideOnEscape: "hideOnEscape",
                content: ["pTooltip", "content"],
                disabled: ["tooltipDisabled", "disabled"],
                tooltipOptions: "tooltipOptions",
              },
              features: [_t],
            });
          }
          return t;
        })(),
        hu = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt] });
          }
          return t;
        })(),
        fu = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["SearchIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 6,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "fill-rule",
                  "evenodd",
                  "clip-rule",
                  "evenodd",
                  "d",
                  "M2.67602 11.0265C3.6661 11.688 4.83011 12.0411 6.02086 12.0411C6.81149 12.0411 7.59438 11.8854 8.32483 11.5828C8.87005 11.357 9.37808 11.0526 9.83317 10.6803L12.9769 13.8241C13.0323 13.8801 13.0983 13.9245 13.171 13.9548C13.2438 13.985 13.3219 14.0003 13.4007 14C13.4795 14.0003 13.5575 13.985 13.6303 13.9548C13.7031 13.9245 13.7691 13.8801 13.8244 13.8241C13.9367 13.7116 13.9998 13.5592 13.9998 13.4003C13.9998 13.2414 13.9367 13.089 13.8244 12.9765L10.6807 9.8328C11.053 9.37773 11.3573 8.86972 11.5831 8.32452C11.8857 7.59408 12.0414 6.81119 12.0414 6.02056C12.0414 4.8298 11.6883 3.66579 11.0268 2.67572C10.3652 1.68564 9.42494 0.913972 8.32483 0.45829C7.22472 0.00260857 6.01418 -0.116618 4.84631 0.115686C3.67844 0.34799 2.60568 0.921393 1.76369 1.76338C0.921698 2.60537 0.348296 3.67813 0.115991 4.84601C-0.116313 6.01388 0.00291375 7.22441 0.458595 8.32452C0.914277 9.42464 1.68595 10.3649 2.67602 11.0265ZM3.35565 2.0158C4.14456 1.48867 5.07206 1.20731 6.02086 1.20731C7.29317 1.20731 8.51338 1.71274 9.41304 2.6124C10.3127 3.51206 10.8181 4.73226 10.8181 6.00457C10.8181 6.95337 10.5368 7.88088 10.0096 8.66978C9.48251 9.45868 8.73328 10.0736 7.85669 10.4367C6.98011 10.7997 6.01554 10.8947 5.08496 10.7096C4.15439 10.5245 3.2996 10.0676 2.62869 9.39674C1.95778 8.72583 1.50089 7.87104 1.31579 6.94046C1.13068 6.00989 1.22568 5.04532 1.58878 4.16874C1.95187 3.29215 2.56675 2.54292 3.35565 2.0158Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1),
                  v(),
                  y(3, "defs")(4, "clipPath", 2),
                  k(5, "rect", 3),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(3),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })();
      function P5(t, n) {
        if ((1 & t && (y(0, "span"), B(1), v()), 2 & t)) {
          const e = p();
          let i;
          g(1), Le(null !== (i = e.label) && void 0 !== i ? i : "empty");
        }
      }
      function N5(t, n) {
        1 & t && j(0);
      }
      const Ea = function (t) {
          return { height: t };
        },
        V5 = function (t, n, e) {
          return {
            "p-dropdown-item": !0,
            "p-highlight": t,
            "p-disabled": n,
            "p-focus": e,
          };
        },
        cg = function (t) {
          return { $implicit: t };
        },
        B5 = ["container"],
        H5 = ["filter"],
        z5 = ["focusInput"],
        $5 = ["editableInput"],
        j5 = ["items"],
        U5 = ["scroller"],
        G5 = ["overlay"],
        W5 = ["firstHiddenFocusableEl"],
        K5 = ["lastHiddenFocusableEl"];
      function q5(t, n) {
        if ((1 & t && (H(0), B(1), z()), 2 & t)) {
          const e = p(2);
          g(1), Le("p-emptylabel" === e.label() ? "\xa0" : e.label());
        }
      }
      function Z5(t, n) {
        1 & t && j(0);
      }
      function Y5(t, n) {
        if ((1 & t && (y(0, "span"), B(1), v()), 2 & t)) {
          const e = p(3);
          g(1), Le("p-emptylabel" === e.label() ? "\xa0" : e.placeholder);
        }
      }
      function Q5(t, n) {
        if ((1 & t && f(0, Y5, 2, 1, "span", 4), 2 & t)) {
          const e = p(2);
          d(
            "ngIf",
            e.label() === e.placeholder || (e.label() && !e.placeholder)
          );
        }
      }
      function J5(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "span", 10, 11),
            A("focus", function (o) {
              return T(e), S(p().onInputFocus(o));
            })("blur", function (o) {
              return T(e), S(p().onInputBlur(o));
            })("keydown", function (o) {
              return T(e), S(p().onKeyDown(o));
            }),
            f(2, q5, 2, 1, "ng-container", 12),
            f(3, Z5, 1, 0, "ng-container", 13),
            f(4, Q5, 1, 1, "ng-template", null, 14, Yt),
            v();
        }
        if (2 & t) {
          const e = rt(5),
            i = p();
          d("ngClass", i.inputClass)("pTooltip", i.tooltip)(
            "tooltipPosition",
            i.tooltipPosition
          )("positionStyle", i.tooltipPositionStyle)(
            "tooltipStyleClass",
            i.tooltipStyleClass
          )("autofocus", i.autofocus),
            x("aria-disabled", i.disabled)("id", i.inputId)(
              "aria-label",
              i.ariaLabel || ("p-emptylabel" === i.label() ? void 0 : i.label())
            )("aria-labelledby", i.ariaLabelledBy)("aria-haspopup", "listbox")(
              "aria-expanded",
              i.overlayVisible
            )("aria-controls", i.id + "_list")(
              "tabindex",
              i.disabled ? -1 : i.tabindex
            )("aria-activedescendant", i.focused ? i.focusedOptionId : void 0),
            g(2),
            d("ngIf", !i.selectedItemTemplate)("ngIfElse", e),
            g(1),
            d("ngTemplateOutlet", i.selectedItemTemplate)(
              "ngTemplateOutletContext",
              Q(19, cg, i.selectedOption)
            );
        }
      }
      function X5(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 15, 16),
            A("input", function (o) {
              return T(e), S(p().onEditableInput(o));
            })("keydown", function (o) {
              return T(e), S(p().onKeyDown(o));
            })("focus", function (o) {
              return T(e), S(p().onInputFocus(o));
            })("blur", function (o) {
              return T(e), S(p().onInputBlur(o));
            }),
            v();
        }
        if (2 & t) {
          const e = p();
          d("ngClass", e.inputClass)("disabled", e.disabled),
            x("maxlength", e.maxlength)("placeholder", e.placeholder)(
              "aria-expanded",
              e.overlayVisible
            );
        }
      }
      function e7(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "TimesIcon", 19),
            A("click", function (o) {
              return T(e), S(p(2).clear(o));
            }),
            v();
        }
        2 & t &&
          (d("styleClass", "p-dropdown-clear-icon"),
          x("data-pc-section", "clearicon"));
      }
      function t7(t, n) {}
      function n7(t, n) {
        1 & t && f(0, t7, 0, 0, "ng-template");
      }
      function i7(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "span", 20),
            A("click", function (o) {
              return T(e), S(p(2).clear(o));
            }),
            f(1, n7, 1, 0, null, 21),
            v();
        }
        if (2 & t) {
          const e = p(2);
          x("data-pc-section", "clearicon"),
            g(1),
            d("ngTemplateOutlet", e.clearIconTemplate);
        }
      }
      function o7(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, e7, 1, 2, "TimesIcon", 17),
            f(2, i7, 2, 2, "span", 18),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1),
            d("ngIf", !e.clearIconTemplate),
            g(1),
            d("ngIf", e.clearIconTemplate);
        }
      }
      function r7(t, n) {
        1 & t && k(0, "span", 24), 2 & t && d("ngClass", p(2).dropdownIcon);
      }
      function s7(t, n) {
        1 & t && k(0, "ChevronDownIcon", 25),
          2 & t && d("styleClass", "p-dropdown-trigger-icon");
      }
      function a7(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, r7, 1, 1, "span", 22),
            f(2, s7, 1, 1, "ChevronDownIcon", 23),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1), d("ngIf", e.dropdownIcon), g(1), d("ngIf", !e.dropdownIcon);
        }
      }
      function l7(t, n) {}
      function c7(t, n) {
        1 & t && f(0, l7, 0, 0, "ng-template");
      }
      function u7(t, n) {
        if (
          (1 & t && (y(0, "span", 26), f(1, c7, 1, 0, null, 21), v()), 2 & t)
        ) {
          const e = p();
          g(1), d("ngTemplateOutlet", e.dropdownIconTemplate);
        }
      }
      function d7(t, n) {
        1 & t && j(0);
      }
      function p7(t, n) {
        1 & t && j(0);
      }
      const KT = function (t) {
        return { options: t };
      };
      function h7(t, n) {
        if ((1 & t && (H(0), f(1, p7, 1, 0, "ng-container", 13), z()), 2 & t)) {
          const e = p(3);
          g(1),
            d("ngTemplateOutlet", e.filterTemplate)(
              "ngTemplateOutletContext",
              Q(2, KT, e.filterOptions)
            );
        }
      }
      function f7(t, n) {
        1 & t && k(0, "SearchIcon", 25),
          2 & t && d("styleClass", "p-dropdown-filter-icon");
      }
      function g7(t, n) {}
      function m7(t, n) {
        1 & t && f(0, g7, 0, 0, "ng-template");
      }
      function _7(t, n) {
        if (
          (1 & t && (y(0, "span", 41), f(1, m7, 1, 0, null, 21), v()), 2 & t)
        ) {
          const e = p(4);
          g(1), d("ngTemplateOutlet", e.filterIconTemplate);
        }
      }
      function y7(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 37)(1, "input", 38, 39),
            A("input", function (o) {
              return T(e), S(p(3).onFilterInputChange(o));
            })("keydown", function (o) {
              return T(e), S(p(3).onFilterKeyDown(o));
            })("blur", function (o) {
              return T(e), S(p(3).onFilterBlur(o));
            }),
            v(),
            f(3, f7, 1, 1, "SearchIcon", 23),
            f(4, _7, 2, 1, "span", 40),
            v();
        }
        if (2 & t) {
          const e = p(3);
          g(1),
            d("value", e._filterValue() || ""),
            x("placeholder", e.filterPlaceholder)("aria-owns", e.id + "_list")(
              "aria-label",
              e.ariaFilterLabel
            )("aria-activedescendant", e.focusedOptionId),
            g(2),
            d("ngIf", !e.filterIconTemplate),
            g(1),
            d("ngIf", e.filterIconTemplate);
        }
      }
      function v7(t, n) {
        if (
          (1 & t &&
            (y(0, "div", 35),
            A("click", function (i) {
              return i.stopPropagation();
            }),
            f(1, h7, 2, 4, "ng-container", 12),
            f(2, y7, 5, 7, "ng-template", null, 36, Yt),
            v()),
          2 & t)
        ) {
          const e = rt(3),
            i = p(2);
          g(1), d("ngIf", i.filterTemplate)("ngIfElse", e);
        }
      }
      function b7(t, n) {
        1 & t && j(0);
      }
      const qT = function (t, n) {
        return { $implicit: t, options: n };
      };
      function C7(t, n) {
        if ((1 & t && f(0, b7, 1, 0, "ng-container", 13), 2 & t)) {
          const e = n.$implicit,
            i = n.options;
          p(2),
            d("ngTemplateOutlet", rt(9))(
              "ngTemplateOutletContext",
              Ze(2, qT, e, i)
            );
        }
      }
      function w7(t, n) {
        1 & t && j(0);
      }
      function T7(t, n) {
        if ((1 & t && f(0, w7, 1, 0, "ng-container", 13), 2 & t)) {
          const e = n.options;
          d("ngTemplateOutlet", p(4).loaderTemplate)(
            "ngTemplateOutletContext",
            Q(2, KT, e)
          );
        }
      }
      function S7(t, n) {
        1 & t && (H(0), f(1, T7, 1, 4, "ng-template", 44), z());
      }
      function I7(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-scroller", 42, 43),
            A("onLazyLoad", function (o) {
              return T(e), S(p(2).onLazyLoad.emit(o));
            }),
            f(2, C7, 1, 5, "ng-template", 9),
            f(3, S7, 2, 0, "ng-container", 4),
            v();
        }
        if (2 & t) {
          const e = p(2);
          bt(Q(8, Ea, e.scrollHeight)),
            d("items", e.visibleOptions())(
              "itemSize",
              e.virtualScrollItemSize || e._itemSize
            )("autoSize", !0)("lazy", e.lazy)(
              "options",
              e.virtualScrollOptions
            ),
            g(3),
            d("ngIf", e.loaderTemplate);
        }
      }
      function D7(t, n) {
        1 & t && j(0);
      }
      const E7 = function () {
        return {};
      };
      function x7(t, n) {
        if ((1 & t && (H(0), f(1, D7, 1, 0, "ng-container", 13), z()), 2 & t)) {
          p();
          const e = rt(9),
            i = p();
          g(1),
            d("ngTemplateOutlet", e)(
              "ngTemplateOutletContext",
              Ze(3, qT, i.visibleOptions(), An(2, E7))
            );
        }
      }
      function M7(t, n) {
        if ((1 & t && (y(0, "span"), B(1), v()), 2 & t)) {
          const e = p(2).$implicit,
            i = p(3);
          g(1), Le(i.getOptionGroupLabel(e.optionGroup));
        }
      }
      function O7(t, n) {
        1 & t && j(0);
      }
      function A7(t, n) {
        if (
          (1 & t &&
            (H(0),
            y(1, "li", 49),
            f(2, M7, 2, 1, "span", 4),
            f(3, O7, 1, 0, "ng-container", 13),
            v(),
            z()),
          2 & t)
        ) {
          const e = p(),
            i = e.index,
            o = e.$implicit,
            r = p().options,
            s = p(2);
          g(1),
            d("ngStyle", Q(5, Ea, r.itemSize + "px")),
            x("id", s.id + "_" + s.getOptionIndex(i, r)),
            g(1),
            d("ngIf", !s.groupTemplate),
            g(1),
            d("ngTemplateOutlet", s.groupTemplate)(
              "ngTemplateOutletContext",
              Q(7, cg, o.optionGroup)
            );
        }
      }
      function k7(t, n) {
        if (1 & t) {
          const e = N();
          H(0),
            y(1, "p-dropdownItem", 50),
            A("onClick", function (o) {
              T(e);
              const r = p().$implicit;
              return S(p(3).onOptionSelect(o, r));
            })("onMouseEnter", function (o) {
              T(e);
              const r = p().index,
                s = p().options,
                a = p(2);
              return S(a.onOptionMouseEnter(o, a.getOptionIndex(r, s)));
            }),
            v(),
            z();
        }
        if (2 & t) {
          const e = p(),
            i = e.index,
            o = e.$implicit,
            r = p().options,
            s = p(2);
          g(1),
            d("id", s.id + "_" + s.getOptionIndex(i, r))("option", o)(
              "selected",
              s.isSelected(o)
            )("label", s.getOptionLabel(o))("disabled", s.isOptionDisabled(o))(
              "template",
              s.itemTemplate
            )("focused", s.focusedOptionIndex() === s.getOptionIndex(i, r))(
              "ariaPosInset",
              s.getAriaPosInset(s.getOptionIndex(i, r))
            )("ariaSetSize", s.ariaSetSize);
        }
      }
      function R7(t, n) {
        if (
          (1 & t &&
            (f(0, A7, 4, 9, "ng-container", 4),
            f(1, k7, 2, 9, "ng-container", 4)),
          2 & t)
        ) {
          const e = n.$implicit;
          d("ngIf", e.group), g(1), d("ngIf", !e.group);
        }
      }
      function F7(t, n) {
        if ((1 & t && (H(0), B(1), z()), 2 & t)) {
          const e = p(4);
          g(1), we(" ", e.emptyFilterMessageLabel, " ");
        }
      }
      function L7(t, n) {
        1 & t && j(0, null, 52);
      }
      function P7(t, n) {
        if (
          (1 & t &&
            (y(0, "li", 51),
            f(1, F7, 2, 1, "ng-container", 12),
            f(2, L7, 2, 0, "ng-container", 21),
            v()),
          2 & t)
        ) {
          const e = p().options,
            i = p(2);
          d("ngStyle", Q(4, Ea, e.itemSize + "px")),
            g(1),
            d("ngIf", !i.emptyFilterTemplate && !i.emptyTemplate)(
              "ngIfElse",
              i.emptyFilter
            ),
            g(1),
            d("ngTemplateOutlet", i.emptyFilterTemplate || i.emptyTemplate);
        }
      }
      function N7(t, n) {
        if ((1 & t && (H(0), B(1), z()), 2 & t)) {
          const e = p(4);
          g(1), we(" ", e.emptyMessageLabel, " ");
        }
      }
      function V7(t, n) {
        1 & t && j(0, null, 53);
      }
      function B7(t, n) {
        if (
          (1 & t &&
            (y(0, "li", 51),
            f(1, N7, 2, 1, "ng-container", 12),
            f(2, V7, 2, 0, "ng-container", 21),
            v()),
          2 & t)
        ) {
          const e = p().options,
            i = p(2);
          d("ngStyle", Q(4, Ea, e.itemSize + "px")),
            g(1),
            d("ngIf", !i.emptyTemplate)("ngIfElse", i.empty),
            g(1),
            d("ngTemplateOutlet", i.emptyTemplate);
        }
      }
      function H7(t, n) {
        if (
          (1 & t &&
            (y(0, "ul", 45, 46),
            f(2, R7, 2, 2, "ng-template", 47),
            f(3, P7, 3, 6, "li", 48),
            f(4, B7, 3, 6, "li", 48),
            v()),
          2 & t)
        ) {
          const e = n.$implicit,
            i = n.options,
            o = p(2);
          bt(i.contentStyle),
            d("ngClass", i.contentStyleClass),
            x("id", o.id + "_list"),
            g(2),
            d("ngForOf", e),
            g(1),
            d("ngIf", o.filterValue && o.isEmpty()),
            g(1),
            d("ngIf", !o.filterValue && o.isEmpty());
        }
      }
      function z7(t, n) {
        1 & t && j(0);
      }
      function $7(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 27)(1, "span", 28, 29),
            A("focus", function (o) {
              return T(e), S(p().onFirstHiddenFocus(o));
            }),
            v(),
            f(3, d7, 1, 0, "ng-container", 21),
            f(4, v7, 4, 2, "div", 30),
            y(5, "div", 31),
            f(6, I7, 4, 10, "p-scroller", 32),
            f(7, x7, 2, 6, "ng-container", 4),
            f(8, H7, 5, 7, "ng-template", null, 33, Yt),
            v(),
            f(10, z7, 1, 0, "ng-container", 21),
            y(11, "span", 28, 34),
            A("focus", function (o) {
              return T(e), S(p().onLastHiddenFocus(o));
            }),
            v()();
        }
        if (2 & t) {
          const e = p();
          ne(e.panelStyleClass),
            d("ngClass", "p-dropdown-panel p-component")(
              "ngStyle",
              e.panelStyle
            ),
            g(1),
            x("aria-hidden", !0)("tabindex", 0)("data-p-hidden-accessible", !0)(
              "data-p-hidden-focusable",
              !0
            ),
            g(2),
            d("ngTemplateOutlet", e.headerTemplate),
            g(1),
            d("ngIf", e.filter),
            g(1),
            Lr(
              "max-height",
              e.virtualScroll ? "auto" : e.scrollHeight || "auto"
            ),
            g(1),
            d("ngIf", e.virtualScroll),
            g(1),
            d("ngIf", !e.virtualScroll),
            g(3),
            d("ngTemplateOutlet", e.footerTemplate),
            g(1),
            x("aria-hidden", !0)("tabindex", 0)("data-p-hidden-accessible", !0)(
              "data-p-hidden-focusable",
              !0
            );
        }
      }
      const j7 = { provide: Rt, useExisting: Te(() => gu), multi: !0 };
      let U7 = (() => {
          class t {
            id;
            option;
            selected;
            focused;
            label;
            disabled;
            visible;
            itemSize;
            ariaPosInset;
            ariaSetSize;
            template;
            onClick = new L();
            onMouseEnter = new L();
            ngOnInit() {}
            onOptionClick(e) {
              this.onClick.emit(e);
            }
            onOptionMouseEnter(e) {
              this.onMouseEnter.emit(e);
            }
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-dropdownItem"]],
              hostAttrs: [1, "p-element"],
              inputs: {
                id: "id",
                option: "option",
                selected: "selected",
                focused: "focused",
                label: "label",
                disabled: "disabled",
                visible: "visible",
                itemSize: "itemSize",
                ariaPosInset: "ariaPosInset",
                ariaSetSize: "ariaSetSize",
                template: "template",
              },
              outputs: { onClick: "onClick", onMouseEnter: "onMouseEnter" },
              decls: 3,
              vars: 21,
              consts: [
                [
                  "role",
                  "option",
                  "pRipple",
                  "",
                  3,
                  "id",
                  "ngStyle",
                  "ngClass",
                  "click",
                  "mouseenter",
                ],
                [4, "ngIf"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
              ],
              template: function (i, o) {
                1 & i &&
                  (y(0, "li", 0),
                  A("click", function (s) {
                    return o.onOptionClick(s);
                  })("mouseenter", function (s) {
                    return o.onOptionMouseEnter(s);
                  }),
                  f(1, P5, 2, 1, "span", 1),
                  f(2, N5, 1, 0, "ng-container", 2),
                  v()),
                  2 & i &&
                    (d("id", o.id)("ngStyle", Q(13, Ea, o.itemSize + "px"))(
                      "ngClass",
                      kn(15, V5, o.selected, o.disabled, o.focused)
                    ),
                    x("aria-label", o.label)("aria-setsize", o.ariaSetSize)(
                      "aria-posinset",
                      o.ariaPosInset
                    )("aria-selected", o.selected)("data-p-focused", o.focused)(
                      "data-p-highlight",
                      o.selected
                    )("data-p-disabled", o.disabled),
                    g(1),
                    d("ngIf", !o.template),
                    g(1),
                    d("ngTemplateOutlet", o.template)(
                      "ngTemplateOutletContext",
                      Q(19, cg, o.option)
                    ));
              },
              dependencies: [Bt, wt, St, Xt, Ao],
              encapsulation: 2,
            });
          }
          return t;
        })(),
        gu = (() => {
          class t {
            el;
            renderer;
            cd;
            zone;
            filterService;
            config;
            id;
            scrollHeight = "200px";
            filter;
            name;
            style;
            panelStyle;
            styleClass;
            panelStyleClass;
            readonly;
            required;
            editable;
            appendTo;
            tabindex = 0;
            placeholder;
            filterPlaceholder;
            filterLocale;
            inputId;
            dataKey;
            filterBy;
            filterFields;
            autofocus;
            resetFilterOnHide = !1;
            dropdownIcon;
            optionLabel;
            optionValue;
            optionDisabled;
            optionGroupLabel = "label";
            optionGroupChildren = "items";
            autoDisplayFirst = !0;
            group;
            showClear;
            emptyFilterMessage = "";
            emptyMessage = "";
            lazy = !1;
            virtualScroll;
            virtualScrollItemSize;
            virtualScrollOptions;
            overlayOptions;
            ariaFilterLabel;
            ariaLabel;
            ariaLabelledBy;
            filterMatchMode = "contains";
            maxlength;
            tooltip = "";
            tooltipPosition = "right";
            tooltipPositionStyle = "absolute";
            tooltipStyleClass;
            focusOnHover = !1;
            selectOnFocus = !1;
            autoOptionFocus = !0;
            autofocusFilter = !0;
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && ((this.focused = !1), this.overlayVisible && this.hide()),
                (this._disabled = e),
                this.cd.destroyed || this.cd.detectChanges();
            }
            get itemSize() {
              return this._itemSize;
            }
            set itemSize(e) {
              (this._itemSize = e),
                console.warn(
                  "The itemSize property is deprecated, use virtualScrollItemSize property instead."
                );
            }
            _itemSize;
            get autoZIndex() {
              return this._autoZIndex;
            }
            set autoZIndex(e) {
              (this._autoZIndex = e),
                console.warn(
                  "The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead."
                );
            }
            _autoZIndex;
            get baseZIndex() {
              return this._baseZIndex;
            }
            set baseZIndex(e) {
              (this._baseZIndex = e),
                console.warn(
                  "The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead."
                );
            }
            _baseZIndex;
            get showTransitionOptions() {
              return this._showTransitionOptions;
            }
            set showTransitionOptions(e) {
              (this._showTransitionOptions = e),
                console.warn(
                  "The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead."
                );
            }
            _showTransitionOptions;
            get hideTransitionOptions() {
              return this._hideTransitionOptions;
            }
            set hideTransitionOptions(e) {
              (this._hideTransitionOptions = e),
                console.warn(
                  "The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead."
                );
            }
            _hideTransitionOptions;
            get filterValue() {
              return this._filterValue();
            }
            set filterValue(e) {
              this._filterValue.set(e);
            }
            get options() {
              return this._options();
            }
            set options(e) {
              this._options.set(e);
            }
            onChange = new L();
            onFilter = new L();
            onFocus = new L();
            onBlur = new L();
            onClick = new L();
            onShow = new L();
            onHide = new L();
            onClear = new L();
            onLazyLoad = new L();
            containerViewChild;
            filterViewChild;
            focusInputViewChild;
            editableInputViewChild;
            itemsViewChild;
            scroller;
            overlayViewChild;
            firstHiddenFocusableElementOnOverlay;
            lastHiddenFocusableElementOnOverlay;
            templates;
            _disabled;
            itemsWrapper;
            itemTemplate;
            groupTemplate;
            loaderTemplate;
            selectedItemTemplate;
            headerTemplate;
            filterTemplate;
            footerTemplate;
            emptyFilterTemplate;
            emptyTemplate;
            dropdownIconTemplate;
            clearIconTemplate;
            filterIconTemplate;
            filterOptions;
            _options = yi(null);
            modelValue = yi(null);
            value;
            onModelChange = () => {};
            onModelTouched = () => {};
            hover;
            focused;
            overlayVisible;
            optionsChanged;
            panel;
            dimensionsUpdated;
            hoveredItem;
            selectedOptionUpdated;
            _filterValue = yi(null);
            searchValue;
            searchIndex;
            searchTimeout;
            previousSearchChar;
            currentSearchChar;
            preventModelTouched;
            focusedOptionIndex = yi(-1);
            labelId;
            listId;
            get emptyMessageLabel() {
              return (
                this.emptyMessage ||
                this.config.getTranslation(lt.EMPTY_MESSAGE)
              );
            }
            get emptyFilterMessageLabel() {
              return (
                this.emptyFilterMessage ||
                this.config.getTranslation(lt.EMPTY_FILTER_MESSAGE)
              );
            }
            get filled() {
              return "string" == typeof this.modelValue()
                ? !!this.modelValue()
                : this.modelValue() ||
                    null != this.modelValue() ||
                    null != this.modelValue();
            }
            get isVisibleClearIcon() {
              return (
                null != this.modelValue() &&
                P.isNotEmpty(this.modelValue()) &&
                "" !== this.modelValue() &&
                this.showClear &&
                !this.disabled
              );
            }
            get containerClass() {
              return {
                "p-dropdown p-component p-inputwrapper": !0,
                "p-disabled": this.disabled,
                "p-dropdown-clearable": this.showClear && !this.disabled,
                "p-focus": this.focused,
                "p-inputwrapper-filled": this.modelValue(),
                "p-inputwrapper-focus": this.focused || this.overlayVisible,
              };
            }
            get inputClass() {
              const e = this.label();
              return {
                "p-dropdown-label p-inputtext": !0,
                "p-placeholder": this.placeholder && e === this.placeholder,
                "p-dropdown-label-empty": !(
                  this.editable ||
                  this.selectedItemTemplate ||
                  (e && "p-emptylabel" !== e && 0 !== e.length)
                ),
              };
            }
            get panelClass() {
              return {
                "p-dropdown-panel p-component": !0,
                "p-input-filled": "filled" === this.config.inputStyle,
                "p-ripple-disabled": !1 === this.config.ripple,
              };
            }
            visibleOptions = Es(() => {
              const e = this.group
                ? this.flatOptions(this.options)
                : this.options || [];
              if (this._filterValue()) {
                const i =
                  this.filterBy || this.filterFields || this.optionValue
                    ? this.filterService.filter(
                        e,
                        this.searchFields(),
                        this._filterValue(),
                        this.filterMatchMode,
                        this.filterLocale
                      )
                    : this.options.filter(
                        (o) =>
                          -1 !==
                          o
                            .toLowerCase()
                            .indexOf(this._filterValue().toLowerCase())
                      );
                if (this.group) {
                  const r = [];
                  return (
                    (this.options || []).forEach((s) => {
                      const l = this.getOptionGroupChildren(s).filter((c) =>
                        i.includes(c)
                      );
                      l.length > 0 &&
                        r.push({
                          ...s,
                          ["string" == typeof this.optionGroupChildren
                            ? this.optionGroupChildren
                            : "items"]: [...l],
                        });
                    }),
                    this.flatOptions(r)
                  );
                }
                return i;
              }
              return e;
            });
            label = Es(() => {
              const e = this.findSelectedOptionIndex();
              return -1 !== e
                ? this.getOptionLabel(this.visibleOptions()[e])
                : this.placeholder || "p-emptylabel";
            });
            selectedOption;
            constructor(e, i, o, r, s, a) {
              (this.el = e),
                (this.renderer = i),
                (this.cd = o),
                (this.zone = r),
                (this.filterService = s),
                (this.config = a),
                ah(() => {
                  const l = this.modelValue(),
                    c = this.visibleOptions();
                  l && this.editable && this.updateEditableLabel(),
                    c &&
                      P.isNotEmpty(c) &&
                      (this.selectedOption = c[this.findSelectedOptionIndex()]);
                });
            }
            ngOnInit() {
              (this.id = this.id || zt()),
                this.autoUpdateModel(),
                this.filterBy &&
                  (this.filterOptions = {
                    filter: (e) => this.onFilterInputChange(e),
                    reset: () => this.resetFilter(),
                  });
            }
            ngAfterViewChecked() {
              if (
                (this.optionsChanged &&
                  this.overlayVisible &&
                  ((this.optionsChanged = !1),
                  this.zone.runOutsideAngular(() => {
                    setTimeout(() => {
                      this.overlayViewChild &&
                        this.overlayViewChild.alignOverlay();
                    }, 1);
                  })),
                this.selectedOptionUpdated && this.itemsWrapper)
              ) {
                let e = w.findSingle(
                  this.overlayViewChild?.overlayViewChild?.nativeElement,
                  "li.p-highlight"
                );
                e && w.scrollInView(this.itemsWrapper, e),
                  (this.selectedOptionUpdated = !1);
              }
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "item":
                  default:
                    this.itemTemplate = e.template;
                    break;
                  case "selectedItem":
                    this.selectedItemTemplate = e.template;
                    break;
                  case "header":
                    this.headerTemplate = e.template;
                    break;
                  case "filter":
                    this.filterTemplate = e.template;
                    break;
                  case "footer":
                    this.footerTemplate = e.template;
                    break;
                  case "emptyfilter":
                    this.emptyFilterTemplate = e.template;
                    break;
                  case "empty":
                    this.emptyTemplate = e.template;
                    break;
                  case "group":
                    this.groupTemplate = e.template;
                    break;
                  case "loader":
                    this.loaderTemplate = e.template;
                    break;
                  case "dropdownicon":
                    this.dropdownIconTemplate = e.template;
                    break;
                  case "clearicon":
                    this.clearIconTemplate = e.template;
                    break;
                  case "filtericon":
                    this.filterIconTemplate = e.template;
                }
              });
            }
            flatOptions(e) {
              return (e || []).reduce((i, o, r) => {
                i.push({ optionGroup: o, group: !0, index: r });
                const s = this.getOptionGroupChildren(o);
                return s && s.forEach((a) => i.push(a)), i;
              }, []);
            }
            autoUpdateModel() {
              if (
                (this.selectOnFocus &&
                  this.autoOptionFocus &&
                  !this.hasSelectedOption() &&
                  (this.focusedOptionIndex.set(
                    this.findFirstFocusedOptionIndex()
                  ),
                  this.onOptionSelect(
                    null,
                    this.visibleOptions()[this.focusedOptionIndex()],
                    !1
                  )),
                this.autoDisplayFirst && !this.modelValue())
              ) {
                const e = this.findFirstOptionIndex();
                this.onOptionSelect(null, this.visibleOptions()[e], !1, !0);
              }
            }
            onOptionSelect(e, i, o = !0, r = !1) {
              const s = this.getOptionValue(i);
              this.updateModel(s, e),
                this.focusedOptionIndex.set(this.findSelectedOptionIndex()),
                o && this.hide(!0),
                !1 === r && this.onChange.emit({ originalEvent: e, value: s });
            }
            onOptionMouseEnter(e, i) {
              this.focusOnHover && this.changeFocusedOptionIndex(e, i);
            }
            updateModel(e, i) {
              (this.value = e),
                this.onModelChange(e),
                this.modelValue.set(e),
                (this.selectedOptionUpdated = !0);
            }
            writeValue(e) {
              this.filter && this.resetFilter(),
                (this.value = e),
                this.allowModelChange() && this.onModelChange(e),
                this.modelValue.set(this.value),
                this.updateEditableLabel(),
                this.cd.markForCheck();
            }
            allowModelChange() {
              return (
                this.autoDisplayFirst &&
                !this.placeholder &&
                !this.modelValue() &&
                !this.editable &&
                this.options &&
                this.options.length
              );
            }
            isSelected(e) {
              return (
                this.isValidOption(e) &&
                P.equals(
                  this.modelValue(),
                  this.getOptionValue(e),
                  this.equalityKey()
                )
              );
            }
            ngAfterViewInit() {
              this.editable && this.updateEditableLabel();
            }
            updateEditableLabel() {
              this.editableInputViewChild &&
                (this.editableInputViewChild.nativeElement.value =
                  void 0 === this.getOptionLabel(this.modelValue())
                    ? this.editableInputViewChild.nativeElement.value
                    : this.getOptionLabel(this.modelValue()));
            }
            getOptionIndex(e, i) {
              return this.virtualScrollerDisabled
                ? e
                : i && i.getItemOptions(e).index;
            }
            getOptionLabel(e) {
              return this.optionLabel
                ? P.resolveFieldData(e, this.optionLabel)
                : e && void 0 !== e.label
                ? e.label
                : e;
            }
            getOptionValue(e) {
              return this.optionValue
                ? P.resolveFieldData(e, this.optionValue)
                : !this.optionLabel && e && void 0 !== e.value
                ? e.value
                : e;
            }
            isOptionDisabled(e) {
              return this.optionDisabled
                ? P.resolveFieldData(e, this.optionDisabled)
                : !(!e || void 0 === e.disabled) && e.disabled;
            }
            getOptionGroupLabel(e) {
              return this.optionGroupLabel
                ? P.resolveFieldData(e, this.optionGroupLabel)
                : e && void 0 !== e.label
                ? e.label
                : e;
            }
            getOptionGroupChildren(e) {
              return this.optionGroupChildren
                ? P.resolveFieldData(e, this.optionGroupChildren)
                : e.items;
            }
            getAriaPosInset(e) {
              return (
                (this.optionGroupLabel
                  ? e -
                    this.visibleOptions()
                      .slice(0, e)
                      .filter((i) => this.isOptionGroup(i)).length
                  : e) + 1
              );
            }
            get ariaSetSize() {
              return this.visibleOptions().filter((e) => !this.isOptionGroup(e))
                .length;
            }
            resetFilter() {
              this._filterValue.set(null),
                this.filterViewChild &&
                  this.filterViewChild.nativeElement &&
                  (this.filterViewChild.nativeElement.value = "");
            }
            registerOnChange(e) {
              this.onModelChange = e;
            }
            registerOnTouched(e) {
              this.onModelTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e), this.cd.markForCheck();
            }
            onContainerClick(e) {
              this.disabled ||
                this.readonly ||
                (this.focusInputViewChild?.nativeElement.focus({
                  preventScroll: !0,
                }),
                "INPUT" !== e.target.tagName &&
                  "clearicon" !== e.target.getAttribute("data-pc-section") &&
                  !e.target.closest('[data-pc-section="clearicon"]') &&
                  ((!this.overlayViewChild ||
                    !this.overlayViewChild.el.nativeElement.contains(
                      e.target
                    )) &&
                    (this.overlayVisible ? this.hide(!0) : this.show(!0)),
                  this.onClick.emit(e),
                  this.cd.detectChanges()));
            }
            isEmpty() {
              return (
                !this._options() ||
                (this._options() && 0 === this._options().length)
              );
            }
            onEditableInput(e) {
              const i = e.target.value;
              (this.searchValue = ""),
                !this.searchOptions(e, i) && this.focusedOptionIndex.set(-1),
                this.onModelChange(i),
                this.updateModel(i, e),
                this.onChange.emit({ originalEvent: e, value: i });
            }
            show(e) {
              this.overlayVisible = !0;
              const i =
                -1 !== this.focusedOptionIndex()
                  ? this.focusedOptionIndex()
                  : this.autoOptionFocus
                  ? this.findFirstFocusedOptionIndex()
                  : -1;
              this.focusedOptionIndex.set(i),
                e && w.focus(this.focusInputViewChild?.nativeElement),
                this.cd.markForCheck();
            }
            onOverlayAnimationStart(e) {
              if ("visible" === e.toState) {
                if (
                  ((this.itemsWrapper = w.findSingle(
                    this.overlayViewChild?.overlayViewChild?.nativeElement,
                    this.virtualScroll
                      ? ".p-scroller"
                      : ".p-dropdown-items-wrapper"
                  )),
                  this.virtualScroll &&
                    this.scroller?.setContentEl(
                      this.itemsViewChild?.nativeElement
                    ),
                  this.options && this.options.length)
                )
                  if (this.virtualScroll) {
                    const i = this.modelValue()
                      ? this.focusedOptionIndex()
                      : -1;
                    -1 !== i && this.scroller?.scrollToIndex(i);
                  } else {
                    let i = w.findSingle(
                      this.itemsWrapper,
                      ".p-dropdown-item.p-highlight"
                    );
                    i &&
                      i.scrollIntoView({ block: "nearest", inline: "nearest" });
                  }
                this.filterViewChild &&
                  this.filterViewChild.nativeElement &&
                  ((this.preventModelTouched = !0),
                  this.autofocusFilter &&
                    this.filterViewChild.nativeElement.focus()),
                  this.onShow.emit(e);
              }
              "void" === e.toState &&
                ((this.itemsWrapper = null),
                this.onModelTouched(),
                this.onHide.emit(e));
            }
            hide(e) {
              (this.overlayVisible = !1),
                this.focusedOptionIndex.set(-1),
                this.filter && this.resetFilterOnHide && this.resetFilter(),
                e && w.focus(this.focusInputViewChild?.nativeElement),
                this.cd.markForCheck();
            }
            onInputFocus(e) {
              if (this.disabled) return;
              this.focused = !0;
              const i =
                -1 !== this.focusedOptionIndex()
                  ? this.focusedOptionIndex()
                  : this.overlayVisible && this.autoOptionFocus
                  ? this.findFirstFocusedOptionIndex()
                  : -1;
              this.focusedOptionIndex.set(i),
                this.overlayVisible &&
                  this.scrollInView(this.focusedOptionIndex()),
                this.onFocus.emit(e);
            }
            onInputBlur(e) {
              (this.focused = !1),
                !1 === this.overlayVisible && this.onBlur.emit(e),
                this.preventModelTouched || this.onModelTouched(),
                (this.preventModelTouched = !1);
            }
            onKeyDown(e, i) {
              if (!this.disabled && !this.readonly)
                switch (e.code) {
                  case "ArrowDown":
                    this.onArrowDownKey(e);
                    break;
                  case "ArrowUp":
                    this.onArrowUpKey(e, this.editable);
                    break;
                  case "ArrowLeft":
                  case "ArrowRight":
                    this.onArrowLeftKey(e, this.editable);
                    break;
                  case "Delete":
                    this.onDeleteKey(e);
                    break;
                  case "Home":
                    this.onHomeKey(e, this.editable);
                    break;
                  case "End":
                    this.onEndKey(e, this.editable);
                    break;
                  case "PageDown":
                    this.onPageDownKey(e);
                    break;
                  case "PageUp":
                    this.onPageUpKey(e);
                    break;
                  case "Space":
                    this.onSpaceKey(e, i);
                    break;
                  case "Enter":
                  case "NumpadEnter":
                    this.onEnterKey(e);
                    break;
                  case "Escape":
                    this.onEscapeKey(e);
                    break;
                  case "Tab":
                    this.onTabKey(e);
                    break;
                  case "Backspace":
                    this.onBackspaceKey(e, this.editable);
                    break;
                  case "ShiftLeft":
                  case "ShiftRight":
                    break;
                  default:
                    !e.metaKey &&
                      P.isPrintableCharacter(e.key) &&
                      (!this.overlayVisible && this.show(),
                      !this.editable && this.searchOptions(e, e.key));
                }
            }
            onFilterKeyDown(e) {
              switch (e.code) {
                case "ArrowDown":
                  this.onArrowDownKey(e);
                  break;
                case "ArrowUp":
                  this.onArrowUpKey(e, !0);
                  break;
                case "ArrowLeft":
                case "ArrowRight":
                  this.onArrowLeftKey(e, !0);
                  break;
                case "Home":
                  this.onHomeKey(e, !0);
                  break;
                case "End":
                  this.onEndKey(e, !0);
                  break;
                case "Enter":
                  this.onEnterKey(e);
                  break;
                case "Escape":
                  this.onEscapeKey(e);
                  break;
                case "Tab":
                  this.onTabKey(e, !0);
              }
            }
            onFilterBlur(e) {
              this.focusedOptionIndex.set(-1);
            }
            onArrowDownKey(e) {
              const i =
                -1 !== this.focusedOptionIndex()
                  ? this.findNextOptionIndex(this.focusedOptionIndex())
                  : this.findFirstFocusedOptionIndex();
              this.changeFocusedOptionIndex(e, i),
                !this.overlayVisible && this.show(),
                e.preventDefault();
            }
            changeFocusedOptionIndex(e, i) {
              if (
                this.focusedOptionIndex() !== i &&
                (this.focusedOptionIndex.set(i),
                this.scrollInView(),
                this.selectOnFocus)
              ) {
                const o = this.visibleOptions()[i];
                this.onOptionSelect(e, o, !1);
              }
            }
            get virtualScrollerDisabled() {
              return !this.virtualScroll;
            }
            scrollInView(e = -1) {
              if (this.itemsViewChild && this.itemsViewChild.nativeElement) {
                const o = w.findSingle(
                  this.itemsViewChild.nativeElement,
                  `li[id="${
                    -1 !== e ? `${this.id}_${e}` : this.focusedOptionId
                  }"]`
                );
                o
                  ? o.scrollIntoView &&
                    o.scrollIntoView({ block: "nearest", inline: "nearest" })
                  : this.virtualScrollerDisabled ||
                    setTimeout(() => {
                      this.virtualScroll &&
                        this.scroller?.scrollToIndex(
                          -1 !== e ? e : this.focusedOptionIndex()
                        );
                    }, 0);
              }
            }
            get focusedOptionId() {
              return -1 !== this.focusedOptionIndex()
                ? `${this.id}_${this.focusedOptionIndex()}`
                : null;
            }
            hasSelectedOption() {
              return P.isNotEmpty(this.modelValue());
            }
            isValidSelectedOption(e) {
              return this.isValidOption(e) && this.isSelected(e);
            }
            equalityKey() {
              return this.optionValue ? null : this.dataKey;
            }
            findFirstFocusedOptionIndex() {
              const e = this.findSelectedOptionIndex();
              return e < 0 ? this.findFirstOptionIndex() : e;
            }
            findFirstOptionIndex() {
              return this.visibleOptions().findIndex((e) =>
                this.isValidOption(e)
              );
            }
            findSelectedOptionIndex() {
              return this.hasSelectedOption()
                ? this.visibleOptions().findIndex((e) =>
                    this.isValidSelectedOption(e)
                  )
                : -1;
            }
            findNextOptionIndex(e) {
              const i =
                e < this.visibleOptions().length - 1
                  ? this.visibleOptions()
                      .slice(e + 1)
                      .findIndex((o) => this.isValidOption(o))
                  : -1;
              return i > -1 ? i + e + 1 : e;
            }
            findPrevOptionIndex(e) {
              const i =
                e > 0
                  ? P.findLastIndex(this.visibleOptions().slice(0, e), (o) =>
                      this.isValidOption(o)
                    )
                  : -1;
              return i > -1 ? i : e;
            }
            findLastOptionIndex() {
              return P.findLastIndex(this.visibleOptions(), (e) =>
                this.isValidOption(e)
              );
            }
            findLastFocusedOptionIndex() {
              const e = this.findSelectedOptionIndex();
              return e < 0 ? this.findLastOptionIndex() : e;
            }
            isValidOption(e) {
              return e && !(this.isOptionDisabled(e) || this.isOptionGroup(e));
            }
            isOptionGroup(e) {
              return this.optionGroupLabel && e.optionGroup && e.group;
            }
            onArrowUpKey(e, i = !1) {
              if (e.altKey && !i) {
                if (-1 !== this.focusedOptionIndex()) {
                  const o = this.visibleOptions()[this.focusedOptionIndex()];
                  this.onOptionSelect(e, o);
                }
                this.overlayVisible && this.hide(), e.preventDefault();
              } else {
                const o =
                  -1 !== this.focusedOptionIndex()
                    ? this.findPrevOptionIndex(this.focusedOptionIndex())
                    : this.findLastFocusedOptionIndex();
                this.changeFocusedOptionIndex(e, o),
                  !this.overlayVisible && this.show(),
                  e.preventDefault();
              }
            }
            onArrowLeftKey(e, i = !1) {
              i && this.focusedOptionIndex.set(-1);
            }
            onDeleteKey(e) {
              this.showClear && (this.clear(e), e.preventDefault());
            }
            onHomeKey(e, i = !1) {
              i
                ? (e.currentTarget.setSelectionRange(0, 0),
                  this.focusedOptionIndex.set(-1))
                : (this.changeFocusedOptionIndex(
                    e,
                    this.findFirstOptionIndex()
                  ),
                  !this.overlayVisible && this.show()),
                e.preventDefault();
            }
            onEndKey(e, i = !1) {
              if (i) {
                const o = e.currentTarget,
                  r = o.value.length;
                o.setSelectionRange(r, r), this.focusedOptionIndex.set(-1);
              } else
                this.changeFocusedOptionIndex(e, this.findLastOptionIndex()),
                  !this.overlayVisible && this.show();
              e.preventDefault();
            }
            onPageDownKey(e) {
              this.scrollInView(this.visibleOptions().length - 1),
                e.preventDefault();
            }
            onPageUpKey(e) {
              this.scrollInView(0), e.preventDefault();
            }
            onSpaceKey(e, i = !1) {
              !i && this.onEnterKey(e);
            }
            onEnterKey(e) {
              if (this.overlayVisible) {
                if (-1 !== this.focusedOptionIndex()) {
                  const i = this.visibleOptions()[this.focusedOptionIndex()];
                  this.onOptionSelect(e, i);
                }
                this.hide();
              } else this.onArrowDownKey(e);
              e.preventDefault();
            }
            onEscapeKey(e) {
              this.overlayVisible && this.hide(!0), e.preventDefault();
            }
            onTabKey(e, i = !1) {
              if (!i)
                if (this.overlayVisible && this.hasFocusableElements())
                  w.focus(
                    e.shiftKey
                      ? this.lastHiddenFocusableElementOnOverlay.nativeElement
                      : this.firstHiddenFocusableElementOnOverlay.nativeElement
                  ),
                    e.preventDefault();
                else {
                  if (-1 !== this.focusedOptionIndex()) {
                    const o = this.visibleOptions()[this.focusedOptionIndex()];
                    this.onOptionSelect(e, o);
                  }
                  this.overlayVisible && this.hide(this.filter);
                }
            }
            onFirstHiddenFocus(e) {
              const i =
                e.relatedTarget === this.focusInputViewChild?.nativeElement
                  ? w.getFirstFocusableElement(
                      this.overlayViewChild.el.nativeElement,
                      ":not(.p-hidden-focusable)"
                    )
                  : this.focusInputViewChild.nativeElement;
              w.focus(i);
            }
            onLastHiddenFocus(e) {
              const i =
                e.relatedTarget === this.focusInputViewChild?.nativeElement
                  ? w.getLastFocusableElement(
                      this.overlayViewChild?.overlayViewChild?.nativeElement,
                      ':not([data-p-hidden-focusable="true"])'
                    )
                  : this.focusInputViewChild?.nativeElement;
              w.focus(i);
            }
            hasFocusableElements() {
              return (
                w.getFocusableElements(
                  this.overlayViewChild.overlayViewChild.nativeElement,
                  ':not([data-p-hidden-focusable="true"])'
                ).length > 0
              );
            }
            onBackspaceKey(e, i = !1) {
              i && !this.overlayVisible && this.show();
            }
            searchFields() {
              return this.filterFields || [this.optionLabel];
            }
            searchOptions(e, i) {
              this.searchValue = (this.searchValue || "") + i;
              let o = -1,
                r = !1;
              return (
                -1 !== this.focusedOptionIndex()
                  ? ((o = this.visibleOptions()
                      .slice(this.focusedOptionIndex())
                      .findIndex((s) => this.isOptionMatched(s))),
                    (o =
                      -1 === o
                        ? this.visibleOptions()
                            .slice(0, this.focusedOptionIndex())
                            .findIndex((s) => this.isOptionMatched(s))
                        : o + this.focusedOptionIndex()))
                  : (o = this.visibleOptions().findIndex((s) =>
                      this.isOptionMatched(s)
                    )),
                -1 !== o && (r = !0),
                -1 === o &&
                  -1 === this.focusedOptionIndex() &&
                  (o = this.findFirstFocusedOptionIndex()),
                -1 !== o && this.changeFocusedOptionIndex(e, o),
                this.searchTimeout && clearTimeout(this.searchTimeout),
                (this.searchTimeout = setTimeout(() => {
                  (this.searchValue = ""), (this.searchTimeout = null);
                }, 500)),
                r
              );
            }
            isOptionMatched(e) {
              return (
                this.isValidOption(e) &&
                this.getOptionLabel(e)
                  .toLocaleLowerCase(this.filterLocale)
                  .startsWith(
                    this.searchValue.toLocaleLowerCase(this.filterLocale)
                  )
              );
            }
            onFilterInputChange(e) {
              let i = e.target.value?.trim();
              this._filterValue.set(i),
                this.focusedOptionIndex.set(-1),
                this.onFilter.emit({
                  originalEvent: e,
                  filter: this._filterValue(),
                }),
                !this.virtualScrollerDisabled && this.scroller.scrollToIndex(0),
                this.cd.markForCheck();
            }
            applyFocus() {
              this.editable
                ? w
                    .findSingle(
                      this.el.nativeElement,
                      ".p-dropdown-label.p-inputtext"
                    )
                    .focus()
                : w
                    .findSingle(this.el.nativeElement, "input[readonly]")
                    .focus();
            }
            focus() {
              this.applyFocus();
            }
            clear(e) {
              this.updateModel(null, e),
                this.updateEditableLabel(),
                this.onChange.emit({ originalEvent: e, value: this.value }),
                this.onClear.emit(e);
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Fe), D(Tt), D(Ct), D(_e), D(uu), D(Ri));
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-dropdown"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              viewQuery: function (i, o) {
                if (
                  (1 & i &&
                    (me(B5, 5),
                    me(H5, 5),
                    me(z5, 5),
                    me($5, 5),
                    me(j5, 5),
                    me(U5, 5),
                    me(G5, 5),
                    me(W5, 5),
                    me(K5, 5)),
                  2 & i)
                ) {
                  let r;
                  J((r = X())) && (o.containerViewChild = r.first),
                    J((r = X())) && (o.filterViewChild = r.first),
                    J((r = X())) && (o.focusInputViewChild = r.first),
                    J((r = X())) && (o.editableInputViewChild = r.first),
                    J((r = X())) && (o.itemsViewChild = r.first),
                    J((r = X())) && (o.scroller = r.first),
                    J((r = X())) && (o.overlayViewChild = r.first),
                    J((r = X())) &&
                      (o.firstHiddenFocusableElementOnOverlay = r.first),
                    J((r = X())) &&
                      (o.lastHiddenFocusableElementOnOverlay = r.first);
                }
              },
              hostAttrs: [1, "p-element", "p-inputwrapper"],
              hostVars: 4,
              hostBindings: function (i, o) {
                2 & i &&
                  On("p-inputwrapper-filled", o.filled)(
                    "p-inputwrapper-focus",
                    o.focused || o.overlayVisible
                  );
              },
              inputs: {
                id: "id",
                scrollHeight: "scrollHeight",
                filter: "filter",
                name: "name",
                style: "style",
                panelStyle: "panelStyle",
                styleClass: "styleClass",
                panelStyleClass: "panelStyleClass",
                readonly: "readonly",
                required: "required",
                editable: "editable",
                appendTo: "appendTo",
                tabindex: "tabindex",
                placeholder: "placeholder",
                filterPlaceholder: "filterPlaceholder",
                filterLocale: "filterLocale",
                inputId: "inputId",
                dataKey: "dataKey",
                filterBy: "filterBy",
                filterFields: "filterFields",
                autofocus: "autofocus",
                resetFilterOnHide: "resetFilterOnHide",
                dropdownIcon: "dropdownIcon",
                optionLabel: "optionLabel",
                optionValue: "optionValue",
                optionDisabled: "optionDisabled",
                optionGroupLabel: "optionGroupLabel",
                optionGroupChildren: "optionGroupChildren",
                autoDisplayFirst: "autoDisplayFirst",
                group: "group",
                showClear: "showClear",
                emptyFilterMessage: "emptyFilterMessage",
                emptyMessage: "emptyMessage",
                lazy: "lazy",
                virtualScroll: "virtualScroll",
                virtualScrollItemSize: "virtualScrollItemSize",
                virtualScrollOptions: "virtualScrollOptions",
                overlayOptions: "overlayOptions",
                ariaFilterLabel: "ariaFilterLabel",
                ariaLabel: "ariaLabel",
                ariaLabelledBy: "ariaLabelledBy",
                filterMatchMode: "filterMatchMode",
                maxlength: "maxlength",
                tooltip: "tooltip",
                tooltipPosition: "tooltipPosition",
                tooltipPositionStyle: "tooltipPositionStyle",
                tooltipStyleClass: "tooltipStyleClass",
                focusOnHover: "focusOnHover",
                selectOnFocus: "selectOnFocus",
                autoOptionFocus: "autoOptionFocus",
                autofocusFilter: "autofocusFilter",
                disabled: "disabled",
                itemSize: "itemSize",
                autoZIndex: "autoZIndex",
                baseZIndex: "baseZIndex",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
                filterValue: "filterValue",
                options: "options",
              },
              outputs: {
                onChange: "onChange",
                onFilter: "onFilter",
                onFocus: "onFocus",
                onBlur: "onBlur",
                onClick: "onClick",
                onShow: "onShow",
                onHide: "onHide",
                onClear: "onClear",
                onLazyLoad: "onLazyLoad",
              },
              features: [Ee([j7])],
              decls: 11,
              vars: 20,
              consts: [
                [3, "ngClass", "ngStyle", "click"],
                ["container", ""],
                [
                  "role",
                  "combobox",
                  "pAutoFocus",
                  "",
                  3,
                  "ngClass",
                  "pTooltip",
                  "tooltipPosition",
                  "positionStyle",
                  "tooltipStyleClass",
                  "autofocus",
                  "focus",
                  "blur",
                  "keydown",
                  4,
                  "ngIf",
                ],
                [
                  "type",
                  "text",
                  "aria-haspopup",
                  "listbox",
                  3,
                  "ngClass",
                  "disabled",
                  "input",
                  "keydown",
                  "focus",
                  "blur",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [
                  "role",
                  "button",
                  "aria-label",
                  "dropdown trigger",
                  "aria-haspopup",
                  "listbox",
                  1,
                  "p-dropdown-trigger",
                ],
                ["class", "p-dropdown-trigger-icon", 4, "ngIf"],
                [
                  3,
                  "visible",
                  "options",
                  "target",
                  "appendTo",
                  "autoZIndex",
                  "baseZIndex",
                  "showTransitionOptions",
                  "hideTransitionOptions",
                  "visibleChange",
                  "onAnimationStart",
                  "onHide",
                ],
                ["overlay", ""],
                ["pTemplate", "content"],
                [
                  "role",
                  "combobox",
                  "pAutoFocus",
                  "",
                  3,
                  "ngClass",
                  "pTooltip",
                  "tooltipPosition",
                  "positionStyle",
                  "tooltipStyleClass",
                  "autofocus",
                  "focus",
                  "blur",
                  "keydown",
                ],
                ["focusInput", ""],
                [4, "ngIf", "ngIfElse"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                ["defaultPlaceholder", ""],
                [
                  "type",
                  "text",
                  "aria-haspopup",
                  "listbox",
                  3,
                  "ngClass",
                  "disabled",
                  "input",
                  "keydown",
                  "focus",
                  "blur",
                ],
                ["editableInput", ""],
                [3, "styleClass", "click", 4, "ngIf"],
                ["class", "p-dropdown-clear-icon", 3, "click", 4, "ngIf"],
                [3, "styleClass", "click"],
                [1, "p-dropdown-clear-icon", 3, "click"],
                [4, "ngTemplateOutlet"],
                ["class", "p-dropdown-trigger-icon", 3, "ngClass", 4, "ngIf"],
                [3, "styleClass", 4, "ngIf"],
                [1, "p-dropdown-trigger-icon", 3, "ngClass"],
                [3, "styleClass"],
                [1, "p-dropdown-trigger-icon"],
                [3, "ngClass", "ngStyle"],
                [
                  "role",
                  "presentation",
                  1,
                  "p-hidden-accessible",
                  "p-hidden-focusable",
                  3,
                  "focus",
                ],
                ["firstHiddenFocusableEl", ""],
                ["class", "p-dropdown-header", 3, "click", 4, "ngIf"],
                [1, "p-dropdown-items-wrapper"],
                [
                  3,
                  "items",
                  "style",
                  "itemSize",
                  "autoSize",
                  "lazy",
                  "options",
                  "onLazyLoad",
                  4,
                  "ngIf",
                ],
                ["buildInItems", ""],
                ["lastHiddenFocusableEl", ""],
                [1, "p-dropdown-header", 3, "click"],
                ["builtInFilterElement", ""],
                [1, "p-dropdown-filter-container"],
                [
                  "type",
                  "text",
                  "autocomplete",
                  "off",
                  1,
                  "p-dropdown-filter",
                  "p-inputtext",
                  "p-component",
                  3,
                  "value",
                  "input",
                  "keydown",
                  "blur",
                ],
                ["filter", ""],
                ["class", "p-dropdown-filter-icon", 4, "ngIf"],
                [1, "p-dropdown-filter-icon"],
                [
                  3,
                  "items",
                  "itemSize",
                  "autoSize",
                  "lazy",
                  "options",
                  "onLazyLoad",
                ],
                ["scroller", ""],
                ["pTemplate", "loader"],
                ["role", "listbox", 1, "p-dropdown-items", 3, "ngClass"],
                ["items", ""],
                ["ngFor", "", 3, "ngForOf"],
                ["class", "p-dropdown-empty-message", 3, "ngStyle", 4, "ngIf"],
                ["role", "option", 1, "p-dropdown-item-group", 3, "ngStyle"],
                [
                  3,
                  "id",
                  "option",
                  "selected",
                  "label",
                  "disabled",
                  "template",
                  "focused",
                  "ariaPosInset",
                  "ariaSetSize",
                  "onClick",
                  "onMouseEnter",
                ],
                [1, "p-dropdown-empty-message", 3, "ngStyle"],
                ["emptyFilter", ""],
                ["empty", ""],
              ],
              template: function (i, o) {
                1 & i &&
                  (y(0, "div", 0, 1),
                  A("click", function (s) {
                    return o.onContainerClick(s);
                  }),
                  f(2, J5, 6, 21, "span", 2),
                  f(3, X5, 2, 5, "input", 3),
                  f(4, o7, 3, 2, "ng-container", 4),
                  y(5, "div", 5),
                  f(6, a7, 3, 2, "ng-container", 4),
                  f(7, u7, 2, 1, "span", 6),
                  v(),
                  y(8, "p-overlay", 7, 8),
                  A("visibleChange", function (s) {
                    return (o.overlayVisible = s);
                  })("onAnimationStart", function (s) {
                    return o.onOverlayAnimationStart(s);
                  })("onHide", function () {
                    return o.hide();
                  }),
                  f(10, $7, 13, 19, "ng-template", 9),
                  v()()),
                  2 & i &&
                    (ne(o.styleClass),
                    d("ngClass", o.containerClass)("ngStyle", o.style),
                    x("id", o.id),
                    g(2),
                    d("ngIf", !o.editable),
                    g(1),
                    d("ngIf", o.editable),
                    g(1),
                    d("ngIf", o.isVisibleClearIcon),
                    g(1),
                    x("aria-expanded", o.overlayVisible)(
                      "data-pc-section",
                      "trigger"
                    ),
                    g(1),
                    d("ngIf", !o.dropdownIconTemplate),
                    g(1),
                    d("ngIf", o.dropdownIconTemplate),
                    g(1),
                    d("visible", o.overlayVisible)("options", o.overlayOptions)(
                      "target",
                      "@parent"
                    )("appendTo", o.appendTo)("autoZIndex", o.autoZIndex)(
                      "baseZIndex",
                      o.baseZIndex
                    )("showTransitionOptions", o.showTransitionOptions)(
                      "hideTransitionOptions",
                      o.hideTransitionOptions
                    ));
              },
              dependencies: function () {
                return [Bt, Oi, wt, St, Xt, rg, It, lg, ag, K9, li, qr, fu, U7];
              },
              styles: [
                "@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;opacity:0}input.p-dropdown-label{cursor:default}.p-dropdown .p-dropdown-panel{min-width:100%}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-item-group{cursor:auto}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            });
          }
          return t;
        })(),
        xa = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({
              imports: [pt, pu, ht, hu, Wr, Zr, q9, li, qr, fu, pu, ht, Zr],
            });
          }
          return t;
        })(),
        ZT = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["AngleDownIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M3.58659 4.5007C3.68513 4.50023 3.78277 4.51945 3.87379 4.55723C3.9648 4.59501 4.04735 4.65058 4.11659 4.7207L7.11659 7.7207L10.1166 4.7207C10.2619 4.65055 10.4259 4.62911 10.5843 4.65956C10.7427 4.69002 10.8871 4.77074 10.996 4.88976C11.1049 5.00877 11.1726 5.15973 11.1889 5.32022C11.2052 5.48072 11.1693 5.6422 11.0866 5.7807L7.58659 9.2807C7.44597 9.42115 7.25534 9.50004 7.05659 9.50004C6.85784 9.50004 6.66722 9.42115 6.52659 9.2807L3.02659 5.7807C2.88614 5.64007 2.80725 5.44945 2.80725 5.2507C2.80725 5.05195 2.88614 4.86132 3.02659 4.7207C3.09932 4.64685 3.18675 4.58911 3.28322 4.55121C3.37969 4.51331 3.48305 4.4961 3.58659 4.5007Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        YT = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["AngleUpIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M10.4134 9.49931C10.3148 9.49977 10.2172 9.48055 10.1262 9.44278C10.0352 9.405 9.95263 9.34942 9.88338 9.27931L6.88338 6.27931L3.88338 9.27931C3.73811 9.34946 3.57409 9.3709 3.41567 9.34044C3.25724 9.30999 3.11286 9.22926 3.00395 9.11025C2.89504 8.99124 2.82741 8.84028 2.8111 8.67978C2.79478 8.51928 2.83065 8.35781 2.91338 8.21931L6.41338 4.71931C6.55401 4.57886 6.74463 4.49997 6.94338 4.49997C7.14213 4.49997 7.33276 4.57886 7.47338 4.71931L10.9734 8.21931C11.1138 8.35994 11.1927 8.55056 11.1927 8.74931C11.1927 8.94806 11.1138 9.13868 10.9734 9.27931C10.9007 9.35315 10.8132 9.41089 10.7168 9.44879C10.6203 9.48669 10.5169 9.5039 10.4134 9.49931Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        QT = (() => {
          class t {
            el;
            ngModel;
            cd;
            filled;
            constructor(e, i, o) {
              (this.el = e), (this.ngModel = i), (this.cd = o);
            }
            ngAfterViewInit() {
              this.updateFilledState(), this.cd.detectChanges();
            }
            ngDoCheck() {
              this.updateFilledState();
            }
            onInput() {
              this.updateFilledState();
            }
            updateFilledState() {
              this.filled =
                (this.el.nativeElement.value &&
                  this.el.nativeElement.value.length) ||
                (this.ngModel && this.ngModel.model);
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Fe), D(io, 8), D(Ct));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pInputText", ""]],
              hostAttrs: [1, "p-inputtext", "p-component", "p-element"],
              hostVars: 2,
              hostBindings: function (i, o) {
                1 & i &&
                  A("input", function (s) {
                    return o.onInput(s);
                  }),
                  2 & i && On("p-filled", o.filled);
              },
            });
          }
          return t;
        })(),
        ug = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt] });
          }
          return t;
        })();
      const G7 = ["input"];
      function W7(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "TimesIcon", 8),
            A("click", function () {
              return T(e), S(p(2).clear());
            }),
            v();
        }
        2 & t &&
          (d("ngClass", "p-inputnumber-clear-icon"),
          x("data-pc-section", "clearIcon"));
      }
      function K7(t, n) {}
      function q7(t, n) {
        1 & t && f(0, K7, 0, 0, "ng-template");
      }
      function Z7(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "span", 9),
            A("click", function () {
              return T(e), S(p(2).clear());
            }),
            f(1, q7, 1, 0, null, 10),
            v();
        }
        if (2 & t) {
          const e = p(2);
          x("data-pc-section", "clearIcon"),
            g(1),
            d("ngTemplateOutlet", e.clearIconTemplate);
        }
      }
      function Y7(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, W7, 1, 2, "TimesIcon", 6),
            f(2, Z7, 2, 2, "span", 7),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1),
            d("ngIf", !e.clearIconTemplate),
            g(1),
            d("ngIf", e.clearIconTemplate);
        }
      }
      function Q7(t, n) {
        1 & t && k(0, "span", 14),
          2 & t &&
            (d("ngClass", p(2).incrementButtonIcon),
            x("data-pc-section", "incrementbuttonicon"));
      }
      function J7(t, n) {
        1 & t && k(0, "AngleUpIcon"),
          2 & t && x("data-pc-section", "incrementbuttonicon");
      }
      function X7(t, n) {}
      function e8(t, n) {
        1 & t && f(0, X7, 0, 0, "ng-template");
      }
      function t8(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, J7, 1, 1, "AngleUpIcon", 3),
            f(2, e8, 1, 0, null, 10),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", !e.incrementButtonIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.incrementButtonIconTemplate);
        }
      }
      function n8(t, n) {
        1 & t && k(0, "span", 14),
          2 & t &&
            (d("ngClass", p(2).decrementButtonIcon),
            x("data-pc-section", "decrementbuttonicon"));
      }
      function i8(t, n) {
        1 & t && k(0, "AngleDownIcon"),
          2 & t && x("data-pc-section", "decrementbuttonicon");
      }
      function o8(t, n) {}
      function r8(t, n) {
        1 & t && f(0, o8, 0, 0, "ng-template");
      }
      function s8(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, i8, 1, 1, "AngleDownIcon", 3),
            f(2, r8, 1, 0, null, 10),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", !e.decrementButtonIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.decrementButtonIconTemplate);
        }
      }
      const JT = function () {
          return { "p-inputnumber-button p-inputnumber-button-up": !0 };
        },
        XT = function () {
          return { "p-inputnumber-button p-inputnumber-button-down": !0 };
        };
      function a8(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "span", 11)(1, "button", 12),
            A("mousedown", function (o) {
              return T(e), S(p().onUpButtonMouseDown(o));
            })("mouseup", function () {
              return T(e), S(p().onUpButtonMouseUp());
            })("mouseleave", function () {
              return T(e), S(p().onUpButtonMouseLeave());
            })("keydown", function (o) {
              return T(e), S(p().onUpButtonKeyDown(o));
            })("keyup", function () {
              return T(e), S(p().onUpButtonKeyUp());
            }),
            f(2, Q7, 1, 2, "span", 13),
            f(3, t8, 3, 2, "ng-container", 3),
            v(),
            y(4, "button", 12),
            A("mousedown", function (o) {
              return T(e), S(p().onDownButtonMouseDown(o));
            })("mouseup", function () {
              return T(e), S(p().onDownButtonMouseUp());
            })("mouseleave", function () {
              return T(e), S(p().onDownButtonMouseLeave());
            })("keydown", function (o) {
              return T(e), S(p().onDownButtonKeyDown(o));
            })("keyup", function () {
              return T(e), S(p().onDownButtonKeyUp());
            }),
            f(5, n8, 1, 2, "span", 13),
            f(6, s8, 3, 2, "ng-container", 3),
            v()();
        }
        if (2 & t) {
          const e = p();
          x("data-pc-section", "buttonGroup"),
            g(1),
            ne(e.incrementButtonClass),
            d("ngClass", An(17, JT))("disabled", e.disabled),
            x("aria-hidden", !0)("data-pc-section", "incrementbutton"),
            g(1),
            d("ngIf", e.incrementButtonIcon),
            g(1),
            d("ngIf", !e.incrementButtonIcon),
            g(1),
            ne(e.decrementButtonClass),
            d("ngClass", An(18, XT))("disabled", e.disabled),
            x("aria-hidden", !0)("data-pc-section", e.decrementbutton),
            g(1),
            d("ngIf", e.decrementButtonIcon),
            g(1),
            d("ngIf", !e.decrementButtonIcon);
        }
      }
      function l8(t, n) {
        1 & t && k(0, "span", 14),
          2 & t &&
            (d("ngClass", p(2).incrementButtonIcon),
            x("data-pc-section", "incrementbuttonicon"));
      }
      function c8(t, n) {
        1 & t && k(0, "AngleUpIcon"),
          2 & t && x("data-pc-section", "incrementbuttonicon");
      }
      function u8(t, n) {}
      function d8(t, n) {
        1 & t && f(0, u8, 0, 0, "ng-template");
      }
      function p8(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, c8, 1, 1, "AngleUpIcon", 3),
            f(2, d8, 1, 0, null, 10),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", !e.incrementButtonIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.incrementButtonIconTemplate);
        }
      }
      function h8(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 12),
            A("mousedown", function (o) {
              return T(e), S(p().onUpButtonMouseDown(o));
            })("mouseup", function () {
              return T(e), S(p().onUpButtonMouseUp());
            })("mouseleave", function () {
              return T(e), S(p().onUpButtonMouseLeave());
            })("keydown", function (o) {
              return T(e), S(p().onUpButtonKeyDown(o));
            })("keyup", function () {
              return T(e), S(p().onUpButtonKeyUp());
            }),
            f(1, l8, 1, 2, "span", 13),
            f(2, p8, 3, 2, "ng-container", 3),
            v();
        }
        if (2 & t) {
          const e = p();
          ne(e.incrementButtonClass),
            d("ngClass", An(8, JT))("disabled", e.disabled),
            x("aria-hidden", !0)("data-pc-section", "incrementbutton"),
            g(1),
            d("ngIf", e.incrementButtonIcon),
            g(1),
            d("ngIf", !e.incrementButtonIcon);
        }
      }
      function f8(t, n) {
        1 & t && k(0, "span", 14),
          2 & t &&
            (d("ngClass", p(2).decrementButtonIcon),
            x("data-pc-section", "decrementbuttonicon"));
      }
      function g8(t, n) {
        1 & t && k(0, "AngleDownIcon"),
          2 & t && x("data-pc-section", "decrementbuttonicon");
      }
      function m8(t, n) {}
      function _8(t, n) {
        1 & t && f(0, m8, 0, 0, "ng-template");
      }
      function y8(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, g8, 1, 1, "AngleDownIcon", 3),
            f(2, _8, 1, 0, null, 10),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", !e.decrementButtonIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.decrementButtonIconTemplate);
        }
      }
      function v8(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 12),
            A("mousedown", function (o) {
              return T(e), S(p().onDownButtonMouseDown(o));
            })("mouseup", function () {
              return T(e), S(p().onDownButtonMouseUp());
            })("mouseleave", function () {
              return T(e), S(p().onDownButtonMouseLeave());
            })("keydown", function (o) {
              return T(e), S(p().onDownButtonKeyDown(o));
            })("keyup", function () {
              return T(e), S(p().onDownButtonKeyUp());
            }),
            f(1, f8, 1, 2, "span", 13),
            f(2, y8, 3, 2, "ng-container", 3),
            v();
        }
        if (2 & t) {
          const e = p();
          ne(e.decrementButtonClass),
            d("ngClass", An(8, XT))("disabled", e.disabled),
            x("aria-hidden", !0)("data-pc-section", "decrementbutton"),
            g(1),
            d("ngIf", e.decrementButtonIcon),
            g(1),
            d("ngIf", !e.decrementButtonIcon);
        }
      }
      const b8 = function (t, n, e) {
          return {
            "p-inputnumber p-component": !0,
            "p-inputnumber-buttons-stacked": t,
            "p-inputnumber-buttons-horizontal": n,
            "p-inputnumber-buttons-vertical": e,
          };
        },
        C8 = { provide: Rt, useExisting: Te(() => dg), multi: !0 };
      let dg = (() => {
          class t {
            document;
            el;
            cd;
            injector;
            showButtons = !1;
            format = !0;
            buttonLayout = "stacked";
            inputId;
            styleClass;
            style;
            placeholder;
            size;
            maxlength;
            tabindex;
            title;
            ariaLabelledBy;
            ariaLabel;
            ariaRequired;
            name;
            required;
            autocomplete;
            min;
            max;
            incrementButtonClass;
            decrementButtonClass;
            incrementButtonIcon;
            decrementButtonIcon;
            readonly = !1;
            step = 1;
            allowEmpty = !0;
            locale;
            localeMatcher;
            mode = "decimal";
            currency;
            currencyDisplay;
            useGrouping = !0;
            minFractionDigits;
            maxFractionDigits;
            prefix;
            suffix;
            inputStyle;
            inputStyleClass;
            showClear = !1;
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && (this.focused = !1),
                (this._disabled = e),
                this.timer && this.clearTimer();
            }
            onInput = new L();
            onFocus = new L();
            onBlur = new L();
            onKeyDown = new L();
            onClear = new L();
            input;
            templates;
            clearIconTemplate;
            incrementButtonIconTemplate;
            decrementButtonIconTemplate;
            value;
            onModelChange = () => {};
            onModelTouched = () => {};
            focused;
            initialized;
            groupChar = "";
            prefixChar = "";
            suffixChar = "";
            isSpecialChar;
            timer;
            lastValue;
            _numeral;
            numberFormat;
            _decimal;
            _group;
            _minusSign;
            _currency;
            _prefix;
            _suffix;
            _index;
            _disabled;
            ngControl = null;
            constructor(e, i, o, r) {
              (this.document = e),
                (this.el = i),
                (this.cd = o),
                (this.injector = r);
            }
            ngOnChanges(e) {
              [
                "locale",
                "localeMatcher",
                "mode",
                "currency",
                "currencyDisplay",
                "useGrouping",
                "minFractionDigits",
                "maxFractionDigits",
                "prefix",
                "suffix",
              ].some((o) => !!e[o]) && this.updateConstructParser();
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "clearicon":
                    this.clearIconTemplate = e.template;
                    break;
                  case "incrementbuttonicon":
                    this.incrementButtonIconTemplate = e.template;
                    break;
                  case "decrementbuttonicon":
                    this.decrementButtonIconTemplate = e.template;
                }
              });
            }
            ngOnInit() {
              (this.ngControl = this.injector.get(ai, null, { optional: !0 })),
                this.constructParser(),
                (this.initialized = !0);
            }
            getOptions() {
              return {
                localeMatcher: this.localeMatcher,
                style: this.mode,
                currency: this.currency,
                currencyDisplay: this.currencyDisplay,
                useGrouping: this.useGrouping,
                minimumFractionDigits: this.minFractionDigits,
                maximumFractionDigits: this.maxFractionDigits,
              };
            }
            constructParser() {
              this.numberFormat = new Intl.NumberFormat(
                this.locale,
                this.getOptions()
              );
              const e = [
                  ...new Intl.NumberFormat(this.locale, {
                    useGrouping: !1,
                  }).format(9876543210),
                ].reverse(),
                i = new Map(e.map((o, r) => [o, r]));
              (this._numeral = new RegExp(`[${e.join("")}]`, "g")),
                (this._group = this.getGroupingExpression()),
                (this._minusSign = this.getMinusSignExpression()),
                (this._currency = this.getCurrencyExpression()),
                (this._decimal = this.getDecimalExpression()),
                (this._suffix = this.getSuffixExpression()),
                (this._prefix = this.getPrefixExpression()),
                (this._index = (o) => i.get(o));
            }
            updateConstructParser() {
              this.initialized && this.constructParser();
            }
            escapeRegExp(e) {
              return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
            }
            getDecimalExpression() {
              const e = new Intl.NumberFormat(this.locale, {
                ...this.getOptions(),
                useGrouping: !1,
              });
              return new RegExp(
                `[${e
                  .format(1.1)
                  .replace(this._currency, "")
                  .trim()
                  .replace(this._numeral, "")}]`,
                "g"
              );
            }
            getGroupingExpression() {
              const e = new Intl.NumberFormat(this.locale, { useGrouping: !0 });
              return (
                (this.groupChar = e
                  .format(1e6)
                  .trim()
                  .replace(this._numeral, "")
                  .charAt(0)),
                new RegExp(`[${this.groupChar}]`, "g")
              );
            }
            getMinusSignExpression() {
              const e = new Intl.NumberFormat(this.locale, { useGrouping: !1 });
              return new RegExp(
                `[${e.format(-1).trim().replace(this._numeral, "")}]`,
                "g"
              );
            }
            getCurrencyExpression() {
              if (this.currency) {
                const e = new Intl.NumberFormat(this.locale, {
                  style: "currency",
                  currency: this.currency,
                  currencyDisplay: this.currencyDisplay,
                  minimumFractionDigits: 0,
                  maximumFractionDigits: 0,
                });
                return new RegExp(
                  `[${e
                    .format(1)
                    .replace(/\s/g, "")
                    .replace(this._numeral, "")
                    .replace(this._group, "")}]`,
                  "g"
                );
              }
              return new RegExp("[]", "g");
            }
            getPrefixExpression() {
              if (this.prefix) this.prefixChar = this.prefix;
              else {
                const e = new Intl.NumberFormat(this.locale, {
                  style: this.mode,
                  currency: this.currency,
                  currencyDisplay: this.currencyDisplay,
                });
                this.prefixChar = e.format(1).split("1")[0];
              }
              return new RegExp(
                `${this.escapeRegExp(this.prefixChar || "")}`,
                "g"
              );
            }
            getSuffixExpression() {
              if (this.suffix) this.suffixChar = this.suffix;
              else {
                const e = new Intl.NumberFormat(this.locale, {
                  style: this.mode,
                  currency: this.currency,
                  currencyDisplay: this.currencyDisplay,
                  minimumFractionDigits: 0,
                  maximumFractionDigits: 0,
                });
                this.suffixChar = e.format(1).split("1")[1];
              }
              return new RegExp(
                `${this.escapeRegExp(this.suffixChar || "")}`,
                "g"
              );
            }
            formatValue(e) {
              if (null != e) {
                if ("-" === e) return e;
                if (this.format) {
                  let o = new Intl.NumberFormat(
                    this.locale,
                    this.getOptions()
                  ).format(e);
                  return (
                    this.prefix && (o = this.prefix + o),
                    this.suffix && (o += this.suffix),
                    o
                  );
                }
                return e.toString();
              }
              return "";
            }
            parseValue(e) {
              let i = e
                .replace(this._suffix, "")
                .replace(this._prefix, "")
                .trim()
                .replace(/\s/g, "")
                .replace(this._currency, "")
                .replace(this._group, "")
                .replace(this._minusSign, "-")
                .replace(this._decimal, ".")
                .replace(this._numeral, this._index);
              if (i) {
                if ("-" === i) return i;
                let o = +i;
                return isNaN(o) ? null : o;
              }
              return null;
            }
            repeat(e, i, o) {
              if (this.readonly) return;
              let r = i || 500;
              this.clearTimer(),
                (this.timer = setTimeout(() => {
                  this.repeat(e, 40, o);
                }, r)),
                this.spin(e, o);
            }
            spin(e, i) {
              let o = this.step * i,
                r = this.parseValue(this.input?.nativeElement.value) || 0,
                s = this.validateValue(r + o);
              (this.maxlength && this.maxlength < this.formatValue(s).length) ||
                (this.updateInput(s, null, "spin", null),
                this.updateModel(e, s),
                this.handleOnInput(e, r, s));
            }
            clear() {
              (this.value = null),
                this.onModelChange(this.value),
                this.onClear.emit();
            }
            onUpButtonMouseDown(e) {
              2 !== e.button
                ? this.disabled ||
                  (this.input?.nativeElement.focus(),
                  this.repeat(e, null, 1),
                  e.preventDefault())
                : this.clearTimer();
            }
            onUpButtonMouseUp() {
              this.disabled || this.clearTimer();
            }
            onUpButtonMouseLeave() {
              this.disabled || this.clearTimer();
            }
            onUpButtonKeyDown(e) {
              (32 === e.keyCode || 13 === e.keyCode) && this.repeat(e, null, 1);
            }
            onUpButtonKeyUp() {
              this.disabled || this.clearTimer();
            }
            onDownButtonMouseDown(e) {
              2 !== e.button
                ? this.disabled ||
                  (this.input?.nativeElement.focus(),
                  this.repeat(e, null, -1),
                  e.preventDefault())
                : this.clearTimer();
            }
            onDownButtonMouseUp() {
              this.disabled || this.clearTimer();
            }
            onDownButtonMouseLeave() {
              this.disabled || this.clearTimer();
            }
            onDownButtonKeyUp() {
              this.disabled || this.clearTimer();
            }
            onDownButtonKeyDown(e) {
              (32 === e.keyCode || 13 === e.keyCode) &&
                this.repeat(e, null, -1);
            }
            onUserInput(e) {
              this.readonly ||
                (this.isSpecialChar && (e.target.value = this.lastValue),
                (this.isSpecialChar = !1));
            }
            onInputKeyDown(e) {
              if (this.readonly) return;
              if (((this.lastValue = e.target.value), e.shiftKey || e.altKey))
                return void (this.isSpecialChar = !0);
              let i = e.target.selectionStart,
                o = e.target.selectionEnd,
                r = e.target.value,
                s = null;
              switch ((e.altKey && e.preventDefault(), e.code)) {
                case "ArrowUp":
                  this.spin(e, 1), e.preventDefault();
                  break;
                case "ArrowDown":
                  this.spin(e, -1), e.preventDefault();
                  break;
                case "ArrowLeft":
                  this.isNumeralChar(r.charAt(i - 1)) || e.preventDefault();
                  break;
                case "ArrowRight":
                  this.isNumeralChar(r.charAt(i)) || e.preventDefault();
                  break;
                case "Tab":
                case "Enter":
                  (s = this.validateValue(
                    this.parseValue(this.input.nativeElement.value)
                  )),
                    (this.input.nativeElement.value = this.formatValue(s)),
                    this.input.nativeElement.setAttribute("aria-valuenow", s),
                    this.updateModel(e, s);
                  break;
                case "Backspace":
                  if ((e.preventDefault(), i === o)) {
                    const a = r.charAt(i - 1),
                      {
                        decimalCharIndex: l,
                        decimalCharIndexWithoutPrefix: c,
                      } = this.getDecimalCharIndexes(r);
                    if (this.isNumeralChar(a)) {
                      const u = this.getDecimalLength(r);
                      if (this._group.test(a))
                        (this._group.lastIndex = 0),
                          (s = r.slice(0, i - 2) + r.slice(i - 1));
                      else if (this._decimal.test(a))
                        (this._decimal.lastIndex = 0),
                          u
                            ? this.input?.nativeElement.setSelectionRange(
                                i - 1,
                                i - 1
                              )
                            : (s = r.slice(0, i - 1) + r.slice(i));
                      else if (l > 0 && i > l) {
                        const h =
                          this.isDecimalMode() &&
                          (this.minFractionDigits || 0) < u
                            ? ""
                            : "0";
                        s = r.slice(0, i - 1) + h + r.slice(i);
                      } else
                        1 === c
                          ? ((s = r.slice(0, i - 1) + "0" + r.slice(i)),
                            (s = this.parseValue(s) > 0 ? s : ""))
                          : (s = r.slice(0, i - 1) + r.slice(i));
                    }
                    this.updateValue(e, s, null, "delete-single");
                  } else
                    (s = this.deleteRange(r, i, o)),
                      this.updateValue(e, s, null, "delete-range");
                  break;
                case "Delete":
                  if ((e.preventDefault(), i === o)) {
                    const a = r.charAt(i),
                      {
                        decimalCharIndex: l,
                        decimalCharIndexWithoutPrefix: c,
                      } = this.getDecimalCharIndexes(r);
                    if (this.isNumeralChar(a)) {
                      const u = this.getDecimalLength(r);
                      if (this._group.test(a))
                        (this._group.lastIndex = 0),
                          (s = r.slice(0, i) + r.slice(i + 2));
                      else if (this._decimal.test(a))
                        (this._decimal.lastIndex = 0),
                          u
                            ? this.input?.nativeElement.setSelectionRange(
                                i + 1,
                                i + 1
                              )
                            : (s = r.slice(0, i) + r.slice(i + 1));
                      else if (l > 0 && i > l) {
                        const h =
                          this.isDecimalMode() &&
                          (this.minFractionDigits || 0) < u
                            ? ""
                            : "0";
                        s = r.slice(0, i) + h + r.slice(i + 1);
                      } else
                        1 === c
                          ? ((s = r.slice(0, i) + "0" + r.slice(i + 1)),
                            (s = this.parseValue(s) > 0 ? s : ""))
                          : (s = r.slice(0, i) + r.slice(i + 1));
                    }
                    this.updateValue(e, s, null, "delete-back-single");
                  } else
                    (s = this.deleteRange(r, i, o)),
                      this.updateValue(e, s, null, "delete-range");
                  break;
                case "Home":
                  this.min &&
                    (this.updateModel(e, this.min), e.preventDefault());
                  break;
                case "End":
                  this.max &&
                    (this.updateModel(e, this.max), e.preventDefault());
              }
              this.onKeyDown.emit(e);
            }
            onInputKeyPress(e) {
              if (this.readonly) return;
              let i = e.which || e.keyCode,
                o = String.fromCharCode(i);
              const r = this.isDecimalSign(o),
                s = this.isMinusSign(o);
              13 != i && e.preventDefault();
              const a = this.parseValue(this.input.nativeElement.value + o),
                l = null != a ? a.toString() : "";
              (this.maxlength && l.length > this.maxlength) ||
                (((48 <= i && i <= 57) || s || r) &&
                  this.insert(e, o, { isDecimalSign: r, isMinusSign: s }));
            }
            onPaste(e) {
              if (!this.disabled && !this.readonly) {
                e.preventDefault();
                let i = (
                  e.clipboardData || this.document.defaultView.clipboardData
                ).getData("Text");
                if (i) {
                  this.maxlength &&
                    (i = i.toString().substring(0, this.maxlength));
                  let o = this.parseValue(i);
                  null != o && this.insert(e, o.toString());
                }
              }
            }
            allowMinusSign() {
              return null == this.min || this.min < 0;
            }
            isMinusSign(e) {
              return !(
                (!this._minusSign.test(e) && "-" !== e) ||
                ((this._minusSign.lastIndex = 0), 0)
              );
            }
            isDecimalSign(e) {
              return (
                !!this._decimal.test(e) && ((this._decimal.lastIndex = 0), !0)
              );
            }
            isDecimalMode() {
              return "decimal" === this.mode;
            }
            getDecimalCharIndexes(e) {
              let i = e.search(this._decimal);
              this._decimal.lastIndex = 0;
              const r = e
                .replace(this._prefix, "")
                .trim()
                .replace(/\s/g, "")
                .replace(this._currency, "")
                .search(this._decimal);
              return (
                (this._decimal.lastIndex = 0),
                { decimalCharIndex: i, decimalCharIndexWithoutPrefix: r }
              );
            }
            getCharIndexes(e) {
              const i = e.search(this._decimal);
              this._decimal.lastIndex = 0;
              const o = e.search(this._minusSign);
              this._minusSign.lastIndex = 0;
              const r = e.search(this._suffix);
              this._suffix.lastIndex = 0;
              const s = e.search(this._currency);
              return (
                (this._currency.lastIndex = 0),
                {
                  decimalCharIndex: i,
                  minusCharIndex: o,
                  suffixCharIndex: r,
                  currencyCharIndex: s,
                }
              );
            }
            insert(e, i, o = { isDecimalSign: !1, isMinusSign: !1 }) {
              const r = i.search(this._minusSign);
              if (
                ((this._minusSign.lastIndex = 0),
                !this.allowMinusSign() && -1 !== r)
              )
                return;
              let s = this.input?.nativeElement.selectionStart,
                a = this.input?.nativeElement.selectionEnd,
                l = this.input?.nativeElement.value.trim();
              const {
                decimalCharIndex: c,
                minusCharIndex: u,
                suffixCharIndex: h,
                currencyCharIndex: m,
              } = this.getCharIndexes(l);
              let _;
              if (o.isMinusSign)
                0 === s &&
                  ((_ = l),
                  (-1 === u || 0 !== a) && (_ = this.insertText(l, i, 0, a)),
                  this.updateValue(e, _, i, "insert"));
              else if (o.isDecimalSign)
                c > 0 && s === c
                  ? this.updateValue(e, l, i, "insert")
                  : ((c > s && c < a) ||
                      (-1 === c && this.maxFractionDigits)) &&
                    ((_ = this.insertText(l, i, s, a)),
                    this.updateValue(e, _, i, "insert"));
              else {
                const b =
                    this.numberFormat.resolvedOptions().maximumFractionDigits,
                  C = s !== a ? "range-insert" : "insert";
                if (c > 0 && s > c) {
                  if (s + i.length - (c + 1) <= b) {
                    const I = m >= s ? m - 1 : h >= s ? h : l.length;
                    (_ =
                      l.slice(0, s) +
                      i +
                      l.slice(s + i.length, I) +
                      l.slice(I)),
                      this.updateValue(e, _, i, C);
                  }
                } else
                  (_ = this.insertText(l, i, s, a)),
                    this.updateValue(e, _, i, C);
              }
            }
            insertText(e, i, o, r) {
              if (2 === ("." === i ? i : i.split(".")).length) {
                const a = e.slice(o, r).search(this._decimal);
                return (
                  (this._decimal.lastIndex = 0),
                  a > 0
                    ? e.slice(0, o) + this.formatValue(i) + e.slice(r)
                    : e || this.formatValue(i)
                );
              }
              return r - o === e.length
                ? this.formatValue(i)
                : 0 === o
                ? i + e.slice(r)
                : r === e.length
                ? e.slice(0, o) + i
                : e.slice(0, o) + i + e.slice(r);
            }
            deleteRange(e, i, o) {
              let r;
              return (
                (r =
                  o - i === e.length
                    ? ""
                    : 0 === i
                    ? e.slice(o)
                    : o === e.length
                    ? e.slice(0, i)
                    : e.slice(0, i) + e.slice(o)),
                r
              );
            }
            initCursor() {
              let e = this.input?.nativeElement.selectionStart,
                i = this.input?.nativeElement.value,
                o = i.length,
                r = null,
                s = (this.prefixChar || "").length;
              (i = i.replace(this._prefix, "")), (e -= s);
              let a = i.charAt(e);
              if (this.isNumeralChar(a)) return e + s;
              let l = e - 1;
              for (; l >= 0; ) {
                if (((a = i.charAt(l)), this.isNumeralChar(a))) {
                  r = l + s;
                  break;
                }
                l--;
              }
              if (null !== r)
                this.input?.nativeElement.setSelectionRange(r + 1, r + 1);
              else {
                for (l = e; l < o; ) {
                  if (((a = i.charAt(l)), this.isNumeralChar(a))) {
                    r = l + s;
                    break;
                  }
                  l++;
                }
                null !== r && this.input?.nativeElement.setSelectionRange(r, r);
              }
              return r || 0;
            }
            onInputClick() {
              const e = this.input?.nativeElement.value;
              !this.readonly && e !== w.getSelection() && this.initCursor();
            }
            isNumeralChar(e) {
              return !(
                1 !== e.length ||
                !(
                  this._numeral.test(e) ||
                  this._decimal.test(e) ||
                  this._group.test(e) ||
                  this._minusSign.test(e)
                ) ||
                (this.resetRegex(), 0)
              );
            }
            resetRegex() {
              (this._numeral.lastIndex = 0),
                (this._decimal.lastIndex = 0),
                (this._group.lastIndex = 0),
                (this._minusSign.lastIndex = 0);
            }
            updateValue(e, i, o, r) {
              let s = this.input?.nativeElement.value,
                a = null;
              null != i &&
                ((a = this.parseValue(i)),
                (a = a || this.allowEmpty ? a : 0),
                this.updateInput(a, o, r, i),
                this.handleOnInput(e, s, a));
            }
            handleOnInput(e, i, o) {
              this.isValueChanged(i, o) &&
                ((this.input.nativeElement.value = this.formatValue(o)),
                this.input?.nativeElement.setAttribute("aria-valuenow", o),
                this.updateModel(e, o),
                this.onInput.emit({
                  originalEvent: e,
                  value: o,
                  formattedValue: i,
                }));
            }
            isValueChanged(e, i) {
              return (
                (null === i && null !== e) ||
                (null != i &&
                  i !== ("string" == typeof e ? this.parseValue(e) : e))
              );
            }
            validateValue(e) {
              return "-" === e || null == e
                ? null
                : null != this.min && e < this.min
                ? this.min
                : null != this.max && e > this.max
                ? this.max
                : e;
            }
            updateInput(e, i, o, r) {
              i = i || "";
              let s = this.input?.nativeElement.value,
                a = this.formatValue(e),
                l = s.length;
              if ((a !== r && (a = this.concatValues(a, r)), 0 === l)) {
                (this.input.nativeElement.value = a),
                  this.input.nativeElement.setSelectionRange(0, 0);
                const u = this.initCursor() + i.length;
                this.input.nativeElement.setSelectionRange(u, u);
              } else {
                let c = this.input.nativeElement.selectionStart,
                  u = this.input.nativeElement.selectionEnd;
                if (
                  (this.maxlength &&
                    a.length > this.maxlength &&
                    ((a = a.slice(0, this.maxlength)),
                    (c = Math.min(c, this.maxlength)),
                    (u = Math.min(u, this.maxlength))),
                  this.maxlength && this.maxlength < a.length)
                )
                  return;
                this.input.nativeElement.value = a;
                let h = a.length;
                if ("range-insert" === o) {
                  const m = this.parseValue((s || "").slice(0, c)),
                    b = (null !== m ? m.toString() : "")
                      .split("")
                      .join(`(${this.groupChar})?`),
                    C = new RegExp(b, "g");
                  C.test(a);
                  const I = i.split("").join(`(${this.groupChar})?`),
                    M = new RegExp(I, "g");
                  M.test(a.slice(C.lastIndex)),
                    (u = C.lastIndex + M.lastIndex),
                    this.input.nativeElement.setSelectionRange(u, u);
                } else if (h === l)
                  "insert" === o || "delete-back-single" === o
                    ? this.input.nativeElement.setSelectionRange(u + 1, u + 1)
                    : "delete-single" === o
                    ? this.input.nativeElement.setSelectionRange(u - 1, u - 1)
                    : ("delete-range" === o || "spin" === o) &&
                      this.input.nativeElement.setSelectionRange(u, u);
                else if ("delete-back-single" === o) {
                  let m = s.charAt(u - 1),
                    _ = s.charAt(u),
                    b = l - h,
                    C = this._group.test(_);
                  C && 1 === b
                    ? (u += 1)
                    : !C && this.isNumeralChar(m) && (u += -1 * b + 1),
                    (this._group.lastIndex = 0),
                    this.input.nativeElement.setSelectionRange(u, u);
                } else if ("-" === s && "insert" === o) {
                  this.input.nativeElement.setSelectionRange(0, 0);
                  const _ = this.initCursor() + i.length + 1;
                  this.input.nativeElement.setSelectionRange(_, _);
                } else
                  (u += h - l),
                    this.input.nativeElement.setSelectionRange(u, u);
              }
              this.input.nativeElement.setAttribute("aria-valuenow", e);
            }
            concatValues(e, i) {
              if (e && i) {
                let o = i.search(this._decimal);
                return (
                  (this._decimal.lastIndex = 0),
                  this.suffixChar
                    ? e.replace(this.suffixChar, "").split(this._decimal)[0] +
                      i.replace(this.suffixChar, "").slice(o) +
                      this.suffixChar
                    : -1 !== o
                    ? e.split(this._decimal)[0] + i.slice(o)
                    : e
                );
              }
              return e;
            }
            getDecimalLength(e) {
              if (e) {
                const i = e.split(this._decimal);
                if (2 === i.length)
                  return i[1]
                    .replace(this._suffix, "")
                    .trim()
                    .replace(/\s/g, "")
                    .replace(this._currency, "").length;
              }
              return 0;
            }
            onInputFocus(e) {
              (this.focused = !0), this.onFocus.emit(e);
            }
            onInputBlur(e) {
              this.focused = !1;
              let i = this.validateValue(
                this.parseValue(this.input.nativeElement.value)
              );
              this.onBlur.emit(e),
                (this.input.nativeElement.value = this.formatValue(i)),
                this.input.nativeElement.setAttribute("aria-valuenow", i),
                this.updateModel(e, i);
            }
            formattedValue() {
              return this.formatValue(
                this.value || this.allowEmpty ? this.value : 0
              );
            }
            updateModel(e, i) {
              const o = "blur" === this.ngControl?.control?.updateOn;
              this.value !== i
                ? ((this.value = i),
                  (o && this.focused) || this.onModelChange(i))
                : o && this.onModelChange(i),
                this.onModelTouched();
            }
            writeValue(e) {
              (this.value = e), this.cd.markForCheck();
            }
            registerOnChange(e) {
              this.onModelChange = e;
            }
            registerOnTouched(e) {
              this.onModelTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e), this.cd.markForCheck();
            }
            get filled() {
              return null != this.value && this.value.toString().length > 0;
            }
            clearTimer() {
              this.timer && clearInterval(this.timer);
            }
            getFormatter() {
              return this.numberFormat;
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Qe), D(Fe), D(Ct), D(Nt));
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-inputNumber"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              viewQuery: function (i, o) {
                if ((1 & i && me(G7, 5), 2 & i)) {
                  let r;
                  J((r = X())) && (o.input = r.first);
                }
              },
              hostAttrs: [1, "p-element", "p-inputwrapper"],
              hostVars: 6,
              hostBindings: function (i, o) {
                2 & i &&
                  On("p-inputwrapper-filled", o.filled)(
                    "p-inputwrapper-focus",
                    o.focused
                  )(
                    "p-inputnumber-clearable",
                    o.showClear && "vertical" != o.buttonLayout
                  );
              },
              inputs: {
                showButtons: "showButtons",
                format: "format",
                buttonLayout: "buttonLayout",
                inputId: "inputId",
                styleClass: "styleClass",
                style: "style",
                placeholder: "placeholder",
                size: "size",
                maxlength: "maxlength",
                tabindex: "tabindex",
                title: "title",
                ariaLabelledBy: "ariaLabelledBy",
                ariaLabel: "ariaLabel",
                ariaRequired: "ariaRequired",
                name: "name",
                required: "required",
                autocomplete: "autocomplete",
                min: "min",
                max: "max",
                incrementButtonClass: "incrementButtonClass",
                decrementButtonClass: "decrementButtonClass",
                incrementButtonIcon: "incrementButtonIcon",
                decrementButtonIcon: "decrementButtonIcon",
                readonly: "readonly",
                step: "step",
                allowEmpty: "allowEmpty",
                locale: "locale",
                localeMatcher: "localeMatcher",
                mode: "mode",
                currency: "currency",
                currencyDisplay: "currencyDisplay",
                useGrouping: "useGrouping",
                minFractionDigits: "minFractionDigits",
                maxFractionDigits: "maxFractionDigits",
                prefix: "prefix",
                suffix: "suffix",
                inputStyle: "inputStyle",
                inputStyleClass: "inputStyleClass",
                showClear: "showClear",
                disabled: "disabled",
              },
              outputs: {
                onInput: "onInput",
                onFocus: "onFocus",
                onBlur: "onBlur",
                onKeyDown: "onKeyDown",
                onClear: "onClear",
              },
              features: [Ee([C8]), _t],
              decls: 7,
              vars: 39,
              consts: [
                [3, "ngClass", "ngStyle"],
                [
                  "pInputText",
                  "",
                  "role",
                  "spinbutton",
                  "inputmode",
                  "decimal",
                  3,
                  "ngClass",
                  "ngStyle",
                  "value",
                  "disabled",
                  "readonly",
                  "input",
                  "keydown",
                  "keypress",
                  "paste",
                  "click",
                  "focus",
                  "blur",
                ],
                ["input", ""],
                [4, "ngIf"],
                ["class", "p-inputnumber-button-group", 4, "ngIf"],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "class",
                  "p-button-icon-only",
                  "tabindex",
                  "-1",
                  3,
                  "ngClass",
                  "class",
                  "disabled",
                  "mousedown",
                  "mouseup",
                  "mouseleave",
                  "keydown",
                  "keyup",
                  4,
                  "ngIf",
                ],
                [3, "ngClass", "click", 4, "ngIf"],
                ["class", "p-inputnumber-clear-icon", 3, "click", 4, "ngIf"],
                [3, "ngClass", "click"],
                [1, "p-inputnumber-clear-icon", 3, "click"],
                [4, "ngTemplateOutlet"],
                [1, "p-inputnumber-button-group"],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "tabindex",
                  "-1",
                  1,
                  "p-button-icon-only",
                  3,
                  "ngClass",
                  "disabled",
                  "mousedown",
                  "mouseup",
                  "mouseleave",
                  "keydown",
                  "keyup",
                ],
                [3, "ngClass", 4, "ngIf"],
                [3, "ngClass"],
              ],
              template: function (i, o) {
                1 & i &&
                  (y(0, "span", 0)(1, "input", 1, 2),
                  A("input", function (s) {
                    return o.onUserInput(s);
                  })("keydown", function (s) {
                    return o.onInputKeyDown(s);
                  })("keypress", function (s) {
                    return o.onInputKeyPress(s);
                  })("paste", function (s) {
                    return o.onPaste(s);
                  })("click", function () {
                    return o.onInputClick();
                  })("focus", function (s) {
                    return o.onInputFocus(s);
                  })("blur", function (s) {
                    return o.onInputBlur(s);
                  }),
                  v(),
                  f(3, Y7, 3, 2, "ng-container", 3),
                  f(4, a8, 7, 19, "span", 4),
                  f(5, h8, 3, 9, "button", 5),
                  f(6, v8, 3, 9, "button", 5),
                  v()),
                  2 & i &&
                    (ne(o.styleClass),
                    d(
                      "ngClass",
                      kn(
                        35,
                        b8,
                        o.showButtons && "stacked" === o.buttonLayout,
                        o.showButtons && "horizontal" === o.buttonLayout,
                        o.showButtons && "vertical" === o.buttonLayout
                      )
                    )("ngStyle", o.style),
                    x("data-pc-name", "inputnumber")("data-pc-section", "root"),
                    g(1),
                    ne(o.inputStyleClass),
                    d("ngClass", "p-inputnumber-input")(
                      "ngStyle",
                      o.inputStyle
                    )("value", o.formattedValue())("disabled", o.disabled)(
                      "readonly",
                      o.readonly
                    ),
                    x("id", o.inputId)("aria-valuemin", o.min)(
                      "aria-valuemax",
                      o.max
                    )("aria-valuenow", o.value)("placeholder", o.placeholder)(
                      "aria-label",
                      o.ariaLabel
                    )("aria-labelledby", o.ariaLabelledBy)("title", o.title)(
                      "size",
                      o.size
                    )("name", o.name)("autocomplete", o.autocomplete)(
                      "maxlength",
                      o.maxlength
                    )("tabindex", o.tabindex)("aria-required", o.ariaRequired)(
                      "required",
                      o.required
                    )("min", o.min)("max", o.max)("data-pc-section", "input"),
                    g(2),
                    d(
                      "ngIf",
                      "vertical" != o.buttonLayout && o.showClear && o.value
                    ),
                    g(1),
                    d("ngIf", o.showButtons && "stacked" === o.buttonLayout),
                    g(1),
                    d("ngIf", o.showButtons && "stacked" !== o.buttonLayout),
                    g(1),
                    d("ngIf", o.showButtons && "stacked" !== o.buttonLayout));
              },
              dependencies: function () {
                return [Bt, wt, St, Xt, QT, ng, li, YT, ZT];
              },
              styles: [
                "@layer primeng{p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            });
          }
          return t;
        })(),
        pg = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt, ug, Kr, li, YT, ZT, ht] });
          }
          return t;
        })(),
        eS = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["AngleDoubleLeftIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "fill-rule",
                  "evenodd",
                  "clip-rule",
                  "evenodd",
                  "d",
                  "M5.71602 11.164C5.80782 11.2021 5.9063 11.2215 6.00569 11.221C6.20216 11.2301 6.39427 11.1612 6.54025 11.0294C6.68191 10.8875 6.76148 10.6953 6.76148 10.4948C6.76148 10.2943 6.68191 10.1021 6.54025 9.96024L3.51441 6.9344L6.54025 3.90855C6.624 3.76126 6.65587 3.59011 6.63076 3.42254C6.60564 3.25498 6.525 3.10069 6.40175 2.98442C6.2785 2.86815 6.11978 2.79662 5.95104 2.7813C5.78229 2.76598 5.61329 2.80776 5.47112 2.89994L1.97123 6.39983C1.82957 6.54167 1.75 6.73393 1.75 6.9344C1.75 7.13486 1.82957 7.32712 1.97123 7.46896L5.47112 10.9991C5.54096 11.0698 5.62422 11.1259 5.71602 11.164ZM11.0488 10.9689C11.1775 11.1156 11.3585 11.2061 11.5531 11.221C11.7477 11.2061 11.9288 11.1156 12.0574 10.9689C12.1815 10.8302 12.25 10.6506 12.25 10.4645C12.25 10.2785 12.1815 10.0989 12.0574 9.96024L9.03158 6.93439L12.0574 3.90855C12.1248 3.76739 12.1468 3.60881 12.1204 3.45463C12.0939 3.30045 12.0203 3.15826 11.9097 3.04765C11.7991 2.93703 11.6569 2.86343 11.5027 2.83698C11.3486 2.81053 11.19 2.83252 11.0488 2.89994L7.51865 6.36957C7.37699 6.51141 7.29742 6.70367 7.29742 6.90414C7.29742 7.1046 7.37699 7.29686 7.51865 7.4387L11.0488 10.9689Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        tS = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["AngleDoubleRightIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "fill-rule",
                  "evenodd",
                  "clip-rule",
                  "evenodd",
                  "d",
                  "M7.68757 11.1451C7.7791 11.1831 7.8773 11.2024 7.9764 11.2019C8.07769 11.1985 8.17721 11.1745 8.26886 11.1312C8.36052 11.088 8.44238 11.0265 8.50943 10.9505L12.0294 7.49085C12.1707 7.34942 12.25 7.15771 12.25 6.95782C12.25 6.75794 12.1707 6.56622 12.0294 6.42479L8.50943 2.90479C8.37014 2.82159 8.20774 2.78551 8.04633 2.80192C7.88491 2.81833 7.73309 2.88635 7.6134 2.99588C7.4937 3.10541 7.41252 3.25061 7.38189 3.40994C7.35126 3.56927 7.37282 3.73423 7.44337 3.88033L10.4605 6.89748L7.44337 9.91463C7.30212 10.0561 7.22278 10.2478 7.22278 10.4477C7.22278 10.6475 7.30212 10.8393 7.44337 10.9807C7.51301 11.0512 7.59603 11.1071 7.68757 11.1451ZM1.94207 10.9505C2.07037 11.0968 2.25089 11.1871 2.44493 11.2019C2.63898 11.1871 2.81949 11.0968 2.94779 10.9505L6.46779 7.49085C6.60905 7.34942 6.68839 7.15771 6.68839 6.95782C6.68839 6.75793 6.60905 6.56622 6.46779 6.42479L2.94779 2.90479C2.80704 2.83757 2.6489 2.81563 2.49517 2.84201C2.34143 2.86839 2.19965 2.94178 2.08936 3.05207C1.97906 3.16237 1.90567 3.30415 1.8793 3.45788C1.85292 3.61162 1.87485 3.76975 1.94207 3.9105L4.95922 6.92765L1.94207 9.9448C1.81838 10.0831 1.75 10.2621 1.75 10.4477C1.75 10.6332 1.81838 10.8122 1.94207 10.9505Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        nS = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["AngleLeftIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M8.75 11.185C8.65146 11.1854 8.55381 11.1662 8.4628 11.1284C8.37179 11.0906 8.28924 11.0351 8.22 10.965L4.72 7.46496C4.57955 7.32433 4.50066 7.13371 4.50066 6.93496C4.50066 6.73621 4.57955 6.54558 4.72 6.40496L8.22 2.93496C8.36095 2.84357 8.52851 2.80215 8.69582 2.81733C8.86312 2.83252 9.02048 2.90344 9.14268 3.01872C9.26487 3.134 9.34483 3.28696 9.36973 3.4531C9.39463 3.61924 9.36303 3.78892 9.28 3.93496L6.28 6.93496L9.28 9.93496C9.42045 10.0756 9.49934 10.2662 9.49934 10.465C9.49934 10.6637 9.42045 10.8543 9.28 10.995C9.13526 11.1257 8.9448 11.1939 8.75 11.185Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        iS = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["AngleRightIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M5.25 11.1728C5.14929 11.1694 5.05033 11.1455 4.9592 11.1025C4.86806 11.0595 4.78666 10.9984 4.72 10.9228C4.57955 10.7822 4.50066 10.5916 4.50066 10.3928C4.50066 10.1941 4.57955 10.0035 4.72 9.86283L7.72 6.86283L4.72 3.86283C4.66067 3.71882 4.64765 3.55991 4.68275 3.40816C4.71785 3.25642 4.79932 3.11936 4.91585 3.01602C5.03238 2.91268 5.17819 2.84819 5.33305 2.83149C5.4879 2.81479 5.64411 2.84671 5.78 2.92283L9.28 6.42283C9.42045 6.56346 9.49934 6.75408 9.49934 6.95283C9.49934 7.15158 9.42045 7.34221 9.28 7.48283L5.78 10.9228C5.71333 10.9984 5.63193 11.0595 5.5408 11.1025C5.44966 11.1455 5.35071 11.1694 5.25 11.1728Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })();
      function w8(t, n) {
        1 & t && j(0);
      }
      const hg = function (t) {
        return { $implicit: t };
      };
      function T8(t, n) {
        if (
          (1 & t && (y(0, "div", 15), f(1, w8, 1, 0, "ng-container", 16), v()),
          2 & t)
        ) {
          const e = p(2);
          x("data-pc-section", "start"),
            g(1),
            d("ngTemplateOutlet", e.templateLeft)(
              "ngTemplateOutletContext",
              Q(3, hg, e.paginatorState)
            );
        }
      }
      function S8(t, n) {
        if ((1 & t && (y(0, "span", 17), B(1), v()), 2 & t)) {
          const e = p(2);
          g(1), Le(e.currentPageReport);
        }
      }
      function I8(t, n) {
        1 & t && k(0, "AngleDoubleLeftIcon", 19),
          2 & t && d("styleClass", "p-paginator-icon");
      }
      function D8(t, n) {}
      function E8(t, n) {
        1 & t && f(0, D8, 0, 0, "ng-template");
      }
      function x8(t, n) {
        if (
          (1 & t && (y(0, "span", 20), f(1, E8, 1, 0, null, 21), v()), 2 & t)
        ) {
          const e = p(3);
          g(1), d("ngTemplateOutlet", e.firstPageLinkIconTemplate);
        }
      }
      const mu = function (t) {
        return { "p-disabled": t };
      };
      function M8(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 18),
            A("click", function (o) {
              return T(e), S(p(2).changePageToFirst(o));
            }),
            f(1, I8, 1, 1, "AngleDoubleLeftIcon", 6),
            f(2, x8, 2, 1, "span", 7),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d("disabled", e.isFirstPage() || e.empty())(
            "ngClass",
            Q(5, mu, e.isFirstPage() || e.empty())
          ),
            x("aria-label", e.getAriaLabel("firstPageLabel")),
            g(1),
            d("ngIf", !e.firstPageLinkIconTemplate),
            g(1),
            d("ngIf", e.firstPageLinkIconTemplate);
        }
      }
      function O8(t, n) {
        1 & t && k(0, "AngleLeftIcon", 19),
          2 & t && d("styleClass", "p-paginator-icon");
      }
      function A8(t, n) {}
      function k8(t, n) {
        1 & t && f(0, A8, 0, 0, "ng-template");
      }
      function R8(t, n) {
        if (
          (1 & t && (y(0, "span", 20), f(1, k8, 1, 0, null, 21), v()), 2 & t)
        ) {
          const e = p(2);
          g(1), d("ngTemplateOutlet", e.previousPageLinkIconTemplate);
        }
      }
      const F8 = function (t) {
        return { "p-highlight": t };
      };
      function L8(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 24),
            A("click", function (o) {
              const s = T(e).$implicit;
              return S(p(3).onPageLinkClick(o, s - 1));
            }),
            B(1),
            v();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = p(3);
          d("ngClass", Q(3, F8, e - 1 == i.getPage())),
            x("aria-label", i.getAriaLabel("pageLabel")),
            g(1),
            we(" ", i.getLocalization(e), " ");
        }
      }
      function P8(t, n) {
        if (
          (1 & t && (y(0, "span", 22), f(1, L8, 2, 5, "button", 23), v()),
          2 & t)
        ) {
          const e = p(2);
          g(1), d("ngForOf", e.pageLinks);
        }
      }
      function N8(t, n) {
        1 & t && B(0), 2 & t && Le(p(3).currentPageReport);
      }
      function V8(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-dropdown", 25),
            A("onChange", function (o) {
              return T(e), S(p(2).onPageDropdownChange(o));
            }),
            f(1, N8, 1, 1, "ng-template", 26),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d("options", e.pageItems)("ngModel", e.getPage())(
            "disabled",
            e.empty()
          )("appendTo", e.dropdownAppendTo)(
            "scrollHeight",
            e.dropdownScrollHeight
          ),
            x("aria-label", e.getAriaLabel("jumpToPageDropdownLabel"));
        }
      }
      function B8(t, n) {
        1 & t && k(0, "AngleRightIcon", 19),
          2 & t && d("styleClass", "p-paginator-icon");
      }
      function H8(t, n) {}
      function z8(t, n) {
        1 & t && f(0, H8, 0, 0, "ng-template");
      }
      function $8(t, n) {
        if (
          (1 & t && (y(0, "span", 20), f(1, z8, 1, 0, null, 21), v()), 2 & t)
        ) {
          const e = p(2);
          g(1), d("ngTemplateOutlet", e.nextPageLinkIconTemplate);
        }
      }
      function j8(t, n) {
        1 & t && k(0, "AngleDoubleRightIcon", 19),
          2 & t && d("styleClass", "p-paginator-icon");
      }
      function U8(t, n) {}
      function G8(t, n) {
        1 & t && f(0, U8, 0, 0, "ng-template");
      }
      function W8(t, n) {
        if (
          (1 & t && (y(0, "span", 20), f(1, G8, 1, 0, null, 21), v()), 2 & t)
        ) {
          const e = p(3);
          g(1), d("ngTemplateOutlet", e.lastPageLinkIconTemplate);
        }
      }
      function K8(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 27),
            A("click", function (o) {
              return T(e), S(p(2).changePageToLast(o));
            }),
            f(1, j8, 1, 1, "AngleDoubleRightIcon", 6),
            f(2, W8, 2, 1, "span", 7),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d("disabled", e.isLastPage() || e.empty())(
            "ngClass",
            Q(5, mu, e.isLastPage() || e.empty())
          ),
            x("aria-label", e.getAriaLabel("lastPageLabel")),
            g(1),
            d("ngIf", !e.lastPageLinkIconTemplate),
            g(1),
            d("ngIf", e.lastPageLinkIconTemplate);
        }
      }
      function q8(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-inputNumber", 28),
            A("ngModelChange", function (o) {
              return T(e), S(p(2).changePage(o - 1));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d("ngModel", e.currentPage())("disabled", e.empty());
        }
      }
      function Z8(t, n) {
        1 & t && j(0);
      }
      function Y8(t, n) {
        if ((1 & t && f(0, Z8, 1, 0, "ng-container", 16), 2 & t)) {
          const e = n.$implicit;
          d("ngTemplateOutlet", p(4).dropdownItemTemplate)(
            "ngTemplateOutletContext",
            Q(2, hg, e)
          );
        }
      }
      function Q8(t, n) {
        1 & t && (H(0), f(1, Y8, 1, 4, "ng-template", 31), z());
      }
      function J8(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-dropdown", 29),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).rows = o));
            })("onChange", function (o) {
              return T(e), S(p(2).onRppChange(o));
            }),
            f(1, Q8, 2, 0, "ng-container", 30),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d("options", e.rowsPerPageItems)("ngModel", e.rows)(
            "disabled",
            e.empty()
          )("appendTo", e.dropdownAppendTo)(
            "scrollHeight",
            e.dropdownScrollHeight
          )("ariaLabel", e.getAriaLabel("rowsPerPageLabel")),
            g(1),
            d("ngIf", e.dropdownItemTemplate);
        }
      }
      function X8(t, n) {
        1 & t && j(0);
      }
      function eV(t, n) {
        if (
          (1 & t && (y(0, "div", 32), f(1, X8, 1, 0, "ng-container", 16), v()),
          2 & t)
        ) {
          const e = p(2);
          x("data-pc-section", "end"),
            g(1),
            d("ngTemplateOutlet", e.templateRight)(
              "ngTemplateOutletContext",
              Q(3, hg, e.paginatorState)
            );
        }
      }
      function tV(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 1),
            f(1, T8, 2, 5, "div", 2),
            f(2, S8, 2, 1, "span", 3),
            f(3, M8, 3, 7, "button", 4),
            y(4, "button", 5),
            A("click", function (o) {
              return T(e), S(p().changePageToPrev(o));
            }),
            f(5, O8, 1, 1, "AngleLeftIcon", 6),
            f(6, R8, 2, 1, "span", 7),
            v(),
            f(7, P8, 2, 1, "span", 8),
            f(8, V8, 2, 6, "p-dropdown", 9),
            y(9, "button", 10),
            A("click", function (o) {
              return T(e), S(p().changePageToNext(o));
            }),
            f(10, B8, 1, 1, "AngleRightIcon", 6),
            f(11, $8, 2, 1, "span", 7),
            v(),
            f(12, K8, 3, 7, "button", 11),
            f(13, q8, 1, 2, "p-inputNumber", 12),
            f(14, J8, 2, 7, "p-dropdown", 13),
            f(15, eV, 2, 5, "div", 14),
            v();
        }
        if (2 & t) {
          const e = p();
          ne(e.styleClass),
            d("ngStyle", e.style)("ngClass", "p-paginator p-component"),
            x("data-pc-section", "paginator")("data-pc-section", "root"),
            g(1),
            d("ngIf", e.templateLeft),
            g(1),
            d("ngIf", e.showCurrentPageReport),
            g(1),
            d("ngIf", e.showFirstLastIcon),
            g(1),
            d("disabled", e.isFirstPage() || e.empty())(
              "ngClass",
              Q(25, mu, e.isFirstPage() || e.empty())
            ),
            x("aria-label", e.getAriaLabel("prevPageLabel")),
            g(1),
            d("ngIf", !e.previousPageLinkIconTemplate),
            g(1),
            d("ngIf", e.previousPageLinkIconTemplate),
            g(1),
            d("ngIf", e.showPageLinks),
            g(1),
            d("ngIf", e.showJumpToPageDropdown),
            g(1),
            d("disabled", e.isLastPage() || e.empty())(
              "ngClass",
              Q(27, mu, e.isLastPage() || e.empty())
            ),
            x("aria-label", e.getAriaLabel("nextPageLabel")),
            g(1),
            d("ngIf", !e.nextPageLinkIconTemplate),
            g(1),
            d("ngIf", e.nextPageLinkIconTemplate),
            g(1),
            d("ngIf", e.showFirstLastIcon),
            g(1),
            d("ngIf", e.showJumpToPageInput),
            g(1),
            d("ngIf", e.rowsPerPageOptions),
            g(1),
            d("ngIf", e.templateRight);
        }
      }
      let nV = (() => {
          class t {
            cd;
            config;
            pageLinkSize = 5;
            style;
            styleClass;
            alwaysShow = !0;
            dropdownAppendTo;
            templateLeft;
            templateRight;
            appendTo;
            dropdownScrollHeight = "200px";
            currentPageReportTemplate = "{currentPage} of {totalPages}";
            showCurrentPageReport;
            showFirstLastIcon = !0;
            totalRecords = 0;
            rows = 0;
            rowsPerPageOptions;
            showJumpToPageDropdown;
            showJumpToPageInput;
            showPageLinks = !0;
            locale;
            dropdownItemTemplate;
            get first() {
              return this._first;
            }
            set first(e) {
              this._first = e;
            }
            onPageChange = new L();
            templates;
            firstPageLinkIconTemplate;
            previousPageLinkIconTemplate;
            lastPageLinkIconTemplate;
            nextPageLinkIconTemplate;
            pageLinks;
            pageItems;
            rowsPerPageItems;
            paginatorState;
            _first = 0;
            _page = 0;
            constructor(e, i) {
              (this.cd = e), (this.config = i);
            }
            ngOnInit() {
              this.updatePaginatorState();
            }
            getAriaLabel(e) {
              return this.config.translation.aria
                ? this.config.translation.aria[e]
                : void 0;
            }
            getLocalization(e) {
              const i = [
                  ...new Intl.NumberFormat(this.locale, {
                    useGrouping: !1,
                  }).format(9876543210),
                ].reverse(),
                o = new Map(i.map((r, s) => [s, r]));
              return e > 9
                ? String(e)
                    .split("")
                    .map((s) => o.get(Number(s)))
                    .join("")
                : o.get(e);
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "firstpagelinkicon":
                    this.firstPageLinkIconTemplate = e.template;
                    break;
                  case "previouspagelinkicon":
                    this.previousPageLinkIconTemplate = e.template;
                    break;
                  case "lastpagelinkicon":
                    this.lastPageLinkIconTemplate = e.template;
                    break;
                  case "nextpagelinkicon":
                    this.nextPageLinkIconTemplate = e.template;
                }
              });
            }
            ngOnChanges(e) {
              e.totalRecords &&
                (this.updatePageLinks(),
                this.updatePaginatorState(),
                this.updateFirst(),
                this.updateRowsPerPageOptions()),
                e.first &&
                  ((this._first = e.first.currentValue),
                  this.updatePageLinks(),
                  this.updatePaginatorState()),
                e.rows && (this.updatePageLinks(), this.updatePaginatorState()),
                e.rowsPerPageOptions && this.updateRowsPerPageOptions();
            }
            updateRowsPerPageOptions() {
              if (this.rowsPerPageOptions) {
                this.rowsPerPageItems = [];
                for (let e of this.rowsPerPageOptions)
                  "object" == typeof e && e.showAll
                    ? this.rowsPerPageItems.unshift({
                        label: e.showAll,
                        value: this.totalRecords,
                      })
                    : this.rowsPerPageItems.push({
                        label: String(this.getLocalization(e)),
                        value: e,
                      });
              }
            }
            isFirstPage() {
              return 0 === this.getPage();
            }
            isLastPage() {
              return this.getPage() === this.getPageCount() - 1;
            }
            getPageCount() {
              return Math.ceil(this.totalRecords / this.rows);
            }
            calculatePageLinkBoundaries() {
              let e = this.getPageCount(),
                i = Math.min(this.pageLinkSize, e),
                o = Math.max(0, Math.ceil(this.getPage() - i / 2)),
                r = Math.min(e - 1, o + i - 1);
              return (
                (o = Math.max(0, o - (this.pageLinkSize - (r - o + 1)))), [o, r]
              );
            }
            updatePageLinks() {
              this.pageLinks = [];
              let e = this.calculatePageLinkBoundaries(),
                o = e[1];
              for (let r = e[0]; r <= o; r++) this.pageLinks.push(r + 1);
              if (this.showJumpToPageDropdown) {
                this.pageItems = [];
                for (let r = 0; r < this.getPageCount(); r++)
                  this.pageItems.push({ label: String(r + 1), value: r });
              }
            }
            changePage(e) {
              var i = this.getPageCount();
              if (e >= 0 && e < i) {
                this._first = this.rows * e;
                var o = {
                  page: e,
                  first: this.first,
                  rows: this.rows,
                  pageCount: i,
                };
                this.updatePageLinks(),
                  this.onPageChange.emit(o),
                  this.updatePaginatorState();
              }
            }
            updateFirst() {
              const e = this.getPage();
              e > 0 &&
                this.totalRecords &&
                this.first >= this.totalRecords &&
                Promise.resolve(null).then(() => this.changePage(e - 1));
            }
            getPage() {
              return Math.floor(this.first / this.rows);
            }
            changePageToFirst(e) {
              this.isFirstPage() || this.changePage(0), e.preventDefault();
            }
            changePageToPrev(e) {
              this.changePage(this.getPage() - 1), e.preventDefault();
            }
            changePageToNext(e) {
              this.changePage(this.getPage() + 1), e.preventDefault();
            }
            changePageToLast(e) {
              this.isLastPage() || this.changePage(this.getPageCount() - 1),
                e.preventDefault();
            }
            onPageLinkClick(e, i) {
              this.changePage(i), e.preventDefault();
            }
            onRppChange(e) {
              this.changePage(this.getPage());
            }
            onPageDropdownChange(e) {
              this.changePage(e.value);
            }
            updatePaginatorState() {
              this.paginatorState = {
                page: this.getPage(),
                pageCount: this.getPageCount(),
                rows: this.rows,
                first: this.first,
                totalRecords: this.totalRecords,
              };
            }
            empty() {
              return 0 === this.getPageCount();
            }
            currentPage() {
              return this.getPageCount() > 0 ? this.getPage() + 1 : 0;
            }
            get currentPageReport() {
              return this.currentPageReportTemplate
                .replace("{currentPage}", String(this.currentPage()))
                .replace("{totalPages}", String(this.getPageCount()))
                .replace(
                  "{first}",
                  String(this.totalRecords > 0 ? this._first + 1 : 0)
                )
                .replace(
                  "{last}",
                  String(Math.min(this._first + this.rows, this.totalRecords))
                )
                .replace("{rows}", String(this.rows))
                .replace("{totalRecords}", String(this.totalRecords));
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Ct), D(Ri));
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-paginator"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              hostAttrs: [1, "p-element"],
              inputs: {
                pageLinkSize: "pageLinkSize",
                style: "style",
                styleClass: "styleClass",
                alwaysShow: "alwaysShow",
                dropdownAppendTo: "dropdownAppendTo",
                templateLeft: "templateLeft",
                templateRight: "templateRight",
                appendTo: "appendTo",
                dropdownScrollHeight: "dropdownScrollHeight",
                currentPageReportTemplate: "currentPageReportTemplate",
                showCurrentPageReport: "showCurrentPageReport",
                showFirstLastIcon: "showFirstLastIcon",
                totalRecords: "totalRecords",
                rows: "rows",
                rowsPerPageOptions: "rowsPerPageOptions",
                showJumpToPageDropdown: "showJumpToPageDropdown",
                showJumpToPageInput: "showJumpToPageInput",
                showPageLinks: "showPageLinks",
                locale: "locale",
                dropdownItemTemplate: "dropdownItemTemplate",
                first: "first",
              },
              outputs: { onPageChange: "onPageChange" },
              features: [_t],
              decls: 1,
              vars: 1,
              consts: [
                [3, "class", "ngStyle", "ngClass", 4, "ngIf"],
                [3, "ngStyle", "ngClass"],
                ["class", "p-paginator-left-content", 4, "ngIf"],
                ["class", "p-paginator-current", 4, "ngIf"],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  "class",
                  "p-paginator-first p-paginator-element p-link",
                  3,
                  "disabled",
                  "ngClass",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-paginator-prev",
                  "p-paginator-element",
                  "p-link",
                  3,
                  "disabled",
                  "ngClass",
                  "click",
                ],
                [3, "styleClass", 4, "ngIf"],
                ["class", "p-paginator-icon", 4, "ngIf"],
                ["class", "p-paginator-pages", 4, "ngIf"],
                [
                  "styleClass",
                  "p-paginator-page-options",
                  3,
                  "options",
                  "ngModel",
                  "disabled",
                  "appendTo",
                  "scrollHeight",
                  "onChange",
                  4,
                  "ngIf",
                ],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-paginator-next",
                  "p-paginator-element",
                  "p-link",
                  3,
                  "disabled",
                  "ngClass",
                  "click",
                ],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  "class",
                  "p-paginator-last p-paginator-element p-link",
                  3,
                  "disabled",
                  "ngClass",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "p-paginator-page-input",
                  3,
                  "ngModel",
                  "disabled",
                  "ngModelChange",
                  4,
                  "ngIf",
                ],
                [
                  "styleClass",
                  "p-paginator-rpp-options",
                  3,
                  "options",
                  "ngModel",
                  "disabled",
                  "appendTo",
                  "scrollHeight",
                  "ariaLabel",
                  "ngModelChange",
                  "onChange",
                  4,
                  "ngIf",
                ],
                ["class", "p-paginator-right-content", 4, "ngIf"],
                [1, "p-paginator-left-content"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "p-paginator-current"],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-paginator-first",
                  "p-paginator-element",
                  "p-link",
                  3,
                  "disabled",
                  "ngClass",
                  "click",
                ],
                [3, "styleClass"],
                [1, "p-paginator-icon"],
                [4, "ngTemplateOutlet"],
                [1, "p-paginator-pages"],
                [
                  "type",
                  "button",
                  "class",
                  "p-paginator-page p-paginator-element p-link",
                  "pRipple",
                  "",
                  3,
                  "ngClass",
                  "click",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-paginator-page",
                  "p-paginator-element",
                  "p-link",
                  3,
                  "ngClass",
                  "click",
                ],
                [
                  "styleClass",
                  "p-paginator-page-options",
                  3,
                  "options",
                  "ngModel",
                  "disabled",
                  "appendTo",
                  "scrollHeight",
                  "onChange",
                ],
                ["pTemplate", "selectedItem"],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-paginator-last",
                  "p-paginator-element",
                  "p-link",
                  3,
                  "disabled",
                  "ngClass",
                  "click",
                ],
                [
                  1,
                  "p-paginator-page-input",
                  3,
                  "ngModel",
                  "disabled",
                  "ngModelChange",
                ],
                [
                  "styleClass",
                  "p-paginator-rpp-options",
                  3,
                  "options",
                  "ngModel",
                  "disabled",
                  "appendTo",
                  "scrollHeight",
                  "ariaLabel",
                  "ngModelChange",
                  "onChange",
                ],
                [4, "ngIf"],
                ["pTemplate", "item"],
                [1, "p-paginator-right-content"],
              ],
              template: function (i, o) {
                1 & i && f(0, tV, 16, 29, "div", 0),
                  2 & i &&
                    d(
                      "ngIf",
                      !!o.alwaysShow || (o.pageLinks && o.pageLinks.length > 1)
                    );
              },
              dependencies: function () {
                return [
                  Bt,
                  Oi,
                  wt,
                  St,
                  Xt,
                  gu,
                  It,
                  dg,
                  va,
                  io,
                  Ao,
                  eS,
                  tS,
                  nS,
                  iS,
                ];
              },
              styles: [
                "@layer primeng{.p-paginator{display:flex;align-items:center;justify-content:center;flex-wrap:wrap}.p-paginator-left-content{margin-right:auto}.p-paginator-right-content{margin-left:auto}.p-paginator-page,.p-paginator-next,.p-paginator-last,.p-paginator-first,.p-paginator-prev,.p-paginator-current{cursor:pointer;display:inline-flex;align-items:center;justify-content:center;line-height:1;-webkit-user-select:none;user-select:none;overflow:hidden;position:relative}.p-paginator-element:focus{z-index:1;position:relative}}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            });
          }
          return t;
        })(),
        iV = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({
              imports: [pt, xa, pg, Sa, ht, Wr, eS, tS, nS, iS, xa, pg, Sa, ht],
            });
          }
          return t;
        })();
      const oV = ["container"];
      function rV(t, n) {
        1 & t && k(0, "span", 8),
          2 & t &&
            (ne(p(2).$implicit.icon),
            d("ngClass", "p-button-icon p-button-icon-left"),
            x("data-pc-section", "icon"));
      }
      function sV(t, n) {
        if (
          (1 & t &&
            (H(0), f(1, rV, 1, 4, "span", 6), y(2, "span", 7), B(3), v(), z()),
          2 & t)
        ) {
          const e = p().$implicit,
            i = p();
          g(1),
            d("ngIf", e.icon),
            g(1),
            x("data-pc-section", "label"),
            g(1),
            Le(i.getOptionLabel(e));
        }
      }
      function aV(t, n) {
        1 & t && j(0);
      }
      const lV = function (t, n) {
        return { $implicit: t, index: n };
      };
      function cV(t, n) {
        if ((1 & t && f(0, aV, 1, 0, "ng-container", 9), 2 & t)) {
          const e = p(),
            i = e.$implicit,
            o = e.index;
          d("ngTemplateOutlet", p().selectButtonTemplate)(
            "ngTemplateOutletContext",
            Ze(2, lV, i, o)
          );
        }
      }
      const uV = function (t, n, e) {
        return { "p-highlight": t, "p-disabled": n, "p-button-icon-only": e };
      };
      function dV(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 3),
            A("click", function (o) {
              const r = T(e),
                s = r.$implicit,
                a = r.index;
              return S(p().onOptionSelect(o, s, a));
            })("keydown", function (o) {
              const r = T(e),
                s = r.$implicit,
                a = r.index;
              return S(p().onKeyDown(o, s, a));
            })("focus", function (o) {
              const s = T(e).index;
              return S(p().onFocus(o, s));
            })("blur", function () {
              return T(e), S(p().onBlur());
            }),
            f(1, sV, 4, 3, "ng-container", 4),
            f(2, cV, 1, 5, "ng-template", null, 5, Yt),
            v();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = n.index,
            o = rt(3),
            r = p();
          ne(e.styleClass),
            d("role", r.multiple ? "checkbox" : "radio")(
              "ngClass",
              kn(
                14,
                uV,
                r.isSelected(e),
                r.disabled || r.isOptionDisabled(e),
                e.icon && !r.getOptionLabel(e)
              )
            ),
            x("tabindex", i === r.focusedIndex ? "0" : "-1")(
              "aria-label",
              e.label
            )("aria-checked", r.isSelected(e))(
              "aria-disabled",
              r.optionDisabled
            )("aria-pressed", r.isSelected(e))("title", e.title)(
              "aria-labelledby",
              r.getOptionLabel(e)
            )("data-pc-section", "button"),
            g(1),
            d("ngIf", !r.itemTemplate)("ngIfElse", o);
        }
      }
      const pV = { provide: Rt, useExisting: Te(() => hV), multi: !0 };
      let hV = (() => {
          class t {
            cd;
            options;
            optionLabel;
            optionValue;
            optionDisabled;
            unselectable = !1;
            tabindex = 0;
            multiple;
            allowEmpty = !0;
            style;
            styleClass;
            ariaLabelledBy;
            disabled;
            dataKey;
            onOptionClick = new L();
            onChange = new L();
            container;
            itemTemplate;
            get selectButtonTemplate() {
              return this.itemTemplate?.template;
            }
            get equalityKey() {
              return this.optionValue ? null : this.dataKey;
            }
            value;
            onModelChange = () => {};
            onModelTouched = () => {};
            focusedIndex = 0;
            constructor(e) {
              this.cd = e;
            }
            getOptionLabel(e) {
              return this.optionLabel
                ? P.resolveFieldData(e, this.optionLabel)
                : null != e.label
                ? e.label
                : e;
            }
            getOptionValue(e) {
              return this.optionValue
                ? P.resolveFieldData(e, this.optionValue)
                : this.optionLabel || void 0 === e.value
                ? e
                : e.value;
            }
            isOptionDisabled(e) {
              return this.optionDisabled
                ? P.resolveFieldData(e, this.optionDisabled)
                : void 0 !== e.disabled && e.disabled;
            }
            writeValue(e) {
              (this.value = e), this.cd.markForCheck();
            }
            registerOnChange(e) {
              this.onModelChange = e;
            }
            registerOnTouched(e) {
              this.onModelTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e), this.cd.markForCheck();
            }
            onOptionSelect(e, i, o) {
              if (this.disabled || this.isOptionDisabled(i)) return;
              let r = this.isSelected(i);
              if (r && this.unselectable) return;
              let a,
                s = this.getOptionValue(i);
              if (this.multiple)
                a = r
                  ? this.value.filter((l) => !P.equals(l, s, this.equalityKey))
                  : this.value
                  ? [...this.value, s]
                  : [s];
              else {
                if (r && !this.allowEmpty) return;
                a = r ? null : s;
              }
              (this.focusedIndex = o),
                (this.value = a),
                this.onModelChange(this.value),
                this.onChange.emit({ originalEvent: e, value: this.value }),
                this.onOptionClick.emit({
                  originalEvent: e,
                  option: i,
                  index: o,
                });
            }
            onKeyDown(e, i, o) {
              switch (e.code) {
                case "Space":
                  this.onOptionSelect(e, i, o), e.preventDefault();
                  break;
                case "ArrowDown":
                case "ArrowRight":
                  this.changeTabIndexes(e, "next"), e.preventDefault();
                  break;
                case "ArrowUp":
                case "ArrowLeft":
                  this.changeTabIndexes(e, "prev"), e.preventDefault();
              }
            }
            changeTabIndexes(e, i) {
              let o, r;
              for (
                let s = 0;
                s <= this.container.nativeElement.children.length - 1;
                s++
              )
                "0" ===
                  this.container.nativeElement.children[s].getAttribute(
                    "tabindex"
                  ) &&
                  (o = {
                    elem: this.container.nativeElement.children[s],
                    index: s,
                  });
              (r =
                "prev" === i
                  ? 0 === o.index
                    ? this.container.nativeElement.children.length - 1
                    : o.index - 1
                  : o.index === this.container.nativeElement.children.length - 1
                  ? 0
                  : o.index + 1),
                (this.focusedIndex = r),
                this.container.nativeElement.children[r].focus();
            }
            onFocus(e, i) {
              this.focusedIndex = i;
            }
            onBlur() {
              this.onModelTouched();
            }
            removeOption(e) {
              this.value = this.value.filter(
                (i) => !P.equals(i, this.getOptionValue(e), this.dataKey)
              );
            }
            isSelected(e) {
              let i = !1;
              const o = this.getOptionValue(e);
              if (this.multiple) {
                if (this.value && Array.isArray(this.value))
                  for (let r of this.value)
                    if (P.equals(r, o, this.dataKey)) {
                      i = !0;
                      break;
                    }
              } else
                i = P.equals(
                  this.getOptionValue(e),
                  this.value,
                  this.equalityKey
                );
              return i;
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Ct));
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-selectButton"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 5), 2 & i)) {
                  let s;
                  J((s = X())) && (o.itemTemplate = s.first);
                }
              },
              viewQuery: function (i, o) {
                if ((1 & i && me(oV, 5), 2 & i)) {
                  let r;
                  J((r = X())) && (o.container = r.first);
                }
              },
              hostAttrs: [1, "p-element"],
              inputs: {
                options: "options",
                optionLabel: "optionLabel",
                optionValue: "optionValue",
                optionDisabled: "optionDisabled",
                unselectable: "unselectable",
                tabindex: "tabindex",
                multiple: "multiple",
                allowEmpty: "allowEmpty",
                style: "style",
                styleClass: "styleClass",
                ariaLabelledBy: "ariaLabelledBy",
                disabled: "disabled",
                dataKey: "dataKey",
              },
              outputs: { onOptionClick: "onOptionClick", onChange: "onChange" },
              features: [Ee([pV])],
              decls: 3,
              vars: 8,
              consts: [
                ["role", "group", 3, "ngClass", "ngStyle"],
                ["container", ""],
                [
                  "pRipple",
                  "",
                  "class",
                  "p-button p-component",
                  3,
                  "role",
                  "class",
                  "ngClass",
                  "click",
                  "keydown",
                  "focus",
                  "blur",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  "pRipple",
                  "",
                  1,
                  "p-button",
                  "p-component",
                  3,
                  "role",
                  "ngClass",
                  "click",
                  "keydown",
                  "focus",
                  "blur",
                ],
                [4, "ngIf", "ngIfElse"],
                ["customcontent", ""],
                [3, "ngClass", "class", 4, "ngIf"],
                [1, "p-button-label"],
                [3, "ngClass"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
              ],
              template: function (i, o) {
                1 & i && (y(0, "div", 0, 1), f(2, dV, 4, 18, "div", 2), v()),
                  2 & i &&
                    (ne(o.styleClass),
                    d("ngClass", "p-selectbutton p-buttonset p-component")(
                      "ngStyle",
                      o.style
                    ),
                    x("aria-labelledby", o.ariaLabelledBy)(
                      "data-pc-name",
                      "selectbutton"
                    )("data-pc-section", "root"),
                    g(2),
                    d("ngForOf", o.options));
              },
              dependencies: [Bt, Oi, wt, St, Xt, Ao],
              styles: [
                '@layer primeng{.p-button{margin:0;display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{flex:1 1 auto}.p-button-icon-right{order:1}.p-button:disabled{cursor:default;pointer-events:none}.p-button-icon-only{justify-content:center}.p-button-icon-only:after{content:"p";visibility:hidden;clip:rect(0 0 0 0);width:0}.p-button-vertical{flex-direction:column}.p-button-icon-bottom{order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0 none}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}p-button[iconpos=right] spinnericon{order:1}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            });
          }
          return t;
        })(),
        fV = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt, Wr, ht, ht] });
          }
          return t;
        })(),
        ko = (() => {
          class t extends Je {
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["CheckIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 2,
              vars: 5,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M4.86199 11.5948C4.78717 11.5923 4.71366 11.5745 4.64596 11.5426C4.57826 11.5107 4.51779 11.4652 4.46827 11.4091L0.753985 7.69483C0.683167 7.64891 0.623706 7.58751 0.580092 7.51525C0.536478 7.44299 0.509851 7.36177 0.502221 7.27771C0.49459 7.19366 0.506156 7.10897 0.536046 7.03004C0.565935 6.95111 0.613367 6.88 0.674759 6.82208C0.736151 6.76416 0.8099 6.72095 0.890436 6.69571C0.970973 6.67046 1.05619 6.66385 1.13966 6.67635C1.22313 6.68886 1.30266 6.72017 1.37226 6.76792C1.44186 6.81567 1.4997 6.8786 1.54141 6.95197L4.86199 10.2503L12.6397 2.49483C12.7444 2.42694 12.8689 2.39617 12.9932 2.40745C13.1174 2.41873 13.2343 2.47141 13.3251 2.55705C13.4159 2.64268 13.4753 2.75632 13.4938 2.87973C13.5123 3.00315 13.4888 3.1292 13.4271 3.23768L5.2557 11.4091C5.20618 11.4652 5.14571 11.5107 5.07801 11.5426C5.01031 11.5745 4.9368 11.5923 4.86199 11.5948Z",
                  "fill",
                  "currentColor",
                ],
              ],
              template: function (i, o) {
                1 & i && (We(), y(0, "svg", 0), k(1, "path", 1), v()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ));
              },
              encapsulation: 2,
            });
          }
          return t;
        })();
      function gV(t, n) {
        1 & t && k(0, "span", 8),
          2 & t &&
            (d("ngClass", p(2).checkboxTrueIcon),
            x("data-pc-section", "checkIcon"));
      }
      function mV(t, n) {
        1 & t && k(0, "CheckIcon", 11),
          2 & t &&
            (d("styleClass", "p-checkbox-icon"),
            x("data-pc-section", "checkIcon"));
      }
      function _V(t, n) {}
      function yV(t, n) {
        1 & t && f(0, _V, 0, 0, "ng-template");
      }
      function vV(t, n) {
        if (
          (1 & t && (y(0, "span", 12), f(1, yV, 1, 0, null, 13), v()), 2 & t)
        ) {
          const e = p(3);
          x("data-pc-section", "checkIcon"),
            g(1),
            d("ngTemplateOutlet", e.checkIconTemplate);
        }
      }
      function bV(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, mV, 1, 2, "CheckIcon", 9),
            f(2, vV, 2, 2, "span", 10),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", !e.checkIconTemplate),
            g(1),
            d("ngIf", e.checkIconTemplate);
        }
      }
      function CV(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, gV, 1, 2, "span", 7),
            f(2, bV, 3, 2, "ng-container", 5),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1),
            d("ngIf", e.checkboxTrueIcon),
            g(1),
            d("ngIf", !e.checkboxTrueIcon);
        }
      }
      function wV(t, n) {
        1 & t && k(0, "span", 8),
          2 & t &&
            (d("ngClass", p(2).checkboxFalseIcon),
            x("data-pc-section", "uncheckIcon"));
      }
      function TV(t, n) {
        1 & t && k(0, "TimesIcon", 11),
          2 & t &&
            (d("styleClass", "p-checkbox-icon"),
            x("data-pc-section", "uncheckIcon"));
      }
      function SV(t, n) {}
      function IV(t, n) {
        1 & t && f(0, SV, 0, 0, "ng-template");
      }
      function DV(t, n) {
        if (
          (1 & t && (y(0, "span", 12), f(1, IV, 1, 0, null, 13), v()), 2 & t)
        ) {
          const e = p(3);
          x("data-pc-section", "uncheckIcon"),
            g(1),
            d("ngTemplateOutlet", e.uncheckIconTemplate);
        }
      }
      function EV(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, TV, 1, 2, "TimesIcon", 9),
            f(2, DV, 2, 2, "span", 10),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", !e.uncheckIconTemplate),
            g(1),
            d("ngIf", e.uncheckIconTemplate);
        }
      }
      function xV(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, wV, 1, 2, "span", 7),
            f(2, EV, 3, 2, "ng-container", 5),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1),
            d("ngIf", e.checkboxFalseIcon),
            g(1),
            d("ngIf", !e.checkboxFalseIcon);
        }
      }
      const MV = function (t, n, e) {
        return {
          "p-checkbox-label-active": t,
          "p-disabled": n,
          "p-checkbox-label-focus": e,
        };
      };
      function OV(t, n) {
        if ((1 & t && (y(0, "label", 14), B(1), v()), 2 & t)) {
          const e = p();
          d("ngClass", kn(3, MV, null != e.value, e.disabled, e.focused)),
            x("for", e.inputId),
            g(1),
            Le(e.label);
        }
      }
      const AV = function (t, n) {
          return {
            "p-checkbox p-component": !0,
            "p-checkbox-disabled": t,
            "p-checkbox-focused": n,
          };
        },
        kV = function (t, n, e) {
          return { "p-highlight": t, "p-disabled": n, "p-focus": e };
        },
        RV = { provide: Rt, useExisting: Te(() => oS), multi: !0 };
      let oS = (() => {
          class t {
            cd;
            constructor(e) {
              this.cd = e;
            }
            disabled;
            name;
            ariaLabel;
            ariaLabelledBy;
            tabindex;
            inputId;
            style;
            styleClass;
            label;
            readonly;
            checkboxTrueIcon;
            checkboxFalseIcon;
            onChange = new L();
            templates;
            checkIconTemplate;
            uncheckIconTemplate;
            focused;
            value;
            onModelChange = () => {};
            onModelTouched = () => {};
            onClick(e, i) {
              !this.disabled &&
                !this.readonly &&
                (this.toggle(e), (this.focused = !0), i.focus());
            }
            onKeyDown(e) {
              "Enter" === e.key && (this.toggle(e), e.preventDefault());
            }
            toggle(e) {
              null == this.value || null == this.value
                ? (this.value = !0)
                : 1 == this.value
                ? (this.value = !1)
                : 0 == this.value && (this.value = null),
                this.onModelChange(this.value),
                this.onChange.emit({ originalEvent: e, value: this.value });
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "checkicon":
                    this.checkIconTemplate = e.template;
                    break;
                  case "uncheckicon":
                    this.uncheckIconTemplate = e.template;
                }
              });
            }
            onFocus() {
              this.focused = !0;
            }
            onBlur() {
              (this.focused = !1), this.onModelTouched();
            }
            registerOnChange(e) {
              this.onModelChange = e;
            }
            registerOnTouched(e) {
              this.onModelTouched = e;
            }
            writeValue(e) {
              (this.value = e), this.cd.markForCheck();
            }
            setDisabledState(e) {
              (this.disabled = e), this.cd.markForCheck();
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Ct));
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-triStateCheckbox"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              hostAttrs: [1, "p-element"],
              inputs: {
                disabled: "disabled",
                name: "name",
                ariaLabel: "ariaLabel",
                ariaLabelledBy: "ariaLabelledBy",
                tabindex: "tabindex",
                inputId: "inputId",
                style: "style",
                styleClass: "styleClass",
                label: "label",
                readonly: "readonly",
                checkboxTrueIcon: "checkboxTrueIcon",
                checkboxFalseIcon: "checkboxFalseIcon",
              },
              outputs: { onChange: "onChange" },
              features: [Ee([RV])],
              decls: 8,
              vars: 26,
              consts: [
                [3, "ngStyle", "ngClass", "click"],
                [1, "p-hidden-accessible"],
                [
                  "type",
                  "checkbox",
                  "inputmode",
                  "none",
                  3,
                  "name",
                  "readonly",
                  "disabled",
                  "keydown",
                  "focus",
                  "blur",
                ],
                ["input", ""],
                ["role", "checkbox", 1, "p-checkbox-box", 3, "ngClass"],
                [4, "ngIf"],
                ["class", "p-tristatecheckbox-label", 3, "ngClass", 4, "ngIf"],
                ["class", "p-checkbox-icon", 3, "ngClass", 4, "ngIf"],
                [1, "p-checkbox-icon", 3, "ngClass"],
                [3, "styleClass", 4, "ngIf"],
                ["class", "p-checkbox-icon", 4, "ngIf"],
                [3, "styleClass"],
                [1, "p-checkbox-icon"],
                [4, "ngTemplateOutlet"],
                [1, "p-tristatecheckbox-label", 3, "ngClass"],
              ],
              template: function (i, o) {
                if (1 & i) {
                  const r = N();
                  y(0, "div", 0),
                    A("click", function (a) {
                      T(r);
                      const l = rt(3);
                      return S(o.onClick(a, l));
                    }),
                    y(1, "div", 1)(2, "input", 2, 3),
                    A("keydown", function (a) {
                      return o.onKeyDown(a);
                    })("focus", function () {
                      return o.onFocus();
                    })("blur", function () {
                      return o.onBlur();
                    }),
                    v()(),
                    y(4, "div", 4),
                    f(5, CV, 3, 2, "ng-container", 5),
                    f(6, xV, 3, 2, "ng-container", 5),
                    v()(),
                    f(7, OV, 2, 7, "label", 6);
                }
                2 & i &&
                  (ne(o.styleClass),
                  d("ngStyle", o.style)(
                    "ngClass",
                    Ze(19, AV, o.disabled, o.focused)
                  ),
                  x("data-pc-name", "tristatecheckbox")(
                    "data-pc-section",
                    "root"
                  ),
                  g(2),
                  d("name", o.name)("readonly", o.readonly)(
                    "disabled",
                    o.disabled
                  ),
                  x("id", o.inputId)("tabindex", o.tabindex)(
                    "aria-labelledby",
                    o.ariaLabelledBy
                  )("aria-label", o.ariaLabel)(
                    "data-pc-section",
                    "hiddenInput"
                  ),
                  g(2),
                  d(
                    "ngClass",
                    kn(22, kV, null != o.value, o.disabled, o.focused)
                  ),
                  x("aria-checked", !0 === o.value),
                  g(1),
                  d("ngIf", !0 === o.value),
                  g(1),
                  d("ngIf", !1 === o.value),
                  g(1),
                  d("ngIf", o.label));
              },
              dependencies: function () {
                return [Bt, wt, St, Xt, ko, li];
              },
              encapsulation: 2,
              changeDetection: 0,
            });
          }
          return t;
        })(),
        FV = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt, ht, ko, li, ht] });
          }
          return t;
        })(),
        rS = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["ArrowDownIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 6,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "fill-rule",
                  "evenodd",
                  "clip-rule",
                  "evenodd",
                  "d",
                  "M6.99994 14C6.91097 14.0004 6.82281 13.983 6.74064 13.9489C6.65843 13.9148 6.58387 13.8646 6.52133 13.8013L1.10198 8.38193C0.982318 8.25351 0.917175 8.08367 0.920272 7.90817C0.923368 7.73267 0.994462 7.56523 1.11858 7.44111C1.24269 7.317 1.41014 7.2459 1.58563 7.2428C1.76113 7.23971 1.93098 7.30485 2.0594 7.42451L6.32263 11.6877V0.677419C6.32263 0.497756 6.394 0.325452 6.52104 0.198411C6.64808 0.0713706 6.82039 0 7.00005 0C7.17971 0 7.35202 0.0713706 7.47906 0.198411C7.6061 0.325452 7.67747 0.497756 7.67747 0.677419V11.6877L11.9407 7.42451C12.0691 7.30485 12.2389 7.23971 12.4144 7.2428C12.5899 7.2459 12.7574 7.317 12.8815 7.44111C13.0056 7.56523 13.0767 7.73267 13.0798 7.90817C13.0829 8.08367 13.0178 8.25351 12.8981 8.38193L7.47875 13.8013C7.41621 13.8646 7.34164 13.9148 7.25944 13.9489C7.17727 13.983 7.08912 14.0004 7.00015 14C7.00012 14 7.00009 14 7.00005 14C7.00001 14 6.99998 14 6.99994 14Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1),
                  v(),
                  y(3, "defs")(4, "clipPath", 2),
                  k(5, "rect", 3),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(3),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        sS = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["ArrowUpIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 6,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "fill-rule",
                  "evenodd",
                  "clip-rule",
                  "evenodd",
                  "d",
                  "M6.51551 13.799C6.64205 13.9255 6.813 13.9977 6.99193 14C7.17087 13.9977 7.34182 13.9255 7.46835 13.799C7.59489 13.6725 7.66701 13.5015 7.66935 13.3226V2.31233L11.9326 6.57554C11.9951 6.63887 12.0697 6.68907 12.1519 6.72319C12.2341 6.75731 12.3223 6.77467 12.4113 6.77425C12.5003 6.77467 12.5885 6.75731 12.6707 6.72319C12.7529 6.68907 12.8274 6.63887 12.89 6.57554C13.0168 6.44853 13.0881 6.27635 13.0881 6.09683C13.0881 5.91732 13.0168 5.74514 12.89 5.61812L7.48846 0.216594C7.48274 0.210436 7.4769 0.204374 7.47094 0.198411C7.3439 0.0713707 7.1716 0 6.99193 0C6.81227 0 6.63997 0.0713707 6.51293 0.198411C6.50704 0.204296 6.50128 0.210278 6.49563 0.216354L1.09386 5.61812C0.974201 5.74654 0.909057 5.91639 0.912154 6.09189C0.91525 6.26738 0.986345 6.43483 1.11046 6.55894C1.23457 6.68306 1.40202 6.75415 1.57752 6.75725C1.75302 6.76035 1.92286 6.6952 2.05128 6.57554L6.31451 2.31231V13.3226C6.31685 13.5015 6.38898 13.6725 6.51551 13.799Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1),
                  v(),
                  y(3, "defs")(4, "clipPath", 2),
                  k(5, "rect", 3),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(3),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        aS = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["FilterIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 6,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M8.64708 14H5.35296C5.18981 13.9979 5.03395 13.9321 4.91858 13.8167C4.8032 13.7014 4.73745 13.5455 4.73531 13.3824V7L0.329431 0.98C0.259794 0.889466 0.217389 0.780968 0.20718 0.667208C0.19697 0.553448 0.219379 0.439133 0.271783 0.337647C0.324282 0.236453 0.403423 0.151519 0.500663 0.0920138C0.597903 0.0325088 0.709548 0.000692754 0.823548 0H13.1765C13.2905 0.000692754 13.4021 0.0325088 13.4994 0.0920138C13.5966 0.151519 13.6758 0.236453 13.7283 0.337647C13.7807 0.439133 13.8031 0.553448 13.7929 0.667208C13.7826 0.780968 13.7402 0.889466 13.6706 0.98L9.26472 7V13.3824C9.26259 13.5455 9.19683 13.7014 9.08146 13.8167C8.96609 13.9321 8.81022 13.9979 8.64708 14ZM5.97061 12.7647H8.02943V6.79412C8.02878 6.66289 8.07229 6.53527 8.15296 6.43177L11.9412 1.23529H2.05884L5.86355 6.43177C5.94422 6.53527 5.98773 6.66289 5.98708 6.79412L5.97061 12.7647Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1),
                  v(),
                  y(3, "defs")(4, "clipPath", 2),
                  k(5, "rect", 3),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(3),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        LV = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["SortAltIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 9,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M5.64515 3.61291C5.47353 3.61291 5.30192 3.54968 5.16644 3.4142L3.38708 1.63484L1.60773 3.4142C1.34579 3.67613 0.912244 3.67613 0.650309 3.4142C0.388374 3.15226 0.388374 2.71871 0.650309 2.45678L2.90837 0.198712C3.17031 -0.0632236 3.60386 -0.0632236 3.86579 0.198712L6.12386 2.45678C6.38579 2.71871 6.38579 3.15226 6.12386 3.4142C5.98837 3.54968 5.81676 3.61291 5.64515 3.61291Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M3.38714 14C3.01681 14 2.70972 13.6929 2.70972 13.3226V0.677419C2.70972 0.307097 3.01681 0 3.38714 0C3.75746 0 4.06456 0.307097 4.06456 0.677419V13.3226C4.06456 13.6929 3.75746 14 3.38714 14Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M10.6129 14C10.4413 14 10.2697 13.9368 10.1342 13.8013L7.87611 11.5432C7.61418 11.2813 7.61418 10.8477 7.87611 10.5858C8.13805 10.3239 8.5716 10.3239 8.83353 10.5858L10.6129 12.3652L12.3922 10.5858C12.6542 10.3239 13.0877 10.3239 13.3497 10.5858C13.6116 10.8477 13.6116 11.2813 13.3497 11.5432L11.0916 13.8013C10.9561 13.9368 10.7845 14 10.6129 14Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M10.6129 14C10.2426 14 9.93552 13.6929 9.93552 13.3226V0.677419C9.93552 0.307097 10.2426 0 10.6129 0C10.9833 0 11.2904 0.307097 11.2904 0.677419V13.3226C11.2904 13.6929 10.9832 14 10.6129 14Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1)(3, "path", 2)(4, "path", 3)(5, "path", 4),
                  v(),
                  y(6, "defs")(7, "clipPath", 5),
                  k(8, "rect", 6),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(6),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        PV = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["SortAmountDownIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 11,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M2.59836 13.2009C2.44634 13.2009 2.29432 13.1449 2.1743 13.0248L0.174024 11.0246C-0.0580081 10.7925 -0.0580081 10.4085 0.174024 10.1764C0.406057 9.94441 0.79011 9.94441 1.02214 10.1764L2.59836 11.7527L4.17458 10.1764C4.40662 9.94441 4.79067 9.94441 5.0227 10.1764C5.25473 10.4085 5.25473 10.7925 5.0227 11.0246L3.02242 13.0248C2.90241 13.1449 2.75038 13.2009 2.59836 13.2009Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M2.59836 13.2009C2.27032 13.2009 1.99833 12.9288 1.99833 12.6008V1.39922C1.99833 1.07117 2.27036 0.799133 2.59841 0.799133C2.92646 0.799133 3.19849 1.07117 3.19849 1.39922V12.6008C3.19849 12.9288 2.92641 13.2009 2.59836 13.2009Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M13.3999 11.2006H6.99902C6.67098 11.2006 6.39894 10.9285 6.39894 10.6005C6.39894 10.2725 6.67098 10.0004 6.99902 10.0004H13.3999C13.728 10.0004 14 10.2725 14 10.6005C14 10.9285 13.728 11.2006 13.3999 11.2006Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M10.1995 6.39991H6.99902C6.67098 6.39991 6.39894 6.12788 6.39894 5.79983C6.39894 5.47179 6.67098 5.19975 6.99902 5.19975H10.1995C10.5275 5.19975 10.7996 5.47179 10.7996 5.79983C10.7996 6.12788 10.5275 6.39991 10.1995 6.39991Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M8.59925 3.99958H6.99902C6.67098 3.99958 6.39894 3.72754 6.39894 3.3995C6.39894 3.07145 6.67098 2.79941 6.99902 2.79941H8.59925C8.92729 2.79941 9.19933 3.07145 9.19933 3.3995C9.19933 3.72754 8.92729 3.99958 8.59925 3.99958Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M11.7997 8.80025H6.99902C6.67098 8.80025 6.39894 8.52821 6.39894 8.20017C6.39894 7.87212 6.67098 7.60008 6.99902 7.60008H11.7997C12.1277 7.60008 12.3998 7.87212 12.3998 8.20017C12.3998 8.52821 12.1277 8.80025 11.7997 8.80025Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1)(3, "path", 2)(4, "path", 3)(5, "path", 4)(
                    6,
                    "path",
                    5
                  )(7, "path", 6),
                  v(),
                  y(8, "defs")(9, "clipPath", 7),
                  k(10, "rect", 8),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(8),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        NV = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["SortAmountUpAltIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 11,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "d",
                  "M4.59864 3.99958C4.44662 3.99958 4.2946 3.94357 4.17458 3.82356L2.59836 2.24734L1.02214 3.82356C0.79011 4.05559 0.406057 4.05559 0.174024 3.82356C-0.0580081 3.59152 -0.0580081 3.20747 0.174024 2.97544L2.1743 0.97516C2.40634 0.743127 2.79039 0.743127 3.02242 0.97516L5.0227 2.97544C5.25473 3.20747 5.25473 3.59152 5.0227 3.82356C4.90268 3.94357 4.75066 3.99958 4.59864 3.99958Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M2.59841 13.2009C2.27036 13.2009 1.99833 12.9288 1.99833 12.6008V1.39922C1.99833 1.07117 2.27036 0.799133 2.59841 0.799133C2.92646 0.799133 3.19849 1.07117 3.19849 1.39922V12.6008C3.19849 12.9288 2.92646 13.2009 2.59841 13.2009Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M13.3999 11.2006H6.99902C6.67098 11.2006 6.39894 10.9285 6.39894 10.6005C6.39894 10.2725 6.67098 10.0004 6.99902 10.0004H13.3999C13.728 10.0004 14 10.2725 14 10.6005C14 10.9285 13.728 11.2006 13.3999 11.2006Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M10.1995 6.39991H6.99902C6.67098 6.39991 6.39894 6.12788 6.39894 5.79983C6.39894 5.47179 6.67098 5.19975 6.99902 5.19975H10.1995C10.5275 5.19975 10.7996 5.47179 10.7996 5.79983C10.7996 6.12788 10.5275 6.39991 10.1995 6.39991Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M8.59925 3.99958H6.99902C6.67098 3.99958 6.39894 3.72754 6.39894 3.3995C6.39894 3.07145 6.67098 2.79941 6.99902 2.79941H8.59925C8.92729 2.79941 9.19933 3.07145 9.19933 3.3995C9.19933 3.72754 8.92729 3.99958 8.59925 3.99958Z",
                  "fill",
                  "currentColor",
                ],
                [
                  "d",
                  "M11.7997 8.80025H6.99902C6.67098 8.80025 6.39894 8.52821 6.39894 8.20017C6.39894 7.87212 6.67098 7.60008 6.99902 7.60008H11.7997C12.1277 7.60008 12.3998 7.87212 12.3998 8.20017C12.3998 8.52821 12.1277 8.80025 11.7997 8.80025Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1)(3, "path", 2)(4, "path", 3)(5, "path", 4)(
                    6,
                    "path",
                    5
                  )(7, "path", 6),
                  v(),
                  y(8, "defs")(9, "clipPath", 7),
                  k(10, "rect", 8),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(8),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        lS = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["FilterSlashIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 6,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "fill-rule",
                  "evenodd",
                  "clip-rule",
                  "evenodd",
                  "d",
                  "M13.4994 0.0920138C13.5967 0.151519 13.6758 0.236453 13.7283 0.337647C13.7807 0.439133 13.8031 0.553448 13.7929 0.667208C13.7827 0.780968 13.7403 0.889466 13.6707 0.98L11.406 4.06823C11.3099 4.19928 11.1656 4.28679 11.005 4.3115C10.8444 4.33621 10.6805 4.2961 10.5495 4.2C10.4184 4.1039 10.3309 3.95967 10.3062 3.79905C10.2815 3.63843 10.3216 3.47458 10.4177 3.34353L11.9412 1.23529H7.41184C7.24803 1.23529 7.09093 1.17022 6.97509 1.05439C6.85926 0.938558 6.79419 0.781457 6.79419 0.617647C6.79419 0.453837 6.85926 0.296736 6.97509 0.180905C7.09093 0.0650733 7.24803 0 7.41184 0H13.1765C13.2905 0.000692754 13.4022 0.0325088 13.4994 0.0920138ZM4.20008 0.181168H4.24126L13.2013 9.03411C13.3169 9.14992 13.3819 9.3069 13.3819 9.47058C13.3819 9.63426 13.3169 9.79124 13.2013 9.90705C13.1445 9.96517 13.0766 10.0112 13.0016 10.0423C12.9266 10.0735 12.846 10.0891 12.7648 10.0882C12.6836 10.0886 12.6032 10.0728 12.5283 10.0417C12.4533 10.0106 12.3853 9.96479 12.3283 9.90705L9.3142 6.92587L9.26479 6.99999V13.3823C9.26265 13.5455 9.19689 13.7014 9.08152 13.8167C8.96615 13.9321 8.81029 13.9979 8.64714 14H5.35302C5.18987 13.9979 5.03401 13.9321 4.91864 13.8167C4.80327 13.7014 4.73751 13.5455 4.73537 13.3823V6.99999L0.329492 1.02117C0.259855 0.930634 0.21745 0.822137 0.207241 0.708376C0.197031 0.594616 0.21944 0.480301 0.271844 0.378815C0.324343 0.277621 0.403484 0.192687 0.500724 0.133182C0.597964 0.073677 0.709609 0.041861 0.823609 0.0411682H3.86243C3.92448 0.0461551 3.9855 0.060022 4.04361 0.0823446C4.10037 0.10735 4.15311 0.140655 4.20008 0.181168ZM8.02949 6.79411C8.02884 6.66289 8.07235 6.53526 8.15302 6.43176L8.42478 6.05293L3.55773 1.23529H2.0589L5.84714 6.43176C5.92781 6.53526 5.97132 6.66289 5.97067 6.79411V12.7647H8.02949V6.79411Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1),
                  v(),
                  y(3, "defs")(4, "clipPath", 2),
                  k(5, "rect", 3),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(3),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })();
      const VV = ["container"],
        BV = ["resizeHelper"],
        HV = ["reorderIndicatorUp"],
        zV = ["reorderIndicatorDown"],
        $V = ["wrapper"],
        jV = ["table"],
        UV = ["thead"],
        GV = ["tfoot"],
        WV = ["scroller"];
      function KV(t, n) {
        1 & t && k(0, "i"),
          2 & t && ne("p-datatable-loading-icon " + p(2).loadingIcon);
      }
      function qV(t, n) {
        1 & t && k(0, "SpinnerIcon", 19),
          2 & t && d("spin", !0)("styleClass", "p-datatable-loading-icon");
      }
      function ZV(t, n) {}
      function YV(t, n) {
        1 & t && f(0, ZV, 0, 0, "ng-template");
      }
      function QV(t, n) {
        if (
          (1 & t && (y(0, "span", 20), f(1, YV, 1, 0, null, 21), v()), 2 & t)
        ) {
          const e = p(3);
          g(1), d("ngTemplateOutlet", e.loadingIconTemplate);
        }
      }
      function JV(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, qV, 1, 2, "SpinnerIcon", 17),
            f(2, QV, 2, 1, "span", 18),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", !e.loadingIconTemplate),
            g(1),
            d("ngIf", e.loadingIconTemplate);
        }
      }
      function XV(t, n) {
        if (
          (1 & t &&
            (y(0, "div", 15),
            f(1, KV, 1, 2, "i", 16),
            f(2, JV, 3, 2, "ng-container", 8),
            v()),
          2 & t)
        ) {
          const e = p();
          g(1), d("ngIf", e.loadingIcon), g(1), d("ngIf", !e.loadingIcon);
        }
      }
      function eB(t, n) {
        1 & t && j(0);
      }
      function tB(t, n) {
        if (
          (1 & t && (y(0, "div", 22), f(1, eB, 1, 0, "ng-container", 21), v()),
          2 & t)
        ) {
          const e = p();
          g(1), d("ngTemplateOutlet", e.captionTemplate);
        }
      }
      function nB(t, n) {
        1 & t && j(0);
      }
      function iB(t, n) {
        1 & t && f(0, nB, 1, 0, "ng-container", 21),
          2 & t &&
            d("ngTemplateOutlet", p(3).paginatorFirstPageLinkIconTemplate);
      }
      function oB(t, n) {
        1 & t && f(0, iB, 1, 1, "ng-template", 24);
      }
      function rB(t, n) {
        1 & t && j(0);
      }
      function sB(t, n) {
        1 & t && f(0, rB, 1, 0, "ng-container", 21),
          2 & t &&
            d("ngTemplateOutlet", p(3).paginatorPreviousPageLinkIconTemplate);
      }
      function aB(t, n) {
        1 & t && f(0, sB, 1, 1, "ng-template", 25);
      }
      function lB(t, n) {
        1 & t && j(0);
      }
      function cB(t, n) {
        1 & t && f(0, lB, 1, 0, "ng-container", 21),
          2 & t &&
            d("ngTemplateOutlet", p(3).paginatorLastPageLinkIconTemplate);
      }
      function uB(t, n) {
        1 & t && f(0, cB, 1, 1, "ng-template", 26);
      }
      function dB(t, n) {
        1 & t && j(0);
      }
      function pB(t, n) {
        1 & t && f(0, dB, 1, 0, "ng-container", 21),
          2 & t &&
            d("ngTemplateOutlet", p(3).paginatorNextPageLinkIconTemplate);
      }
      function hB(t, n) {
        1 & t && f(0, pB, 1, 1, "ng-template", 27);
      }
      function fB(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-paginator", 23),
            A("onPageChange", function (o) {
              return T(e), S(p().onPageChange(o));
            }),
            f(1, oB, 1, 0, null, 8),
            f(2, aB, 1, 0, null, 8),
            f(3, uB, 1, 0, null, 8),
            f(4, hB, 1, 0, null, 8),
            v();
        }
        if (2 & t) {
          const e = p();
          d("rows", e.rows)("first", e.first)("totalRecords", e.totalRecords)(
            "pageLinkSize",
            e.pageLinks
          )("alwaysShow", e.alwaysShowPaginator)(
            "rowsPerPageOptions",
            e.rowsPerPageOptions
          )("templateLeft", e.paginatorLeftTemplate)(
            "templateRight",
            e.paginatorRightTemplate
          )("dropdownAppendTo", e.paginatorDropdownAppendTo)(
            "dropdownScrollHeight",
            e.paginatorDropdownScrollHeight
          )("currentPageReportTemplate", e.currentPageReportTemplate)(
            "showFirstLastIcon",
            e.showFirstLastIcon
          )("dropdownItemTemplate", e.paginatorDropdownItemTemplate)(
            "showCurrentPageReport",
            e.showCurrentPageReport
          )("showJumpToPageDropdown", e.showJumpToPageDropdown)(
            "showJumpToPageInput",
            e.showJumpToPageInput
          )("showPageLinks", e.showPageLinks)(
            "styleClass",
            e.paginatorStyleClass
          )("locale", e.paginatorLocale),
            g(1),
            d("ngIf", e.paginatorFirstPageLinkIconTemplate),
            g(1),
            d("ngIf", e.paginatorPreviousPageLinkIconTemplate),
            g(1),
            d("ngIf", e.paginatorLastPageLinkIconTemplate),
            g(1),
            d("ngIf", e.paginatorNextPageLinkIconTemplate);
        }
      }
      function gB(t, n) {
        1 & t && j(0);
      }
      const cS = function (t, n) {
        return { $implicit: t, options: n };
      };
      function mB(t, n) {
        if ((1 & t && f(0, gB, 1, 0, "ng-container", 31), 2 & t)) {
          const e = n.$implicit,
            i = n.options;
          p(2),
            d("ngTemplateOutlet", rt(10))(
              "ngTemplateOutletContext",
              Ze(2, cS, e, i)
            );
        }
      }
      const _B = function (t) {
        return { height: t };
      };
      function yB(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-scroller", 28, 29),
            A("onLazyLoad", function (o) {
              return T(e), S(p().onLazyItemLoad(o));
            }),
            f(2, mB, 1, 5, "ng-template", 30),
            v();
        }
        if (2 & t) {
          const e = p();
          bt(Q(15, _B, "flex" !== e.scrollHeight ? e.scrollHeight : void 0)),
            d("items", e.processedData)("columns", e.columns)(
              "scrollHeight",
              "flex" !== e.scrollHeight ? void 0 : "100%"
            )("itemSize", e.virtualScrollItemSize || e._virtualRowHeight)(
              "step",
              e.rows
            )("delay", e.lazy ? e.virtualScrollDelay : 0)("inline", !0)(
              "lazy",
              e.lazy
            )("loaderDisabled", !0)("showSpacer", !1)(
              "showLoader",
              e.loadingBodyTemplate
            )("options", e.virtualScrollOptions)("autoSize", !0);
        }
      }
      function vB(t, n) {
        1 & t && j(0);
      }
      const bB = function (t) {
        return { columns: t };
      };
      function CB(t, n) {
        if ((1 & t && (H(0), f(1, vB, 1, 0, "ng-container", 31), z()), 2 & t)) {
          const e = p(),
            i = rt(10);
          g(1),
            d("ngTemplateOutlet", i)(
              "ngTemplateOutletContext",
              Ze(4, cS, e.processedData, Q(2, bB, e.columns))
            );
        }
      }
      function wB(t, n) {
        1 & t && j(0);
      }
      function TB(t, n) {
        1 & t && j(0);
      }
      function SB(t, n) {
        if ((1 & t && k(0, "tbody", 40), 2 & t)) {
          const e = p().options,
            i = p();
          d("value", i.frozenValue)("frozenRows", !0)("pTableBody", e.columns)(
            "pTableBodyTemplate",
            i.frozenBodyTemplate
          )("frozen", !0);
        }
      }
      function IB(t, n) {
        if ((1 & t && k(0, "tbody", 41), 2 & t)) {
          const e = p().options;
          bt(
            "height: calc(" +
              e.spacerStyle.height +
              " - " +
              e.rows.length * e.itemSize +
              "px);"
          );
        }
      }
      function DB(t, n) {
        1 & t && j(0);
      }
      const ro = function (t) {
        return { $implicit: t };
      };
      function EB(t, n) {
        if (
          (1 & t &&
            (y(0, "tfoot", 42, 43), f(2, DB, 1, 0, "ng-container", 31), v()),
          2 & t)
        ) {
          const e = p().options,
            i = p();
          g(2),
            d("ngTemplateOutlet", i.footerGroupedTemplate || i.footerTemplate)(
              "ngTemplateOutletContext",
              Q(2, ro, e.columns)
            );
        }
      }
      const xB = function (t, n, e) {
        return {
          "p-datatable-table": !0,
          "p-datatable-scrollable-table": t,
          "p-datatable-resizable-table": n,
          "p-datatable-resizable-table-fit": e,
        };
      };
      function MB(t, n) {
        if (
          (1 & t &&
            (y(0, "table", 32, 33),
            f(2, wB, 1, 0, "ng-container", 31),
            y(3, "thead", 34, 35),
            f(5, TB, 1, 0, "ng-container", 31),
            v(),
            f(6, SB, 1, 5, "tbody", 36),
            k(7, "tbody", 37),
            f(8, IB, 1, 2, "tbody", 38),
            f(9, EB, 3, 4, "tfoot", 39),
            v()),
          2 & t)
        ) {
          const e = n.options,
            i = p();
          bt(i.tableStyle),
            ne(i.tableStyleClass),
            d(
              "ngClass",
              kn(
                20,
                xB,
                i.scrollable,
                i.resizableColumns,
                i.resizableColumns && "fit" === i.columnResizeMode
              )
            ),
            x("id", i.id + "-table"),
            g(2),
            d("ngTemplateOutlet", i.colGroupTemplate)(
              "ngTemplateOutletContext",
              Q(24, ro, e.columns)
            ),
            g(3),
            d("ngTemplateOutlet", i.headerGroupedTemplate || i.headerTemplate)(
              "ngTemplateOutletContext",
              Q(26, ro, e.columns)
            ),
            g(1),
            d("ngIf", i.frozenValue || i.frozenBodyTemplate),
            g(1),
            bt(e.contentStyle),
            d("ngClass", e.contentStyleClass)("value", i.dataToRender(e.rows))(
              "pTableBody",
              e.columns
            )("pTableBodyTemplate", i.bodyTemplate)("scrollerOptions", e),
            g(1),
            d("ngIf", e.spacerStyle),
            g(1),
            d("ngIf", i.footerGroupedTemplate || i.footerTemplate);
        }
      }
      function OB(t, n) {
        1 & t && j(0);
      }
      function AB(t, n) {
        1 & t && f(0, OB, 1, 0, "ng-container", 21),
          2 & t &&
            d("ngTemplateOutlet", p(3).paginatorFirstPageLinkIconTemplate);
      }
      function kB(t, n) {
        1 & t && f(0, AB, 1, 1, "ng-template", 24);
      }
      function RB(t, n) {
        1 & t && j(0);
      }
      function FB(t, n) {
        1 & t && f(0, RB, 1, 0, "ng-container", 21),
          2 & t &&
            d("ngTemplateOutlet", p(3).paginatorPreviousPageLinkIconTemplate);
      }
      function LB(t, n) {
        1 & t && f(0, FB, 1, 1, "ng-template", 25);
      }
      function PB(t, n) {
        1 & t && j(0);
      }
      function NB(t, n) {
        1 & t && f(0, PB, 1, 0, "ng-container", 21),
          2 & t &&
            d("ngTemplateOutlet", p(3).paginatorLastPageLinkIconTemplate);
      }
      function VB(t, n) {
        1 & t && f(0, NB, 1, 1, "ng-template", 26);
      }
      function BB(t, n) {
        1 & t && j(0);
      }
      function HB(t, n) {
        1 & t && f(0, BB, 1, 0, "ng-container", 21),
          2 & t &&
            d("ngTemplateOutlet", p(3).paginatorNextPageLinkIconTemplate);
      }
      function zB(t, n) {
        1 & t && f(0, HB, 1, 1, "ng-template", 27);
      }
      function $B(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-paginator", 44),
            A("onPageChange", function (o) {
              return T(e), S(p().onPageChange(o));
            }),
            f(1, kB, 1, 0, null, 8),
            f(2, LB, 1, 0, null, 8),
            f(3, VB, 1, 0, null, 8),
            f(4, zB, 1, 0, null, 8),
            v();
        }
        if (2 & t) {
          const e = p();
          d("rows", e.rows)("first", e.first)("totalRecords", e.totalRecords)(
            "pageLinkSize",
            e.pageLinks
          )("alwaysShow", e.alwaysShowPaginator)(
            "rowsPerPageOptions",
            e.rowsPerPageOptions
          )("templateLeft", e.paginatorLeftTemplate)(
            "templateRight",
            e.paginatorRightTemplate
          )("dropdownAppendTo", e.paginatorDropdownAppendTo)(
            "dropdownScrollHeight",
            e.paginatorDropdownScrollHeight
          )("currentPageReportTemplate", e.currentPageReportTemplate)(
            "showFirstLastIcon",
            e.showFirstLastIcon
          )("dropdownItemTemplate", e.paginatorDropdownItemTemplate)(
            "showCurrentPageReport",
            e.showCurrentPageReport
          )("showJumpToPageDropdown", e.showJumpToPageDropdown)(
            "showJumpToPageInput",
            e.showJumpToPageInput
          )("showPageLinks", e.showPageLinks)(
            "styleClass",
            e.paginatorStyleClass
          )("locale", e.paginatorLocale),
            g(1),
            d("ngIf", e.paginatorFirstPageLinkIconTemplate),
            g(1),
            d("ngIf", e.paginatorPreviousPageLinkIconTemplate),
            g(1),
            d("ngIf", e.paginatorLastPageLinkIconTemplate),
            g(1),
            d("ngIf", e.paginatorNextPageLinkIconTemplate);
        }
      }
      function jB(t, n) {
        1 & t && j(0);
      }
      function UB(t, n) {
        if (
          (1 & t && (y(0, "div", 45), f(1, jB, 1, 0, "ng-container", 21), v()),
          2 & t)
        ) {
          const e = p();
          g(1), d("ngTemplateOutlet", e.summaryTemplate);
        }
      }
      function GB(t, n) {
        1 & t && k(0, "div", 46, 47);
      }
      function WB(t, n) {
        1 & t && k(0, "ArrowDownIcon");
      }
      function KB(t, n) {}
      function qB(t, n) {
        1 & t && f(0, KB, 0, 0, "ng-template");
      }
      function ZB(t, n) {
        if (
          (1 & t &&
            (y(0, "span", 48, 49),
            f(2, WB, 1, 0, "ArrowDownIcon", 8),
            f(3, qB, 1, 0, null, 21),
            v()),
          2 & t)
        ) {
          const e = p();
          g(2),
            d("ngIf", !e.reorderIndicatorUpIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.reorderIndicatorUpIconTemplate);
        }
      }
      function YB(t, n) {
        1 & t && k(0, "ArrowUpIcon");
      }
      function QB(t, n) {}
      function JB(t, n) {
        1 & t && f(0, QB, 0, 0, "ng-template");
      }
      function XB(t, n) {
        if (
          (1 & t &&
            (y(0, "span", 50, 51),
            f(2, YB, 1, 0, "ArrowUpIcon", 8),
            f(3, JB, 1, 0, null, 21),
            v()),
          2 & t)
        ) {
          const e = p();
          g(2),
            d("ngIf", !e.reorderIndicatorDownIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.reorderIndicatorDownIconTemplate);
        }
      }
      const eH = function (t, n, e) {
          return {
            "p-datatable p-component": !0,
            "p-datatable-hoverable-rows": t,
            "p-datatable-scrollable": n,
            "p-datatable-flex-scrollable": e,
          };
        },
        tH = function (t) {
          return { maxHeight: t };
        },
        nH = ["pTableBody", ""];
      function iH(t, n) {
        1 & t && j(0);
      }
      const fg = function (t, n, e, i, o) {
        return { $implicit: t, rowIndex: n, columns: e, editing: i, frozen: o };
      };
      function oH(t, n) {
        if (
          (1 & t && (H(0, 3), f(1, iH, 1, 0, "ng-container", 4), z()), 2 & t)
        ) {
          const e = p(),
            i = e.$implicit,
            o = e.index,
            r = p(2);
          g(1),
            d("ngTemplateOutlet", r.dt.groupHeaderTemplate)(
              "ngTemplateOutletContext",
              Dc(
                2,
                fg,
                i,
                r.getRowIndex(o),
                r.columns,
                "row" === r.dt.editMode && r.dt.isRowEditing(i),
                r.frozen
              )
            );
        }
      }
      function rH(t, n) {
        1 & t && j(0);
      }
      function sH(t, n) {
        if ((1 & t && (H(0), f(1, rH, 1, 0, "ng-container", 4), z()), 2 & t)) {
          const e = p(),
            i = e.$implicit,
            o = e.index,
            r = p(2);
          g(1),
            d("ngTemplateOutlet", i ? r.template : r.dt.loadingBodyTemplate)(
              "ngTemplateOutletContext",
              Dc(
                2,
                fg,
                i,
                r.getRowIndex(o),
                r.columns,
                "row" === r.dt.editMode && r.dt.isRowEditing(i),
                r.frozen
              )
            );
        }
      }
      function aH(t, n) {
        1 & t && j(0);
      }
      const lH = function (t, n, e, i, o, r, s) {
        return {
          $implicit: t,
          rowIndex: n,
          columns: e,
          editing: i,
          frozen: o,
          rowgroup: r,
          rowspan: s,
        };
      };
      function cH(t, n) {
        if ((1 & t && (H(0), f(1, aH, 1, 0, "ng-container", 4), z()), 2 & t)) {
          const e = p(),
            i = e.$implicit,
            o = e.index,
            r = p(2);
          g(1),
            d("ngTemplateOutlet", i ? r.template : r.dt.loadingBodyTemplate)(
              "ngTemplateOutletContext",
              (function yb(t, n, e, i, o, r, s, a, l, c) {
                const u = Wt() + t,
                  h = R();
                let m = Mn(h, u, e, i, o, r);
                return gc(h, u + 4, s, a, l) || m
                  ? ri(
                      h,
                      u + 7,
                      c
                        ? n.call(c, e, i, o, r, s, a, l)
                        : n(e, i, o, r, s, a, l)
                    )
                  : Js(h, u + 7);
              })(
                2,
                lH,
                i,
                r.getRowIndex(o),
                r.columns,
                "row" === r.dt.editMode && r.dt.isRowEditing(i),
                r.frozen,
                r.shouldRenderRowspan(r.value, i, o),
                r.calculateRowGroupSize(r.value, i, o)
              )
            );
        }
      }
      function uH(t, n) {
        1 & t && j(0);
      }
      function dH(t, n) {
        if (
          (1 & t && (H(0, 3), f(1, uH, 1, 0, "ng-container", 4), z()), 2 & t)
        ) {
          const e = p(),
            i = e.$implicit,
            o = e.index,
            r = p(2);
          g(1),
            d("ngTemplateOutlet", r.dt.groupFooterTemplate)(
              "ngTemplateOutletContext",
              Dc(
                2,
                fg,
                i,
                r.getRowIndex(o),
                r.columns,
                "row" === r.dt.editMode && r.dt.isRowEditing(i),
                r.frozen
              )
            );
        }
      }
      function pH(t, n) {
        if (
          (1 & t &&
            (f(0, oH, 2, 8, "ng-container", 2),
            f(1, sH, 2, 8, "ng-container", 0),
            f(2, cH, 2, 10, "ng-container", 0),
            f(3, dH, 2, 8, "ng-container", 2)),
          2 & t)
        ) {
          const e = n.$implicit,
            i = n.index,
            o = p(2);
          d(
            "ngIf",
            o.dt.groupHeaderTemplate &&
              !o.dt.virtualScroll &&
              "subheader" === o.dt.rowGroupMode &&
              o.shouldRenderRowGroupHeader(o.value, e, i)
          ),
            g(1),
            d("ngIf", "rowspan" !== o.dt.rowGroupMode),
            g(1),
            d("ngIf", "rowspan" === o.dt.rowGroupMode),
            g(1),
            d(
              "ngIf",
              o.dt.groupFooterTemplate &&
                !o.dt.virtualScroll &&
                "subheader" === o.dt.rowGroupMode &&
                o.shouldRenderRowGroupFooter(o.value, e, i)
            );
        }
      }
      function hH(t, n) {
        if ((1 & t && (H(0), f(1, pH, 4, 4, "ng-template", 1), z()), 2 & t)) {
          const e = p();
          g(1), d("ngForOf", e.value)("ngForTrackBy", e.dt.rowTrackBy);
        }
      }
      function fH(t, n) {
        1 & t && j(0);
      }
      const _u = function (t, n, e, i, o, r) {
        return {
          $implicit: t,
          rowIndex: n,
          columns: e,
          expanded: i,
          editing: o,
          frozen: r,
        };
      };
      function gH(t, n) {
        if ((1 & t && (H(0), f(1, fH, 1, 0, "ng-container", 4), z()), 2 & t)) {
          const e = p(),
            i = e.$implicit,
            o = e.index,
            r = p(2);
          g(1),
            d("ngTemplateOutlet", r.template)(
              "ngTemplateOutletContext",
              Vr(
                2,
                _u,
                i,
                r.getRowIndex(o),
                r.columns,
                r.dt.isRowExpanded(i),
                "row" === r.dt.editMode && r.dt.isRowEditing(i),
                r.frozen
              )
            );
        }
      }
      function mH(t, n) {
        1 & t && j(0);
      }
      function _H(t, n) {
        if (
          (1 & t && (H(0, 3), f(1, mH, 1, 0, "ng-container", 4), z()), 2 & t)
        ) {
          const e = p(),
            i = e.$implicit,
            o = e.index,
            r = p(2);
          g(1),
            d("ngTemplateOutlet", r.dt.groupHeaderTemplate)(
              "ngTemplateOutletContext",
              Vr(
                2,
                _u,
                i,
                r.getRowIndex(o),
                r.columns,
                r.dt.isRowExpanded(i),
                "row" === r.dt.editMode && r.dt.isRowEditing(i),
                r.frozen
              )
            );
        }
      }
      function yH(t, n) {
        1 & t && j(0);
      }
      function vH(t, n) {
        1 & t && j(0);
      }
      function bH(t, n) {
        if (
          (1 & t && (H(0, 3), f(1, vH, 1, 0, "ng-container", 4), z()), 2 & t)
        ) {
          const e = p(2),
            i = e.$implicit,
            o = e.index,
            r = p(2);
          g(1),
            d("ngTemplateOutlet", r.dt.groupFooterTemplate)(
              "ngTemplateOutletContext",
              Vr(
                2,
                _u,
                i,
                r.getRowIndex(o),
                r.columns,
                r.dt.isRowExpanded(i),
                "row" === r.dt.editMode && r.dt.isRowEditing(i),
                r.frozen
              )
            );
        }
      }
      const uS = function (t, n, e, i) {
        return { $implicit: t, rowIndex: n, columns: e, frozen: i };
      };
      function CH(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, yH, 1, 0, "ng-container", 4),
            f(2, bH, 2, 9, "ng-container", 2),
            z()),
          2 & t)
        ) {
          const e = p(),
            i = e.$implicit,
            o = e.index,
            r = p(2);
          g(1),
            d("ngTemplateOutlet", r.dt.expandedRowTemplate)(
              "ngTemplateOutletContext",
              Ic(3, uS, i, r.getRowIndex(o), r.columns, r.frozen)
            ),
            g(1),
            d(
              "ngIf",
              r.dt.groupFooterTemplate &&
                "subheader" === r.dt.rowGroupMode &&
                r.shouldRenderRowGroupFooter(r.value, i, r.getRowIndex(o))
            );
        }
      }
      function wH(t, n) {
        if (
          (1 & t &&
            (f(0, gH, 2, 9, "ng-container", 0),
            f(1, _H, 2, 9, "ng-container", 2),
            f(2, CH, 3, 8, "ng-container", 0)),
          2 & t)
        ) {
          const e = n.$implicit,
            i = n.index,
            o = p(2);
          d("ngIf", !o.dt.groupHeaderTemplate),
            g(1),
            d(
              "ngIf",
              o.dt.groupHeaderTemplate &&
                "subheader" === o.dt.rowGroupMode &&
                o.shouldRenderRowGroupHeader(o.value, e, o.getRowIndex(i))
            ),
            g(1),
            d("ngIf", o.dt.isRowExpanded(e));
        }
      }
      function TH(t, n) {
        if ((1 & t && (H(0), f(1, wH, 3, 3, "ng-template", 1), z()), 2 & t)) {
          const e = p();
          g(1), d("ngForOf", e.value)("ngForTrackBy", e.dt.rowTrackBy);
        }
      }
      function SH(t, n) {
        1 & t && j(0);
      }
      function IH(t, n) {
        1 & t && j(0);
      }
      function DH(t, n) {
        if ((1 & t && (H(0), f(1, IH, 1, 0, "ng-container", 4), z()), 2 & t)) {
          const e = p(),
            i = e.$implicit,
            o = e.index,
            r = p(2);
          g(1),
            d("ngTemplateOutlet", r.dt.frozenExpandedRowTemplate)(
              "ngTemplateOutletContext",
              Ic(2, uS, i, r.getRowIndex(o), r.columns, r.frozen)
            );
        }
      }
      function EH(t, n) {
        if (
          (1 & t &&
            (f(0, SH, 1, 0, "ng-container", 4),
            f(1, DH, 2, 7, "ng-container", 0)),
          2 & t)
        ) {
          const e = n.$implicit,
            i = n.index,
            o = p(2);
          d("ngTemplateOutlet", o.template)(
            "ngTemplateOutletContext",
            Vr(
              3,
              _u,
              e,
              o.getRowIndex(i),
              o.columns,
              o.dt.isRowExpanded(e),
              "row" === o.dt.editMode && o.dt.isRowEditing(e),
              o.frozen
            )
          ),
            g(1),
            d("ngIf", o.dt.isRowExpanded(e));
        }
      }
      function xH(t, n) {
        if ((1 & t && (H(0), f(1, EH, 2, 10, "ng-template", 1), z()), 2 & t)) {
          const e = p();
          g(1), d("ngForOf", e.value)("ngForTrackBy", e.dt.rowTrackBy);
        }
      }
      function MH(t, n) {
        1 & t && j(0);
      }
      const dS = function (t, n) {
        return { $implicit: t, frozen: n };
      };
      function OH(t, n) {
        if ((1 & t && (H(0), f(1, MH, 1, 0, "ng-container", 4), z()), 2 & t)) {
          const e = p();
          g(1),
            d("ngTemplateOutlet", e.dt.loadingBodyTemplate)(
              "ngTemplateOutletContext",
              Ze(2, dS, e.columns, e.frozen)
            );
        }
      }
      function AH(t, n) {
        1 & t && j(0);
      }
      function kH(t, n) {
        if ((1 & t && (H(0), f(1, AH, 1, 0, "ng-container", 4), z()), 2 & t)) {
          const e = p();
          g(1),
            d("ngTemplateOutlet", e.dt.emptyMessageTemplate)(
              "ngTemplateOutletContext",
              Ze(2, dS, e.columns, e.frozen)
            );
        }
      }
      function VH(t, n) {
        1 & t && j(0);
      }
      function BH(t, n) {
        if ((1 & t && (H(0), f(1, VH, 1, 0, "ng-container", 1), z()), 2 & t)) {
          const e = p();
          g(1), d("ngTemplateOutlet", e.inputTemplate);
        }
      }
      function HH(t, n) {
        1 & t && j(0);
      }
      function zH(t, n) {
        if ((1 & t && (H(0), f(1, HH, 1, 0, "ng-container", 1), z()), 2 & t)) {
          const e = p();
          g(1), d("ngTemplateOutlet", e.outputTemplate);
        }
      }
      const qH = ["icon"],
        ZH = ["clearBtn"];
      function YH(t, n) {
        if ((1 & t && k(0, "p-columnFilterFormElement", 5), 2 & t)) {
          const e = p();
          d("type", e.type)("field", e.field)(
            "filterConstraint",
            e.dt.filters[e.field]
          )("filterTemplate", e.filterTemplate)("placeholder", e.placeholder)(
            "minFractionDigits",
            e.minFractionDigits
          )("maxFractionDigits", e.maxFractionDigits)("prefix", e.prefix)(
            "suffix",
            e.suffix
          )("locale", e.locale)("localeMatcher", e.localeMatcher)(
            "currency",
            e.currency
          )("currencyDisplay", e.currencyDisplay)("useGrouping", e.useGrouping)(
            "showButtons",
            e.showButtons
          );
        }
      }
      function QH(t, n) {
        1 & t && k(0, "FilterIcon", 10),
          2 & t && d("styleClass", "pi-filter-icon");
      }
      function JH(t, n) {}
      function XH(t, n) {
        1 & t && f(0, JH, 0, 0, "ng-template");
      }
      function ez(t, n) {
        if (
          (1 & t && (y(0, "span", 11), f(1, XH, 1, 0, null, 12), v()), 2 & t)
        ) {
          const e = p(2);
          g(1), d("ngTemplateOutlet", e.filterIconTemplate);
        }
      }
      const tz = function (t, n) {
        return {
          "p-column-filter-menu-button-open": t,
          "p-column-filter-menu-button-active": n,
        };
      };
      function nz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 6, 7),
            A("click", function () {
              return T(e), S(p().toggleMenu());
            })("keydown", function (o) {
              return T(e), S(p().onToggleButtonKeyDown(o));
            }),
            f(2, QH, 1, 1, "FilterIcon", 8),
            f(3, ez, 2, 1, "span", 9),
            v();
        }
        if (2 & t) {
          const e = p();
          d("ngClass", Ze(5, tz, e.overlayVisible, e.hasFilter())),
            x("aria-controls", e.overlayId)("aria-expanded", e.overlayVisible),
            g(2),
            d("ngIf", !e.filterIconTemplate),
            g(1),
            d("ngIf", e.filterIconTemplate);
        }
      }
      function iz(t, n) {
        1 & t && k(0, "FilterSlashIcon");
      }
      function oz(t, n) {}
      function rz(t, n) {
        1 & t && f(0, oz, 0, 0, "ng-template");
      }
      const sz = function (t) {
        return { "p-hidden-space": t };
      };
      function az(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 13, 7),
            A("click", function () {
              return T(e), S(p().clearFilter());
            }),
            f(2, iz, 1, 0, "FilterSlashIcon", 14),
            f(3, rz, 1, 0, null, 12),
            v();
        }
        if (2 & t) {
          const e = p();
          d("ngClass", Q(3, sz, !e.hasRowFilter())),
            g(2),
            d("ngIf", !e.clearIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.clearFilterIcon);
        }
      }
      function lz(t, n) {
        1 & t && j(0);
      }
      const cz = function (t) {
        return { "p-highlight": t };
      };
      function uz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "li", 23),
            A("click", function () {
              const r = T(e).$implicit;
              return S(p(3).onRowMatchModeChange(r.value));
            })("keydown", function (o) {
              return T(e), S(p(3).onRowMatchModeKeyDown(o));
            })("keydown.enter", function () {
              const r = T(e).$implicit;
              return S(p(3).onRowMatchModeChange(r.value));
            }),
            B(1),
            v();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = n.index,
            o = p(3);
          d("ngClass", Q(3, cz, o.isRowMatchModeSelected(e.value))),
            x("tabindex", 0 === i ? "0" : null),
            g(1),
            we(" ", e.label, " ");
        }
      }
      function dz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "ul", 19),
            f(1, uz, 2, 5, "li", 20),
            k(2, "li", 21),
            y(3, "li", 22),
            A("click", function () {
              return T(e), S(p(2).onRowClearItemClick());
            })("keydown", function (o) {
              return T(e), S(p(2).onRowMatchModeKeyDown(o));
            })("keydown.enter", function () {
              return T(e), S(p(2).onRowClearItemClick());
            }),
            B(4),
            v()();
        }
        if (2 & t) {
          const e = p(2);
          g(1), d("ngForOf", e.matchModes), g(3), Le(e.noFilterLabel);
        }
      }
      function pz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 31)(1, "p-dropdown", 32),
            A("ngModelChange", function (o) {
              return T(e), S(p(3).onOperatorChange(o));
            }),
            v()();
        }
        if (2 & t) {
          const e = p(3);
          g(1), d("options", e.operatorOptions)("ngModel", e.operator);
        }
      }
      function hz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-dropdown", 37),
            A("ngModelChange", function (o) {
              T(e);
              const r = p().$implicit;
              return S(p(3).onMenuMatchModeChange(o, r));
            }),
            v();
        }
        if (2 & t) {
          const e = p().$implicit;
          d("options", p(3).matchModes)("ngModel", e.matchMode);
        }
      }
      function fz(t, n) {
        1 & t && k(0, "TrashIcon");
      }
      function gz(t, n) {}
      function mz(t, n) {
        1 & t && f(0, gz, 0, 0, "ng-template");
      }
      function _z(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 38),
            A("click", function () {
              T(e);
              const o = p().$implicit;
              return S(p(3).removeConstraint(o));
            }),
            f(1, fz, 1, 0, "TrashIcon", 14),
            f(2, mz, 1, 0, null, 12),
            v();
        }
        if (2 & t) {
          const e = p(4);
          d("label", e.removeRuleButtonLabel),
            g(1),
            d("ngIf", !e.removeRuleIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.removeRuleIconTemplate);
        }
      }
      function yz(t, n) {
        if (
          (1 & t &&
            (y(0, "div", 33),
            f(1, hz, 1, 2, "p-dropdown", 34),
            k(2, "p-columnFilterFormElement", 35),
            y(3, "div"),
            f(4, _z, 3, 3, "button", 36),
            v()()),
          2 & t)
        ) {
          const e = n.$implicit,
            i = p(3);
          g(1),
            d("ngIf", i.showMatchModes && i.matchModes),
            g(1),
            d("type", i.type)("field", i.field)("filterConstraint", e)(
              "filterTemplate",
              i.filterTemplate
            )("placeholder", i.placeholder)(
              "minFractionDigits",
              i.minFractionDigits
            )("maxFractionDigits", i.maxFractionDigits)("prefix", i.prefix)(
              "suffix",
              i.suffix
            )("locale", i.locale)("localeMatcher", i.localeMatcher)(
              "currency",
              i.currency
            )("currencyDisplay", i.currencyDisplay)(
              "useGrouping",
              i.useGrouping
            ),
            g(2),
            d("ngIf", i.showRemoveIcon);
        }
      }
      function vz(t, n) {
        1 & t && k(0, "PlusIcon");
      }
      function bz(t, n) {}
      function Cz(t, n) {
        1 & t && f(0, bz, 0, 0, "ng-template");
      }
      function wz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 39)(1, "button", 40),
            A("click", function () {
              return T(e), S(p(3).addConstraint());
            }),
            f(2, vz, 1, 0, "PlusIcon", 14),
            f(3, Cz, 1, 0, null, 12),
            v()();
        }
        if (2 & t) {
          const e = p(3);
          g(1),
            d("label", e.addRuleButtonLabel),
            g(1),
            d("ngIf", !e.addRuleIconTemplate),
            g(1),
            d("ngTemplateOutlet", e.addRuleIconTemplate);
        }
      }
      function Tz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 41, 42),
            A("click", function () {
              return T(e), S(p(3).clearFilter());
            }),
            v();
        }
        2 & t && d("label", p(3).clearButtonLabel);
      }
      function Sz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "button", 43),
            A("click", function () {
              return T(e), S(p(3).applyFilter());
            }),
            v();
        }
        2 & t && d("label", p(3).applyButtonLabel);
      }
      function Iz(t, n) {
        if (
          (1 & t &&
            (f(0, pz, 2, 2, "div", 24),
            y(1, "div", 25),
            f(2, yz, 5, 16, "div", 26),
            v(),
            f(3, wz, 4, 3, "div", 27),
            y(4, "div", 28),
            f(5, Tz, 2, 1, "button", 29),
            f(6, Sz, 1, 1, "button", 30),
            v()),
          2 & t)
        ) {
          const e = p(2);
          d("ngIf", e.isShowOperator),
            g(2),
            d("ngForOf", e.fieldConstraints),
            g(1),
            d("ngIf", e.isShowAddConstraint),
            g(2),
            d("ngIf", e.showClearButton),
            g(1),
            d("ngIf", e.showApplyButton);
        }
      }
      function Dz(t, n) {
        1 & t && j(0);
      }
      const Ez = function (t) {
        return {
          "p-column-filter-overlay p-component p-fluid": !0,
          "p-column-filter-overlay-menu": t,
        };
      };
      function xz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 15),
            A("click", function () {
              return T(e), S(p().onContentClick());
            })("@overlayAnimation.start", function (o) {
              return T(e), S(p().onOverlayAnimationStart(o));
            })("@overlayAnimation.done", function (o) {
              return T(e), S(p().onOverlayAnimationEnd(o));
            })("keydown.escape", function () {
              return T(e), S(p().onEscape());
            }),
            f(1, lz, 1, 0, "ng-container", 16),
            f(2, dz, 5, 2, "ul", 17),
            f(3, Iz, 7, 5, "ng-template", null, 18, Yt),
            f(5, Dz, 1, 0, "ng-container", 16),
            v();
        }
        if (2 & t) {
          const e = rt(4),
            i = p();
          d("ngClass", Q(10, Ez, "menu" === i.display))("id", i.overlayId)(
            "@overlayAnimation",
            "visible"
          ),
            x("aria-modal", !0),
            g(1),
            d("ngTemplateOutlet", i.headerTemplate)(
              "ngTemplateOutletContext",
              Q(12, ro, i.field)
            ),
            g(1),
            d("ngIf", "row" === i.display)("ngIfElse", e),
            g(3),
            d("ngTemplateOutlet", i.footerTemplate)(
              "ngTemplateOutletContext",
              Q(14, ro, i.field)
            );
        }
      }
      const Mz = function (t, n) {
        return { "p-column-filter-row": t, "p-column-filter-menu": n };
      };
      function Oz(t, n) {
        1 & t && j(0);
      }
      const Az = function (t, n, e, i, o, r, s, a, l, c, u, h, m, _, b, C) {
        return {
          $implicit: t,
          filterCallback: n,
          type: e,
          field: i,
          filterConstraint: o,
          placeholder: r,
          minFractionDigits: s,
          maxFractionDigits: a,
          prefix: l,
          suffix: c,
          locale: u,
          localeMatcher: h,
          currency: m,
          currencyDisplay: _,
          useGrouping: b,
          showButtons: C,
        };
      };
      function kz(t, n) {
        if ((1 & t && (H(0), f(1, Oz, 1, 0, "ng-container", 2), z()), 2 & t)) {
          const e = p();
          g(1),
            d("ngTemplateOutlet", e.filterTemplate)(
              "ngTemplateOutletContext",
              Ah(2, Az, [
                e.filterConstraint.value,
                e.filterCallback,
                e.type,
                e.field,
                e.filterConstraint,
                e.placeholder,
                e.minFractionDigits,
                e.maxFractionDigits,
                e.prefix,
                e.suffix,
                e.locale,
                e.localeMatcher,
                e.currency,
                e.currencyDisplay,
                e.useGrouping,
                e.showButtons,
              ])
            );
        }
      }
      function Rz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 8),
            A("input", function (o) {
              return T(e), S(p(2).onModelChange(o.target.value));
            })("keydown.enter", function (o) {
              return T(e), S(p(2).onTextInputEnterKeyDown(o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d(
            "value",
            null == e.filterConstraint ? null : e.filterConstraint.value
          ),
            x("placeholder", e.placeholder);
        }
      }
      function Fz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-inputNumber", 9),
            A("ngModelChange", function (o) {
              return T(e), S(p(2).onModelChange(o));
            })("onKeyDown", function (o) {
              return T(e), S(p(2).onNumericInputKeyDown(o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d(
            "ngModel",
            null == e.filterConstraint ? null : e.filterConstraint.value
          )("showButtons", e.showButtons)(
            "minFractionDigits",
            e.minFractionDigits
          )("maxFractionDigits", e.maxFractionDigits)("prefix", e.prefix)(
            "suffix",
            e.suffix
          )("placeholder", e.placeholder)(
            "mode",
            e.currency ? "currency" : "decimal"
          )("locale", e.locale)("localeMatcher", e.localeMatcher)(
            "currency",
            e.currency
          )("currencyDisplay", e.currencyDisplay)("useGrouping", e.useGrouping);
        }
      }
      function Lz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-triStateCheckbox", 10),
            A("ngModelChange", function (o) {
              return T(e), S(p(2).onModelChange(o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d(
            "ngModel",
            null == e.filterConstraint ? null : e.filterConstraint.value
          );
        }
      }
      function Pz(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-calendar", 11),
            A("ngModelChange", function (o) {
              return T(e), S(p(2).onModelChange(o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2);
          d("placeholder", e.placeholder)(
            "ngModel",
            null == e.filterConstraint ? null : e.filterConstraint.value
          );
        }
      }
      function Nz(t, n) {
        1 & t &&
          (H(0, 3),
          f(1, Rz, 1, 2, "input", 4),
          f(2, Fz, 1, 13, "p-inputNumber", 5),
          f(3, Lz, 1, 1, "p-triStateCheckbox", 6),
          f(4, Pz, 1, 2, "p-calendar", 7),
          z()),
          2 & t &&
            (d("ngSwitch", p().type),
            g(1),
            d("ngSwitchCase", "text"),
            g(1),
            d("ngSwitchCase", "numeric"),
            g(1),
            d("ngSwitchCase", "boolean"),
            g(1),
            d("ngSwitchCase", "date"));
      }
      let gg = (() => {
          class t {
            sortSource = new ct();
            selectionSource = new ct();
            contextMenuSource = new ct();
            valueSource = new ct();
            totalRecordsSource = new ct();
            columnsSource = new ct();
            sortSource$ = this.sortSource.asObservable();
            selectionSource$ = this.selectionSource.asObservable();
            contextMenuSource$ = this.contextMenuSource.asObservable();
            valueSource$ = this.valueSource.asObservable();
            totalRecordsSource$ = this.totalRecordsSource.asObservable();
            columnsSource$ = this.columnsSource.asObservable();
            onSort(e) {
              this.sortSource.next(e);
            }
            onSelectionChange() {
              this.selectionSource.next(null);
            }
            onContextMenu(e) {
              this.contextMenuSource.next(e);
            }
            onValueChange(e) {
              this.valueSource.next(e);
            }
            onTotalRecordsChange(e) {
              this.totalRecordsSource.next(e);
            }
            onColumnsChange(e) {
              this.columnsSource.next(e);
            }
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵprov = K({ token: t, factory: t.ɵfac });
          }
          return t;
        })(),
        Yr = (() => {
          class t {
            document;
            platformId;
            renderer;
            el;
            zone;
            tableService;
            cd;
            filterService;
            overlayService;
            config;
            frozenColumns;
            frozenValue;
            style;
            styleClass;
            tableStyle;
            tableStyleClass;
            paginator;
            pageLinks = 5;
            rowsPerPageOptions;
            alwaysShowPaginator = !0;
            paginatorPosition = "bottom";
            paginatorStyleClass;
            paginatorDropdownAppendTo;
            paginatorDropdownScrollHeight = "200px";
            currentPageReportTemplate = "{currentPage} of {totalPages}";
            showCurrentPageReport;
            showJumpToPageDropdown;
            showJumpToPageInput;
            showFirstLastIcon = !0;
            showPageLinks = !0;
            defaultSortOrder = 1;
            sortMode = "single";
            resetPageOnSort = !0;
            selectionMode;
            selectionPageOnly;
            contextMenuSelection;
            contextMenuSelectionChange = new L();
            contextMenuSelectionMode = "separate";
            dataKey;
            metaKeySelection;
            rowSelectable;
            rowTrackBy = (e, i) => i;
            lazy = !1;
            lazyLoadOnInit = !0;
            compareSelectionBy = "deepEquals";
            csvSeparator = ",";
            exportFilename = "download";
            filters = {};
            globalFilterFields;
            filterDelay = 300;
            filterLocale;
            expandedRowKeys = {};
            editingRowKeys = {};
            rowExpandMode = "multiple";
            scrollable;
            scrollDirection = "vertical";
            rowGroupMode;
            scrollHeight;
            virtualScroll;
            virtualScrollItemSize;
            virtualScrollOptions;
            virtualScrollDelay = 250;
            frozenWidth;
            get responsive() {
              return this._responsive;
            }
            set responsive(e) {
              (this._responsive = e),
                console.warn(
                  "responsive property is deprecated as table is always responsive with scrollable behavior."
                );
            }
            _responsive;
            contextMenu;
            resizableColumns;
            columnResizeMode = "fit";
            reorderableColumns;
            loading;
            loadingIcon;
            showLoader = !0;
            rowHover;
            customSort;
            showInitialSortBadge = !0;
            autoLayout;
            exportFunction;
            exportHeader;
            stateKey;
            stateStorage = "session";
            editMode = "cell";
            groupRowsBy;
            groupRowsByOrder = 1;
            responsiveLayout = "scroll";
            breakpoint = "960px";
            paginatorLocale;
            get value() {
              return this._value;
            }
            set value(e) {
              this._value = e;
            }
            get columns() {
              return this._columns;
            }
            set columns(e) {
              this._columns = e;
            }
            get first() {
              return this._first;
            }
            set first(e) {
              this._first = e;
            }
            get rows() {
              return this._rows;
            }
            set rows(e) {
              this._rows = e;
            }
            get totalRecords() {
              return this._totalRecords;
            }
            set totalRecords(e) {
              (this._totalRecords = e),
                this.tableService.onTotalRecordsChange(this._totalRecords);
            }
            get sortField() {
              return this._sortField;
            }
            set sortField(e) {
              this._sortField = e;
            }
            get sortOrder() {
              return this._sortOrder;
            }
            set sortOrder(e) {
              this._sortOrder = e;
            }
            get multiSortMeta() {
              return this._multiSortMeta;
            }
            set multiSortMeta(e) {
              this._multiSortMeta = e;
            }
            get selection() {
              return this._selection;
            }
            set selection(e) {
              this._selection = e;
            }
            get selectAll() {
              return this._selection;
            }
            set selectAll(e) {
              this._selection = e;
            }
            selectAllChange = new L();
            selectionChange = new L();
            onRowSelect = new L();
            onRowUnselect = new L();
            onPage = new L();
            onSort = new L();
            onFilter = new L();
            onLazyLoad = new L();
            onRowExpand = new L();
            onRowCollapse = new L();
            onContextMenuSelect = new L();
            onColResize = new L();
            onColReorder = new L();
            onRowReorder = new L();
            onEditInit = new L();
            onEditComplete = new L();
            onEditCancel = new L();
            onHeaderCheckboxToggle = new L();
            sortFunction = new L();
            firstChange = new L();
            rowsChange = new L();
            onStateSave = new L();
            onStateRestore = new L();
            containerViewChild;
            resizeHelperViewChild;
            reorderIndicatorUpViewChild;
            reorderIndicatorDownViewChild;
            wrapperViewChild;
            tableViewChild;
            tableHeaderViewChild;
            tableFooterViewChild;
            scroller;
            templates;
            get virtualRowHeight() {
              return this._virtualRowHeight;
            }
            set virtualRowHeight(e) {
              (this._virtualRowHeight = e),
                console.warn("The virtualRowHeight property is deprecated.");
            }
            _virtualRowHeight = 28;
            _value = [];
            _columns;
            _totalRecords = 0;
            _first = 0;
            _rows;
            filteredValue;
            headerTemplate;
            headerGroupedTemplate;
            bodyTemplate;
            loadingBodyTemplate;
            captionTemplate;
            footerTemplate;
            footerGroupedTemplate;
            summaryTemplate;
            colGroupTemplate;
            expandedRowTemplate;
            groupHeaderTemplate;
            groupFooterTemplate;
            frozenExpandedRowTemplate;
            frozenHeaderTemplate;
            frozenBodyTemplate;
            frozenFooterTemplate;
            frozenColGroupTemplate;
            emptyMessageTemplate;
            paginatorLeftTemplate;
            paginatorRightTemplate;
            paginatorDropdownItemTemplate;
            loadingIconTemplate;
            reorderIndicatorUpIconTemplate;
            reorderIndicatorDownIconTemplate;
            sortIconTemplate;
            checkboxIconTemplate;
            headerCheckboxIconTemplate;
            paginatorFirstPageLinkIconTemplate;
            paginatorLastPageLinkIconTemplate;
            paginatorPreviousPageLinkIconTemplate;
            paginatorNextPageLinkIconTemplate;
            selectionKeys = {};
            lastResizerHelperX;
            reorderIconWidth;
            reorderIconHeight;
            draggedColumn;
            draggedRowIndex;
            droppedRowIndex;
            rowDragging;
            dropPosition;
            editingCell;
            editingCellData;
            editingCellField;
            editingCellRowIndex;
            selfClick;
            documentEditListener;
            _multiSortMeta;
            _sortField;
            _sortOrder = 1;
            preventSelectionSetterPropagation;
            _selection;
            _selectAll = null;
            anchorRowIndex;
            rangeRowIndex;
            filterTimeout;
            initialized;
            rowTouched;
            restoringSort;
            restoringFilter;
            stateRestored;
            columnOrderStateRestored;
            columnWidthsState;
            tableWidthState;
            overlaySubscription;
            resizeColumnElement;
            columnResizing = !1;
            rowGroupHeaderStyleObject = {};
            id = zt();
            styleElement;
            responsiveStyleElement;
            window;
            constructor(e, i, o, r, s, a, l, c, u, h) {
              (this.document = e),
                (this.platformId = i),
                (this.renderer = o),
                (this.el = r),
                (this.zone = s),
                (this.tableService = a),
                (this.cd = l),
                (this.filterService = c),
                (this.overlayService = u),
                (this.config = h),
                (this.window = this.document.defaultView);
            }
            ngOnInit() {
              this.lazy &&
                this.lazyLoadOnInit &&
                (this.virtualScroll ||
                  this.onLazyLoad.emit(this.createLazyLoadMetadata()),
                this.restoringFilter && (this.restoringFilter = !1)),
                "stack" === this.responsiveLayout &&
                  !this.scrollable &&
                  this.createResponsiveStyle(),
                (this.initialized = !0);
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "caption":
                    this.captionTemplate = e.template;
                    break;
                  case "header":
                    this.headerTemplate = e.template;
                    break;
                  case "headergrouped":
                    this.headerGroupedTemplate = e.template;
                    break;
                  case "body":
                    this.bodyTemplate = e.template;
                    break;
                  case "loadingbody":
                    this.loadingBodyTemplate = e.template;
                    break;
                  case "footer":
                    this.footerTemplate = e.template;
                    break;
                  case "footergrouped":
                    this.footerGroupedTemplate = e.template;
                    break;
                  case "summary":
                    this.summaryTemplate = e.template;
                    break;
                  case "colgroup":
                    this.colGroupTemplate = e.template;
                    break;
                  case "rowexpansion":
                    this.expandedRowTemplate = e.template;
                    break;
                  case "groupheader":
                    this.groupHeaderTemplate = e.template;
                    break;
                  case "groupfooter":
                    this.groupFooterTemplate = e.template;
                    break;
                  case "frozenheader":
                    this.frozenHeaderTemplate = e.template;
                    break;
                  case "frozenbody":
                    this.frozenBodyTemplate = e.template;
                    break;
                  case "frozenfooter":
                    this.frozenFooterTemplate = e.template;
                    break;
                  case "frozencolgroup":
                    this.frozenColGroupTemplate = e.template;
                    break;
                  case "frozenrowexpansion":
                    this.frozenExpandedRowTemplate = e.template;
                    break;
                  case "emptymessage":
                    this.emptyMessageTemplate = e.template;
                    break;
                  case "paginatorleft":
                    this.paginatorLeftTemplate = e.template;
                    break;
                  case "paginatorright":
                    this.paginatorRightTemplate = e.template;
                    break;
                  case "paginatordropdownitem":
                    this.paginatorDropdownItemTemplate = e.template;
                    break;
                  case "paginatorfirstpagelinkicon":
                    this.paginatorFirstPageLinkIconTemplate = e.template;
                    break;
                  case "paginatorlastpagelinkicon":
                    this.paginatorLastPageLinkIconTemplate = e.template;
                    break;
                  case "paginatorpreviouspagelinkicon":
                    this.paginatorPreviousPageLinkIconTemplate = e.template;
                    break;
                  case "paginatornextpagelinkicon":
                    this.paginatorNextPageLinkIconTemplate = e.template;
                    break;
                  case "loadingicon":
                    this.loadingIconTemplate = e.template;
                    break;
                  case "reorderindicatorupicon":
                    this.reorderIndicatorUpIconTemplate = e.template;
                    break;
                  case "reorderindicatordownicon":
                    this.reorderIndicatorDownIconTemplate = e.template;
                    break;
                  case "sorticon":
                    this.sortIconTemplate = e.template;
                    break;
                  case "checkboxicon":
                    this.checkboxIconTemplate = e.template;
                    break;
                  case "headercheckboxicon":
                    this.headerCheckboxIconTemplate = e.template;
                }
              });
            }
            ngAfterViewInit() {
              Ai(this.platformId) &&
                this.isStateful() &&
                this.resizableColumns &&
                this.restoreColumnWidths();
            }
            ngOnChanges(e) {
              e.value &&
                (this.isStateful() &&
                  !this.stateRestored &&
                  Ai(this.platformId) &&
                  this.restoreState(),
                (this._value = e.value.currentValue),
                this.lazy ||
                  ((this.totalRecords = this._value ? this._value.length : 0),
                  "single" == this.sortMode &&
                  (this.sortField || this.groupRowsBy)
                    ? this.sortSingle()
                    : "multiple" == this.sortMode &&
                      (this.multiSortMeta || this.groupRowsBy)
                    ? this.sortMultiple()
                    : this.hasFilter() && this._filter()),
                this.tableService.onValueChange(e.value.currentValue)),
                e.columns &&
                  ((this._columns = e.columns.currentValue),
                  this.tableService.onColumnsChange(e.columns.currentValue),
                  this._columns &&
                    this.isStateful() &&
                    this.reorderableColumns &&
                    !this.columnOrderStateRestored &&
                    this.restoreColumnOrder()),
                e.sortField &&
                  ((this._sortField = e.sortField.currentValue),
                  (!this.lazy || this.initialized) &&
                    "single" === this.sortMode &&
                    this.sortSingle()),
                e.groupRowsBy &&
                  (!this.lazy || this.initialized) &&
                  "single" === this.sortMode &&
                  this.sortSingle(),
                e.sortOrder &&
                  ((this._sortOrder = e.sortOrder.currentValue),
                  (!this.lazy || this.initialized) &&
                    "single" === this.sortMode &&
                    this.sortSingle()),
                e.groupRowsByOrder &&
                  (!this.lazy || this.initialized) &&
                  "single" === this.sortMode &&
                  this.sortSingle(),
                e.multiSortMeta &&
                  ((this._multiSortMeta = e.multiSortMeta.currentValue),
                  "multiple" === this.sortMode &&
                    (this.initialized || (!this.lazy && !this.virtualScroll)) &&
                    this.sortMultiple()),
                e.selection &&
                  ((this._selection = e.selection.currentValue),
                  this.preventSelectionSetterPropagation ||
                    (this.updateSelectionKeys(),
                    this.tableService.onSelectionChange()),
                  (this.preventSelectionSetterPropagation = !1)),
                e.selectAll &&
                  ((this._selectAll = e.selectAll.currentValue),
                  this.preventSelectionSetterPropagation ||
                    (this.updateSelectionKeys(),
                    this.tableService.onSelectionChange(),
                    this.isStateful() && this.saveState()),
                  (this.preventSelectionSetterPropagation = !1));
            }
            get processedData() {
              return this.filteredValue || this.value || [];
            }
            _initialColWidths;
            dataToRender(e) {
              const i = e || this.processedData;
              if (i && this.paginator) {
                const o = this.lazy ? 0 : this.first;
                return i.slice(o, o + this.rows);
              }
              return i;
            }
            updateSelectionKeys() {
              if (this.dataKey && this._selection)
                if (((this.selectionKeys = {}), Array.isArray(this._selection)))
                  for (let e of this._selection)
                    this.selectionKeys[
                      String(P.resolveFieldData(e, this.dataKey))
                    ] = 1;
                else
                  this.selectionKeys[
                    String(P.resolveFieldData(this._selection, this.dataKey))
                  ] = 1;
            }
            onPageChange(e) {
              (this.first = e.first),
                (this.rows = e.rows),
                this.onPage.emit({ first: this.first, rows: this.rows }),
                this.lazy &&
                  this.onLazyLoad.emit(this.createLazyLoadMetadata()),
                this.firstChange.emit(this.first),
                this.rowsChange.emit(this.rows),
                this.tableService.onValueChange(this.value),
                this.isStateful() && this.saveState(),
                (this.anchorRowIndex = null),
                this.scrollable && this.resetScrollTop();
            }
            sort(e) {
              let i = e.originalEvent;
              if (
                ("single" === this.sortMode &&
                  ((this._sortOrder =
                    this.sortField === e.field
                      ? -1 * this.sortOrder
                      : this.defaultSortOrder),
                  (this._sortField = e.field),
                  this.resetPageOnSort &&
                    ((this._first = 0),
                    this.firstChange.emit(this._first),
                    this.scrollable && this.resetScrollTop()),
                  this.sortSingle()),
                "multiple" === this.sortMode)
              ) {
                let o = i.metaKey || i.ctrlKey,
                  r = this.getSortMeta(e.field);
                r
                  ? o
                    ? (r.order = -1 * r.order)
                    : ((this._multiSortMeta = [
                        { field: e.field, order: -1 * r.order },
                      ]),
                      this.resetPageOnSort &&
                        ((this._first = 0),
                        this.firstChange.emit(this._first),
                        this.scrollable && this.resetScrollTop()))
                  : ((!o || !this.multiSortMeta) &&
                      ((this._multiSortMeta = []),
                      this.resetPageOnSort &&
                        ((this._first = 0),
                        this.firstChange.emit(this._first))),
                    this._multiSortMeta.push({
                      field: e.field,
                      order: this.defaultSortOrder,
                    })),
                  this.sortMultiple();
              }
              this.isStateful() && this.saveState(),
                (this.anchorRowIndex = null);
            }
            sortSingle() {
              let e = this.sortField || this.groupRowsBy,
                i = this.sortField ? this.sortOrder : this.groupRowsByOrder;
              if (
                this.groupRowsBy &&
                this.sortField &&
                this.groupRowsBy !== this.sortField
              )
                return (
                  (this._multiSortMeta = [
                    this.getGroupRowsMeta(),
                    { field: this.sortField, order: this.sortOrder },
                  ]),
                  void this.sortMultiple()
                );
              if (e && i) {
                this.restoringSort && (this.restoringSort = !1),
                  this.lazy
                    ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                    : this.value &&
                      (this.customSort
                        ? this.sortFunction.emit({
                            data: this.value,
                            mode: this.sortMode,
                            field: e,
                            order: i,
                          })
                        : (this.value.sort((r, s) => {
                            let a = P.resolveFieldData(r, e),
                              l = P.resolveFieldData(s, e),
                              c = null;
                            return (
                              (c =
                                null == a && null != l
                                  ? -1
                                  : null != a && null == l
                                  ? 1
                                  : null == a && null == l
                                  ? 0
                                  : "string" == typeof a && "string" == typeof l
                                  ? a.localeCompare(l)
                                  : a < l
                                  ? -1
                                  : a > l
                                  ? 1
                                  : 0),
                              i * c
                            );
                          }),
                          (this._value = [...this.value])),
                      this.hasFilter() && this._filter());
                let o = { field: e, order: i };
                this.onSort.emit(o), this.tableService.onSort(o);
              }
            }
            sortMultiple() {
              this.groupRowsBy &&
                (this._multiSortMeta
                  ? this.multiSortMeta[0].field !== this.groupRowsBy &&
                    (this._multiSortMeta = [
                      this.getGroupRowsMeta(),
                      ...this._multiSortMeta,
                    ])
                  : (this._multiSortMeta = [this.getGroupRowsMeta()])),
                this.multiSortMeta &&
                  (this.lazy
                    ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                    : this.value &&
                      (this.customSort
                        ? this.sortFunction.emit({
                            data: this.value,
                            mode: this.sortMode,
                            multiSortMeta: this.multiSortMeta,
                          })
                        : (this.value.sort((e, i) =>
                            this.multisortField(e, i, this.multiSortMeta, 0)
                          ),
                          (this._value = [...this.value])),
                      this.hasFilter() && this._filter()),
                  this.onSort.emit({ multisortmeta: this.multiSortMeta }),
                  this.tableService.onSort(this.multiSortMeta));
            }
            multisortField(e, i, o, r) {
              const s = P.resolveFieldData(e, o[r].field),
                a = P.resolveFieldData(i, o[r].field);
              return 0 === P.compare(s, a, this.filterLocale)
                ? o.length - 1 > r
                  ? this.multisortField(e, i, o, r + 1)
                  : 0
                : this.compareValuesOnSort(s, a, o[r].order);
            }
            compareValuesOnSort(e, i, o) {
              return P.sort(e, i, o, this.filterLocale, this.sortOrder);
            }
            getSortMeta(e) {
              if (this.multiSortMeta && this.multiSortMeta.length)
                for (let i = 0; i < this.multiSortMeta.length; i++)
                  if (this.multiSortMeta[i].field === e)
                    return this.multiSortMeta[i];
              return null;
            }
            isSorted(e) {
              if ("single" === this.sortMode)
                return this.sortField && this.sortField === e;
              if ("multiple" === this.sortMode) {
                let i = !1;
                if (this.multiSortMeta)
                  for (let o = 0; o < this.multiSortMeta.length; o++)
                    if (this.multiSortMeta[o].field == e) {
                      i = !0;
                      break;
                    }
                return i;
              }
            }
            handleRowClick(e) {
              let i = e.originalEvent.target,
                o = i.nodeName,
                r = i.parentElement && i.parentElement.nodeName;
              if (
                "INPUT" != o &&
                "BUTTON" != o &&
                "A" != o &&
                "INPUT" != r &&
                "BUTTON" != r &&
                "A" != r &&
                !w.hasClass(e.originalEvent.target, "p-clickable")
              ) {
                if (this.selectionMode) {
                  let s = e.rowData,
                    a = e.rowIndex;
                  if (
                    ((this.preventSelectionSetterPropagation = !0),
                    this.isMultipleSelectionMode() &&
                      e.originalEvent.shiftKey &&
                      null != this.anchorRowIndex)
                  )
                    w.clearSelection(),
                      null != this.rangeRowIndex &&
                        this.clearSelectionRange(e.originalEvent),
                      (this.rangeRowIndex = a),
                      this.selectRange(e.originalEvent, a);
                  else {
                    let l = this.isSelected(s);
                    if (!l && !this.isRowSelectable(s, a)) return;
                    let c = !this.rowTouched && this.metaKeySelection,
                      u = this.dataKey
                        ? String(P.resolveFieldData(s, this.dataKey))
                        : null;
                    if (
                      ((this.anchorRowIndex = a), (this.rangeRowIndex = a), c)
                    ) {
                      let h =
                        e.originalEvent.metaKey || e.originalEvent.ctrlKey;
                      if (l && h) {
                        if (this.isSingleSelectionMode())
                          (this._selection = null),
                            (this.selectionKeys = {}),
                            this.selectionChange.emit(null);
                        else {
                          let m = this.findIndexInSelection(s);
                          (this._selection = this.selection.filter(
                            (_, b) => b != m
                          )),
                            this.selectionChange.emit(this.selection),
                            u && delete this.selectionKeys[u];
                        }
                        this.onRowUnselect.emit({
                          originalEvent: e.originalEvent,
                          data: s,
                          type: "row",
                        });
                      } else
                        this.isSingleSelectionMode()
                          ? ((this._selection = s),
                            this.selectionChange.emit(s),
                            u &&
                              ((this.selectionKeys = {}),
                              (this.selectionKeys[u] = 1)))
                          : this.isMultipleSelectionMode() &&
                            (h
                              ? (this._selection = this.selection || [])
                              : ((this._selection = []),
                                (this.selectionKeys = {})),
                            (this._selection = [...this.selection, s]),
                            this.selectionChange.emit(this.selection),
                            u && (this.selectionKeys[u] = 1)),
                          this.onRowSelect.emit({
                            originalEvent: e.originalEvent,
                            data: s,
                            type: "row",
                            index: a,
                          });
                    } else if ("single" === this.selectionMode)
                      l
                        ? ((this._selection = null),
                          (this.selectionKeys = {}),
                          this.selectionChange.emit(this.selection),
                          this.onRowUnselect.emit({
                            originalEvent: e.originalEvent,
                            data: s,
                            type: "row",
                            index: a,
                          }))
                        : ((this._selection = s),
                          this.selectionChange.emit(this.selection),
                          this.onRowSelect.emit({
                            originalEvent: e.originalEvent,
                            data: s,
                            type: "row",
                            index: a,
                          }),
                          u &&
                            ((this.selectionKeys = {}),
                            (this.selectionKeys[u] = 1)));
                    else if ("multiple" === this.selectionMode)
                      if (l) {
                        let h = this.findIndexInSelection(s);
                        (this._selection = this.selection.filter(
                          (m, _) => _ != h
                        )),
                          this.selectionChange.emit(this.selection),
                          this.onRowUnselect.emit({
                            originalEvent: e.originalEvent,
                            data: s,
                            type: "row",
                            index: a,
                          }),
                          u && delete this.selectionKeys[u];
                      } else
                        (this._selection = this.selection
                          ? [...this.selection, s]
                          : [s]),
                          this.selectionChange.emit(this.selection),
                          this.onRowSelect.emit({
                            originalEvent: e.originalEvent,
                            data: s,
                            type: "row",
                            index: a,
                          }),
                          u && (this.selectionKeys[u] = 1);
                  }
                  this.tableService.onSelectionChange(),
                    this.isStateful() && this.saveState();
                }
                this.rowTouched = !1;
              }
            }
            handleRowTouchEnd(e) {
              this.rowTouched = !0;
            }
            handleRowRightClick(e) {
              if (this.contextMenu) {
                const i = e.rowData,
                  o = e.rowIndex;
                if ("separate" === this.contextMenuSelectionMode)
                  (this.contextMenuSelection = i),
                    this.contextMenuSelectionChange.emit(i),
                    this.onContextMenuSelect.emit({
                      originalEvent: e.originalEvent,
                      data: i,
                      index: e.rowIndex,
                    }),
                    this.contextMenu.show(e.originalEvent),
                    this.tableService.onContextMenu(i);
                else if ("joint" === this.contextMenuSelectionMode) {
                  this.preventSelectionSetterPropagation = !0;
                  let r = this.isSelected(i),
                    s = this.dataKey
                      ? String(P.resolveFieldData(i, this.dataKey))
                      : null;
                  if (!r) {
                    if (!this.isRowSelectable(i, o)) return;
                    this.isSingleSelectionMode()
                      ? ((this.selection = i),
                        this.selectionChange.emit(i),
                        s &&
                          ((this.selectionKeys = {}),
                          (this.selectionKeys[s] = 1)))
                      : this.isMultipleSelectionMode() &&
                        ((this._selection = this.selection
                          ? [...this.selection, i]
                          : [i]),
                        this.selectionChange.emit(this.selection),
                        s && (this.selectionKeys[s] = 1));
                  }
                  this.tableService.onSelectionChange(),
                    this.contextMenu.show(e.originalEvent),
                    this.onContextMenuSelect.emit({
                      originalEvent: e,
                      data: i,
                      index: e.rowIndex,
                    });
                }
              }
            }
            selectRange(e, i) {
              let o, r;
              this.anchorRowIndex > i
                ? ((o = i), (r = this.anchorRowIndex))
                : this.anchorRowIndex < i
                ? ((o = this.anchorRowIndex), (r = i))
                : ((o = i), (r = i)),
                this.lazy && this.paginator && (o -= this.first);
              let s = [];
              for (let a = o; a <= r; a++) {
                let l = this.filteredValue
                  ? this.filteredValue[a]
                  : this.value[a];
                if (!this.isSelected(l)) {
                  if (!this.isRowSelectable(l, i)) continue;
                  s.push(l), (this._selection = [...this.selection, l]);
                  let c = this.dataKey
                    ? String(P.resolveFieldData(l, this.dataKey))
                    : null;
                  c && (this.selectionKeys[c] = 1);
                }
              }
              this.selectionChange.emit(this.selection),
                this.onRowSelect.emit({
                  originalEvent: e,
                  data: s,
                  type: "row",
                });
            }
            clearSelectionRange(e) {
              let i,
                o,
                r = this.rangeRowIndex,
                s = this.anchorRowIndex;
              r > s
                ? ((i = this.anchorRowIndex), (o = this.rangeRowIndex))
                : r < s
                ? ((i = this.rangeRowIndex), (o = this.anchorRowIndex))
                : ((i = this.rangeRowIndex), (o = this.rangeRowIndex));
              for (let a = i; a <= o; a++) {
                let l = this.value[a],
                  c = this.findIndexInSelection(l);
                this._selection = this.selection.filter((h, m) => m != c);
                let u = this.dataKey
                  ? String(P.resolveFieldData(l, this.dataKey))
                  : null;
                u && delete this.selectionKeys[u],
                  this.onRowUnselect.emit({
                    originalEvent: e,
                    data: l,
                    type: "row",
                  });
              }
            }
            isSelected(e) {
              return (
                !(!e || !this.selection) &&
                (this.dataKey
                  ? void 0 !==
                    this.selectionKeys[P.resolveFieldData(e, this.dataKey)]
                  : Array.isArray(this.selection)
                  ? this.findIndexInSelection(e) > -1
                  : this.equals(e, this.selection))
              );
            }
            findIndexInSelection(e) {
              let i = -1;
              if (this.selection && this.selection.length)
                for (let o = 0; o < this.selection.length; o++)
                  if (this.equals(e, this.selection[o])) {
                    i = o;
                    break;
                  }
              return i;
            }
            isRowSelectable(e, i) {
              return !(
                this.rowSelectable && !this.rowSelectable({ data: e, index: i })
              );
            }
            toggleRowWithRadio(e, i) {
              if (
                ((this.preventSelectionSetterPropagation = !0),
                this.selection != i)
              ) {
                if (!this.isRowSelectable(i, e.rowIndex)) return;
                (this._selection = i),
                  this.selectionChange.emit(this.selection),
                  this.onRowSelect.emit({
                    originalEvent: e.originalEvent,
                    index: e.rowIndex,
                    data: i,
                    type: "radiobutton",
                  }),
                  this.dataKey &&
                    ((this.selectionKeys = {}),
                    (this.selectionKeys[
                      String(P.resolveFieldData(i, this.dataKey))
                    ] = 1));
              } else
                (this._selection = null),
                  this.selectionChange.emit(this.selection),
                  this.onRowUnselect.emit({
                    originalEvent: e.originalEvent,
                    index: e.rowIndex,
                    data: i,
                    type: "radiobutton",
                  });
              this.tableService.onSelectionChange(),
                this.isStateful() && this.saveState();
            }
            toggleRowWithCheckbox(e, i) {
              this.selection = this.selection || [];
              let o = this.isSelected(i),
                r = this.dataKey
                  ? String(P.resolveFieldData(i, this.dataKey))
                  : null;
              if (((this.preventSelectionSetterPropagation = !0), o)) {
                let s = this.findIndexInSelection(i);
                (this._selection = this.selection.filter((a, l) => l != s)),
                  this.selectionChange.emit(this.selection),
                  this.onRowUnselect.emit({
                    originalEvent: e.originalEvent,
                    index: e.rowIndex,
                    data: i,
                    type: "checkbox",
                  }),
                  r && delete this.selectionKeys[r];
              } else {
                if (!this.isRowSelectable(i, e.rowIndex)) return;
                (this._selection = this.selection
                  ? [...this.selection, i]
                  : [i]),
                  this.selectionChange.emit(this.selection),
                  this.onRowSelect.emit({
                    originalEvent: e.originalEvent,
                    index: e.rowIndex,
                    data: i,
                    type: "checkbox",
                  }),
                  r && (this.selectionKeys[r] = 1);
              }
              this.tableService.onSelectionChange(),
                this.isStateful() && this.saveState();
            }
            toggleRowsWithCheckbox(e, i) {
              if (null !== this._selectAll)
                this.selectAllChange.emit({ originalEvent: e, checked: i });
              else {
                const o = this.selectionPageOnly
                  ? this.dataToRender(this.processedData)
                  : this.processedData;
                let r =
                  this.selectionPageOnly && this._selection
                    ? this._selection.filter(
                        (s) => !o.some((a) => this.equals(s, a))
                      )
                    : [];
                i &&
                  ((r = this.frozenValue
                    ? [...r, ...this.frozenValue, ...o]
                    : [...r, ...o]),
                  (r = this.rowSelectable
                    ? r.filter((s, a) =>
                        this.rowSelectable({ data: s, index: a })
                      )
                    : r)),
                  (this._selection = r),
                  (this.preventSelectionSetterPropagation = !0),
                  this.updateSelectionKeys(),
                  this.selectionChange.emit(this._selection),
                  this.tableService.onSelectionChange(),
                  this.onHeaderCheckboxToggle.emit({
                    originalEvent: e,
                    checked: i,
                  }),
                  this.isStateful() && this.saveState();
              }
            }
            equals(e, i) {
              return "equals" === this.compareSelectionBy
                ? e === i
                : P.equals(e, i, this.dataKey);
            }
            filter(e, i, o) {
              this.filterTimeout && clearTimeout(this.filterTimeout),
                this.isFilterBlank(e)
                  ? this.filters[i] && delete this.filters[i]
                  : (this.filters[i] = { value: e, matchMode: o }),
                (this.filterTimeout = setTimeout(() => {
                  this._filter(), (this.filterTimeout = null);
                }, this.filterDelay)),
                (this.anchorRowIndex = null);
            }
            filterGlobal(e, i) {
              this.filter(e, "global", i);
            }
            isFilterBlank(e) {
              return (
                null == e ||
                !!(
                  ("string" == typeof e && 0 == e.trim().length) ||
                  (Array.isArray(e) && 0 == e.length)
                )
              );
            }
            _filter() {
              if (
                (this.restoringFilter ||
                  ((this.first = 0), this.firstChange.emit(this.first)),
                this.lazy)
              )
                this.onLazyLoad.emit(this.createLazyLoadMetadata());
              else {
                if (!this.value) return;
                if (this.hasFilter()) {
                  let e;
                  if (this.filters.global) {
                    if (!this.columns && !this.globalFilterFields)
                      throw new Error(
                        "Global filtering requires dynamic columns or globalFilterFields to be defined."
                      );
                    e = this.globalFilterFields || this.columns;
                  }
                  this.filteredValue = [];
                  for (let i = 0; i < this.value.length; i++) {
                    let a,
                      o = !0,
                      r = !1,
                      s = !1;
                    for (let l in this.filters)
                      if (this.filters.hasOwnProperty(l) && "global" !== l) {
                        s = !0;
                        let c = l,
                          u = this.filters[c];
                        if (Array.isArray(u)) {
                          for (let h of u)
                            if (
                              ((o = this.executeLocalFilter(
                                c,
                                this.value[i],
                                h
                              )),
                              (h.operator === Ia.OR && o) ||
                                (h.operator === Ia.AND && !o))
                            )
                              break;
                        } else o = this.executeLocalFilter(c, this.value[i], u);
                        if (!o) break;
                      }
                    if (this.filters.global && !r && e)
                      for (
                        let l = 0;
                        l < e.length &&
                        ((r = this.filterService.filters[
                          this.filters.global.matchMode
                        ](
                          P.resolveFieldData(this.value[i], e[l].field || e[l]),
                          this.filters.global.value,
                          this.filterLocale
                        )),
                        !r);
                        l++
                      );
                    (a = this.filters.global ? (s ? s && o && r : r) : s && o),
                      a && this.filteredValue.push(this.value[i]);
                  }
                  this.filteredValue.length === this.value.length &&
                    (this.filteredValue = null),
                    this.paginator &&
                      (this.totalRecords = this.filteredValue
                        ? this.filteredValue.length
                        : this.value
                        ? this.value.length
                        : 0);
                } else
                  (this.filteredValue = null),
                    this.paginator &&
                      (this.totalRecords = this.value ? this.value.length : 0);
              }
              this.onFilter.emit({
                filters: this.filters,
                filteredValue: this.filteredValue || this.value,
              }),
                this.tableService.onValueChange(this.value),
                this.isStateful() && !this.restoringFilter && this.saveState(),
                this.restoringFilter && (this.restoringFilter = !1),
                this.cd.markForCheck(),
                this.scrollable && this.resetScrollTop();
            }
            executeLocalFilter(e, i, o) {
              let r = o.value,
                s = o.matchMode || at.STARTS_WITH,
                a = P.resolveFieldData(i, e);
              return (0, this.filterService.filters[s])(
                a,
                r,
                this.filterLocale
              );
            }
            hasFilter() {
              let e = !0;
              for (let i in this.filters)
                if (this.filters.hasOwnProperty(i)) {
                  e = !1;
                  break;
                }
              return !e;
            }
            createLazyLoadMetadata() {
              return {
                first: this.first,
                rows: this.rows,
                sortField: this.sortField,
                sortOrder: this.sortOrder,
                filters: this.filters,
                globalFilter:
                  this.filters && this.filters.global
                    ? this.filters.global.value
                    : null,
                multiSortMeta: this.multiSortMeta,
                forceUpdate: () => this.cd.detectChanges(),
              };
            }
            clear() {
              (this._sortField = null),
                (this._sortOrder = this.defaultSortOrder),
                (this._multiSortMeta = null),
                this.tableService.onSort(null),
                this.clearFilterValues(),
                (this.filteredValue = null),
                (this.first = 0),
                this.firstChange.emit(this.first),
                this.lazy
                  ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                  : (this.totalRecords = this._value ? this._value.length : 0);
            }
            clearFilterValues() {
              for (const [, e] of Object.entries(this.filters))
                if (Array.isArray(e)) for (let i of e) i.value = null;
                else e && (e.value = null);
            }
            reset() {
              this.clear();
            }
            getExportHeader(e) {
              return e[this.exportHeader] || e.header || e.field;
            }
            exportCSV(e) {
              let i,
                o = "",
                r = this.columns;
              e && e.selectionOnly
                ? (i = this.selection || [])
                : e && e.allValues
                ? (i = this.value || [])
                : ((i = this.filteredValue || this.value),
                  this.frozenValue &&
                    (i = i ? [...this.frozenValue, ...i] : this.frozenValue));
              for (let l = 0; l < r.length; l++) {
                let c = r[l];
                !1 !== c.exportable &&
                  c.field &&
                  ((o += '"' + this.getExportHeader(c) + '"'),
                  l < r.length - 1 && (o += this.csvSeparator));
              }
              i.forEach((l, c) => {
                o += "\n";
                for (let u = 0; u < r.length; u++) {
                  let h = r[u];
                  if (!1 !== h.exportable && h.field) {
                    let m = P.resolveFieldData(l, h.field);
                    (m =
                      null != m
                        ? this.exportFunction
                          ? this.exportFunction({ data: m, field: h.field })
                          : String(m).replace(/"/g, '""')
                        : ""),
                      (o += '"' + m + '"'),
                      u < r.length - 1 && (o += this.csvSeparator);
                  }
                }
              });
              let s = new Blob([o], { type: "text/csv;charset=utf-8;" }),
                a = this.renderer.createElement("a");
              (a.style.display = "none"),
                this.renderer.appendChild(this.document.body, a),
                void 0 !== a.download
                  ? (a.setAttribute("href", URL.createObjectURL(s)),
                    a.setAttribute("download", this.exportFilename + ".csv"),
                    a.click())
                  : ((o = "data:text/csv;charset=utf-8," + o),
                    this.window.open(encodeURI(o))),
                this.renderer.removeChild(this.document.body, a);
            }
            onLazyItemLoad(e) {
              this.onLazyLoad.emit({
                ...this.createLazyLoadMetadata(),
                ...e,
                rows: e.last - e.first,
              });
            }
            resetScrollTop() {
              this.virtualScroll
                ? this.scrollToVirtualIndex(0)
                : this.scrollTo({ top: 0 });
            }
            scrollToVirtualIndex(e) {
              this.scroller && this.scroller.scrollToIndex(e);
            }
            scrollTo(e) {
              this.virtualScroll
                ? this.scroller?.scrollTo(e)
                : this.wrapperViewChild &&
                  this.wrapperViewChild.nativeElement &&
                  (this.wrapperViewChild.nativeElement.scrollTo
                    ? this.wrapperViewChild.nativeElement.scrollTo(e)
                    : ((this.wrapperViewChild.nativeElement.scrollLeft =
                        e.left),
                      (this.wrapperViewChild.nativeElement.scrollTop = e.top)));
            }
            updateEditingCell(e, i, o, r) {
              (this.editingCell = e),
                (this.editingCellData = i),
                (this.editingCellField = o),
                (this.editingCellRowIndex = r),
                this.bindDocumentEditListener();
            }
            isEditingCellValid() {
              return (
                this.editingCell &&
                0 === w.find(this.editingCell, ".ng-invalid.ng-dirty").length
              );
            }
            bindDocumentEditListener() {
              this.documentEditListener ||
                (this.documentEditListener = this.renderer.listen(
                  this.document,
                  "click",
                  (e) => {
                    this.editingCell &&
                      !this.selfClick &&
                      this.isEditingCellValid() &&
                      (w.removeClass(this.editingCell, "p-cell-editing"),
                      (this.editingCell = null),
                      this.onEditComplete.emit({
                        field: this.editingCellField,
                        data: this.editingCellData,
                        originalEvent: e,
                        index: this.editingCellRowIndex,
                      }),
                      (this.editingCellField = null),
                      (this.editingCellData = null),
                      (this.editingCellRowIndex = null),
                      this.unbindDocumentEditListener(),
                      this.cd.markForCheck(),
                      this.overlaySubscription &&
                        this.overlaySubscription.unsubscribe()),
                      (this.selfClick = !1);
                  }
                ));
            }
            unbindDocumentEditListener() {
              this.documentEditListener &&
                (this.documentEditListener(),
                (this.documentEditListener = null));
            }
            initRowEdit(e) {
              let i = String(P.resolveFieldData(e, this.dataKey));
              this.editingRowKeys[i] = !0;
            }
            saveRowEdit(e, i) {
              if (0 === w.find(i, ".ng-invalid.ng-dirty").length) {
                let o = String(P.resolveFieldData(e, this.dataKey));
                delete this.editingRowKeys[o];
              }
            }
            cancelRowEdit(e) {
              let i = String(P.resolveFieldData(e, this.dataKey));
              delete this.editingRowKeys[i];
            }
            toggleRow(e, i) {
              if (!this.dataKey)
                throw new Error("dataKey must be defined to use row expansion");
              let o = String(P.resolveFieldData(e, this.dataKey));
              null != this.expandedRowKeys[o]
                ? (delete this.expandedRowKeys[o],
                  this.onRowCollapse.emit({ originalEvent: i, data: e }))
                : ("single" === this.rowExpandMode &&
                    (this.expandedRowKeys = {}),
                  (this.expandedRowKeys[o] = !0),
                  this.onRowExpand.emit({ originalEvent: i, data: e })),
                i && i.preventDefault(),
                this.isStateful() && this.saveState();
            }
            isRowExpanded(e) {
              return (
                !0 ===
                this.expandedRowKeys[
                  String(P.resolveFieldData(e, this.dataKey))
                ]
              );
            }
            isRowEditing(e) {
              return (
                !0 ===
                this.editingRowKeys[String(P.resolveFieldData(e, this.dataKey))]
              );
            }
            isSingleSelectionMode() {
              return "single" === this.selectionMode;
            }
            isMultipleSelectionMode() {
              return "multiple" === this.selectionMode;
            }
            onColumnResizeBegin(e) {
              let i = w.getOffset(this.containerViewChild?.nativeElement).left;
              (this.resizeColumnElement = e.target.parentElement),
                (this.columnResizing = !0),
                (this.lastResizerHelperX =
                  e.pageX -
                  i +
                  this.containerViewChild?.nativeElement.scrollLeft),
                this.onColumnResize(e),
                e.preventDefault();
            }
            onColumnResize(e) {
              let i = w.getOffset(this.containerViewChild?.nativeElement).left;
              w.addClass(
                this.containerViewChild?.nativeElement,
                "p-unselectable-text"
              ),
                (this.resizeHelperViewChild.nativeElement.style.height =
                  this.containerViewChild?.nativeElement.offsetHeight + "px"),
                (this.resizeHelperViewChild.nativeElement.style.top = "0px"),
                (this.resizeHelperViewChild.nativeElement.style.left =
                  e.pageX -
                  i +
                  this.containerViewChild?.nativeElement.scrollLeft +
                  "px"),
                (this.resizeHelperViewChild.nativeElement.style.display =
                  "block");
            }
            onColumnResizeEnd() {
              let e =
                  this.resizeHelperViewChild?.nativeElement.offsetLeft -
                  this.lastResizerHelperX,
                o = this.resizeColumnElement.offsetWidth + e;
              if (
                o >=
                (this.resizeColumnElement.style.minWidth.replace(
                  /[^\d.]/g,
                  ""
                ) || 15)
              ) {
                if ("fit" === this.columnResizeMode) {
                  let a =
                    this.resizeColumnElement.nextElementSibling.offsetWidth - e;
                  o > 15 && a > 15 && this.resizeTableCells(o, a);
                } else
                  "expand" === this.columnResizeMode &&
                    ((this._initialColWidths = this._totalTableWidth()),
                    this.setResizeTableWidth(
                      this.tableViewChild?.nativeElement.offsetWidth + e + "px"
                    ),
                    this.resizeTableCells(o, null));
                this.onColResize.emit({
                  element: this.resizeColumnElement,
                  delta: e,
                }),
                  this.isStateful() && this.saveState();
              }
              (this.resizeHelperViewChild.nativeElement.style.display = "none"),
                w.removeClass(
                  this.containerViewChild?.nativeElement,
                  "p-unselectable-text"
                );
            }
            _totalTableWidth() {
              let e = [];
              const i = w.findSingle(
                this.containerViewChild.nativeElement,
                ".p-datatable-thead"
              );
              return (
                w.find(i, "tr > th").forEach((r) => e.push(w.getOuterWidth(r))),
                e
              );
            }
            onColumnDragStart(e, i) {
              (this.reorderIconWidth = w.getHiddenElementOuterWidth(
                this.reorderIndicatorUpViewChild?.nativeElement
              )),
                (this.reorderIconHeight = w.getHiddenElementOuterHeight(
                  this.reorderIndicatorDownViewChild?.nativeElement
                )),
                (this.draggedColumn = i),
                e.dataTransfer.setData("text", "b");
            }
            onColumnDragEnter(e, i) {
              if (this.reorderableColumns && this.draggedColumn && i) {
                e.preventDefault();
                let o = w.getOffset(this.containerViewChild?.nativeElement),
                  r = w.getOffset(i);
                if (this.draggedColumn != i) {
                  w.indexWithinGroup(this.draggedColumn, "preorderablecolumn"),
                    w.indexWithinGroup(i, "preorderablecolumn");
                  let l = r.left - o.left,
                    u = r.left + i.offsetWidth / 2;
                  (this.reorderIndicatorUpViewChild.nativeElement.style.top =
                    r.top - o.top - (this.reorderIconHeight - 1) + "px"),
                    (this.reorderIndicatorDownViewChild.nativeElement.style.top =
                      r.top - o.top + i.offsetHeight + "px"),
                    e.pageX > u
                      ? ((this.reorderIndicatorUpViewChild.nativeElement.style.left =
                          l +
                          i.offsetWidth -
                          Math.ceil(this.reorderIconWidth / 2) +
                          "px"),
                        (this.reorderIndicatorDownViewChild.nativeElement.style.left =
                          l +
                          i.offsetWidth -
                          Math.ceil(this.reorderIconWidth / 2) +
                          "px"),
                        (this.dropPosition = 1))
                      : ((this.reorderIndicatorUpViewChild.nativeElement.style.left =
                          l - Math.ceil(this.reorderIconWidth / 2) + "px"),
                        (this.reorderIndicatorDownViewChild.nativeElement.style.left =
                          l - Math.ceil(this.reorderIconWidth / 2) + "px"),
                        (this.dropPosition = -1)),
                    (this.reorderIndicatorUpViewChild.nativeElement.style.display =
                      "block"),
                    (this.reorderIndicatorDownViewChild.nativeElement.style.display =
                      "block");
                } else e.dataTransfer.dropEffect = "none";
              }
            }
            onColumnDragLeave(e) {
              this.reorderableColumns &&
                this.draggedColumn &&
                e.preventDefault();
            }
            onColumnDrop(e, i) {
              if ((e.preventDefault(), this.draggedColumn)) {
                let o = w.indexWithinGroup(
                    this.draggedColumn,
                    "preorderablecolumn"
                  ),
                  r = w.indexWithinGroup(i, "preorderablecolumn"),
                  s = o != r;
                if (
                  (s &&
                    ((r - o == 1 && -1 === this.dropPosition) ||
                      (o - r == 1 && 1 === this.dropPosition)) &&
                    (s = !1),
                  s && r < o && 1 === this.dropPosition && (r += 1),
                  s && r > o && -1 === this.dropPosition && (r -= 1),
                  s &&
                    (P.reorderArray(this.columns, o, r),
                    this.onColReorder.emit({
                      dragIndex: o,
                      dropIndex: r,
                      columns: this.columns,
                    }),
                    this.isStateful() &&
                      this.zone.runOutsideAngular(() => {
                        setTimeout(() => {
                          this.saveState();
                        });
                      })),
                  this.resizableColumns &&
                    this.resizeColumnElement &&
                    this.resizeColumnElement.isSameNode(this.draggedColumn))
                ) {
                  let a =
                    "expand" === this.columnResizeMode
                      ? this._initialColWidths
                      : this._totalTableWidth();
                  P.reorderArray(a, o + 1, r + 1),
                    this.updateStyleElement(a, o, null, null);
                }
                (this.reorderIndicatorUpViewChild.nativeElement.style.display =
                  "none"),
                  (this.reorderIndicatorDownViewChild.nativeElement.style.display =
                    "none"),
                  (this.draggedColumn.draggable = !1),
                  (this.draggedColumn = null),
                  (this.dropPosition = null);
              }
            }
            resizeTableCells(e, i) {
              let o = w.index(this.resizeColumnElement),
                r =
                  "expand" === this.columnResizeMode
                    ? this._initialColWidths
                    : this._totalTableWidth();
              this.updateStyleElement(r, o, e, i);
            }
            updateStyleElement(e, i, o, r) {
              this.destroyStyleElement(), this.createStyleElement();
              let s = "";
              e.forEach((a, l) => {
                let c = l === i ? o : r && l === i + 1 ? r : a;
                s += `\n                #${
                  this.id
                }-table > .p-datatable-thead > tr > th:nth-child(${
                  l + 1
                }),\n                #${
                  this.id
                }-table > .p-datatable-tbody > tr > td:nth-child(${
                  l + 1
                }),\n                #${
                  this.id
                }-table > .p-datatable-tfoot > tr > td:nth-child(${
                  l + 1
                }) {\n                    width: ${c}px !important; max-width: ${c}px !important;\n                }\n            `;
              }),
                this.renderer.setProperty(this.styleElement, "innerHTML", s);
            }
            onRowDragStart(e, i) {
              (this.rowDragging = !0),
                (this.draggedRowIndex = i),
                e.dataTransfer.setData("text", "b");
            }
            onRowDragOver(e, i, o) {
              if (this.rowDragging && this.draggedRowIndex !== i) {
                let r = w.getOffset(o).top,
                  s = e.pageY,
                  a = r + w.getOuterHeight(o) / 2,
                  l = o.previousElementSibling;
                s < a
                  ? (w.removeClass(o, "p-datatable-dragpoint-bottom"),
                    (this.droppedRowIndex = i),
                    l
                      ? w.addClass(l, "p-datatable-dragpoint-bottom")
                      : w.addClass(o, "p-datatable-dragpoint-top"))
                  : (l
                      ? w.removeClass(l, "p-datatable-dragpoint-bottom")
                      : w.addClass(o, "p-datatable-dragpoint-top"),
                    (this.droppedRowIndex = i + 1),
                    w.addClass(o, "p-datatable-dragpoint-bottom"));
              }
            }
            onRowDragLeave(e, i) {
              let o = i.previousElementSibling;
              o && w.removeClass(o, "p-datatable-dragpoint-bottom"),
                w.removeClass(i, "p-datatable-dragpoint-bottom"),
                w.removeClass(i, "p-datatable-dragpoint-top");
            }
            onRowDragEnd(e) {
              (this.rowDragging = !1),
                (this.draggedRowIndex = null),
                (this.droppedRowIndex = null);
            }
            onRowDrop(e, i) {
              if (null != this.droppedRowIndex) {
                let o =
                  this.draggedRowIndex > this.droppedRowIndex
                    ? this.droppedRowIndex
                    : 0 === this.droppedRowIndex
                    ? 0
                    : this.droppedRowIndex - 1;
                P.reorderArray(this.value, this.draggedRowIndex, o),
                  this.virtualScroll && (this._value = [...this._value]),
                  this.onRowReorder.emit({
                    dragIndex: this.draggedRowIndex,
                    dropIndex: o,
                  });
              }
              this.onRowDragLeave(e, i), this.onRowDragEnd(e);
            }
            isEmpty() {
              let e = this.filteredValue || this.value;
              return null == e || 0 == e.length;
            }
            getBlockableElement() {
              return this.el.nativeElement.children[0];
            }
            getStorage() {
              if (!Ai(this.platformId))
                throw new Error(
                  "Browser storage is not available in the server side."
                );
              switch (this.stateStorage) {
                case "local":
                  return window.localStorage;
                case "session":
                  return window.sessionStorage;
                default:
                  throw new Error(
                    this.stateStorage +
                      ' is not a valid value for the state storage, supported values are "local" and "session".'
                  );
              }
            }
            isStateful() {
              return null != this.stateKey;
            }
            saveState() {
              const e = this.getStorage();
              let i = {};
              this.paginator && ((i.first = this.first), (i.rows = this.rows)),
                this.sortField &&
                  ((i.sortField = this.sortField),
                  (i.sortOrder = this.sortOrder)),
                this.multiSortMeta && (i.multiSortMeta = this.multiSortMeta),
                this.hasFilter() && (i.filters = this.filters),
                this.resizableColumns && this.saveColumnWidths(i),
                this.reorderableColumns && this.saveColumnOrder(i),
                this.selection && (i.selection = this.selection),
                Object.keys(this.expandedRowKeys).length &&
                  (i.expandedRowKeys = this.expandedRowKeys),
                e.setItem(this.stateKey, JSON.stringify(i)),
                this.onStateSave.emit(i);
            }
            clearState() {
              const e = this.getStorage();
              this.stateKey && e.removeItem(this.stateKey);
            }
            restoreState() {
              const i = this.getStorage().getItem(this.stateKey),
                o = /\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z/;
              if (i) {
                let s = JSON.parse(i, function (s, a) {
                  return "string" == typeof a && o.test(a) ? new Date(a) : a;
                });
                this.paginator &&
                  (void 0 !== this.first &&
                    ((this.first = s.first), this.firstChange.emit(this.first)),
                  void 0 !== this.rows &&
                    ((this.rows = s.rows), this.rowsChange.emit(this.rows))),
                  s.sortField &&
                    ((this.restoringSort = !0),
                    (this._sortField = s.sortField),
                    (this._sortOrder = s.sortOrder)),
                  s.multiSortMeta &&
                    ((this.restoringSort = !0),
                    (this._multiSortMeta = s.multiSortMeta)),
                  s.filters &&
                    ((this.restoringFilter = !0), (this.filters = s.filters)),
                  this.resizableColumns &&
                    ((this.columnWidthsState = s.columnWidths),
                    (this.tableWidthState = s.tableWidth)),
                  s.expandedRowKeys &&
                    (this.expandedRowKeys = s.expandedRowKeys),
                  s.selection &&
                    Promise.resolve(null).then(() =>
                      this.selectionChange.emit(s.selection)
                    ),
                  (this.stateRestored = !0),
                  this.onStateRestore.emit(s);
              }
            }
            saveColumnWidths(e) {
              let i = [];
              w
                .find(
                  this.containerViewChild?.nativeElement,
                  ".p-datatable-thead > tr > th"
                )
                .forEach((r) => i.push(w.getOuterWidth(r))),
                (e.columnWidths = i.join(",")),
                "expand" === this.columnResizeMode &&
                  (e.tableWidth = w.getOuterWidth(
                    this.tableViewChild?.nativeElement
                  ));
            }
            setResizeTableWidth(e) {
              (this.tableViewChild.nativeElement.style.width = e),
                (this.tableViewChild.nativeElement.style.minWidth = e);
            }
            restoreColumnWidths() {
              if (this.columnWidthsState) {
                let e = this.columnWidthsState.split(",");
                if (
                  ("expand" === this.columnResizeMode &&
                    this.tableWidthState &&
                    this.setResizeTableWidth(this.tableWidthState + "px"),
                  P.isNotEmpty(e))
                ) {
                  this.createStyleElement();
                  let i = "";
                  e.forEach((o, r) => {
                    i += `\n                        #${
                      this.id
                    }-table > .p-datatable-thead > tr > th:nth-child(${
                      r + 1
                    }),\n                        #${
                      this.id
                    }-table > .p-datatable-tbody > tr > td:nth-child(${
                      r + 1
                    }),\n                        #${
                      this.id
                    }-table > .p-datatable-tfoot > tr > td:nth-child(${
                      r + 1
                    }) {\n                            width: ${o}px !important; max-width: ${o}px !important\n                        }\n                    `;
                  }),
                    (this.styleElement.innerHTML = i);
                }
              }
            }
            saveColumnOrder(e) {
              if (this.columns) {
                let i = [];
                this.columns.map((o) => {
                  i.push(o.field || o.key);
                }),
                  (e.columnOrder = i);
              }
            }
            restoreColumnOrder() {
              const i = this.getStorage().getItem(this.stateKey);
              if (i) {
                let r = JSON.parse(i).columnOrder;
                if (r) {
                  let s = [];
                  r.map((a) => {
                    let l = this.findColumnByKey(a);
                    l && s.push(l);
                  }),
                    (this.columnOrderStateRestored = !0),
                    (this.columns = s);
                }
              }
            }
            findColumnByKey(e) {
              if (!this.columns) return null;
              for (let i of this.columns)
                if (i.key === e || i.field === e) return i;
            }
            createStyleElement() {
              (this.styleElement = this.renderer.createElement("style")),
                (this.styleElement.type = "text/css"),
                this.renderer.appendChild(
                  this.document.head,
                  this.styleElement
                );
            }
            getGroupRowsMeta() {
              return { field: this.groupRowsBy, order: this.groupRowsByOrder };
            }
            createResponsiveStyle() {
              Ai(this.platformId) &&
                !this.responsiveStyleElement &&
                ((this.responsiveStyleElement =
                  this.renderer.createElement("style")),
                (this.responsiveStyleElement.type = "text/css"),
                this.renderer.appendChild(
                  this.document.head,
                  this.responsiveStyleElement
                ),
                this.renderer.setProperty(
                  this.responsiveStyleElement,
                  "innerHTML",
                  `\n    @media screen and (max-width: ${this.breakpoint}) {\n        #${this.id}-table > .p-datatable-thead > tr > th,\n        #${this.id}-table > .p-datatable-tfoot > tr > td {\n            display: none !important;\n        }\n\n        #${this.id}-table > .p-datatable-tbody > tr > td {\n            display: flex;\n            width: 100% !important;\n            align-items: center;\n            justify-content: space-between;\n        }\n\n        #${this.id}-table > .p-datatable-tbody > tr > td:not(:last-child) {\n            border: 0 none;\n        }\n\n        #${this.id}.p-datatable-gridlines > .p-datatable-wrapper > .p-datatable-table > .p-datatable-tbody > tr > td:last-child {\n            border-top: 0;\n            border-right: 0;\n            border-left: 0;\n        }\n\n        #${this.id}-table > .p-datatable-tbody > tr > td > .p-column-title {\n            display: block;\n        }\n    }\n    `
                ));
            }
            destroyResponsiveStyle() {
              this.responsiveStyleElement &&
                (this.renderer.removeChild(
                  this.document.head,
                  this.responsiveStyleElement
                ),
                (this.responsiveStyleElement = null));
            }
            destroyStyleElement() {
              this.styleElement &&
                (this.renderer.removeChild(
                  this.document.head,
                  this.styleElement
                ),
                (this.styleElement = null));
            }
            ngOnDestroy() {
              this.unbindDocumentEditListener(),
                (this.editingCell = null),
                (this.initialized = null),
                this.destroyStyleElement(),
                this.destroyResponsiveStyle();
            }
            static ɵfac = function (i) {
              return new (i || t)(
                D(Qe),
                D(xn),
                D(Tt),
                D(Fe),
                D(_e),
                D(gg),
                D(Ct),
                D(uu),
                D(Da),
                D(Ri)
              );
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-table"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              viewQuery: function (i, o) {
                if (
                  (1 & i &&
                    (me(VV, 5),
                    me(BV, 5),
                    me(HV, 5),
                    me(zV, 5),
                    me($V, 5),
                    me(jV, 5),
                    me(UV, 5),
                    me(GV, 5),
                    me(WV, 5)),
                  2 & i)
                ) {
                  let r;
                  J((r = X())) && (o.containerViewChild = r.first),
                    J((r = X())) && (o.resizeHelperViewChild = r.first),
                    J((r = X())) && (o.reorderIndicatorUpViewChild = r.first),
                    J((r = X())) && (o.reorderIndicatorDownViewChild = r.first),
                    J((r = X())) && (o.wrapperViewChild = r.first),
                    J((r = X())) && (o.tableViewChild = r.first),
                    J((r = X())) && (o.tableHeaderViewChild = r.first),
                    J((r = X())) && (o.tableFooterViewChild = r.first),
                    J((r = X())) && (o.scroller = r.first);
                }
              },
              hostAttrs: [1, "p-element"],
              inputs: {
                frozenColumns: "frozenColumns",
                frozenValue: "frozenValue",
                style: "style",
                styleClass: "styleClass",
                tableStyle: "tableStyle",
                tableStyleClass: "tableStyleClass",
                paginator: "paginator",
                pageLinks: "pageLinks",
                rowsPerPageOptions: "rowsPerPageOptions",
                alwaysShowPaginator: "alwaysShowPaginator",
                paginatorPosition: "paginatorPosition",
                paginatorStyleClass: "paginatorStyleClass",
                paginatorDropdownAppendTo: "paginatorDropdownAppendTo",
                paginatorDropdownScrollHeight: "paginatorDropdownScrollHeight",
                currentPageReportTemplate: "currentPageReportTemplate",
                showCurrentPageReport: "showCurrentPageReport",
                showJumpToPageDropdown: "showJumpToPageDropdown",
                showJumpToPageInput: "showJumpToPageInput",
                showFirstLastIcon: "showFirstLastIcon",
                showPageLinks: "showPageLinks",
                defaultSortOrder: "defaultSortOrder",
                sortMode: "sortMode",
                resetPageOnSort: "resetPageOnSort",
                selectionMode: "selectionMode",
                selectionPageOnly: "selectionPageOnly",
                contextMenuSelection: "contextMenuSelection",
                contextMenuSelectionMode: "contextMenuSelectionMode",
                dataKey: "dataKey",
                metaKeySelection: "metaKeySelection",
                rowSelectable: "rowSelectable",
                rowTrackBy: "rowTrackBy",
                lazy: "lazy",
                lazyLoadOnInit: "lazyLoadOnInit",
                compareSelectionBy: "compareSelectionBy",
                csvSeparator: "csvSeparator",
                exportFilename: "exportFilename",
                filters: "filters",
                globalFilterFields: "globalFilterFields",
                filterDelay: "filterDelay",
                filterLocale: "filterLocale",
                expandedRowKeys: "expandedRowKeys",
                editingRowKeys: "editingRowKeys",
                rowExpandMode: "rowExpandMode",
                scrollable: "scrollable",
                scrollDirection: "scrollDirection",
                rowGroupMode: "rowGroupMode",
                scrollHeight: "scrollHeight",
                virtualScroll: "virtualScroll",
                virtualScrollItemSize: "virtualScrollItemSize",
                virtualScrollOptions: "virtualScrollOptions",
                virtualScrollDelay: "virtualScrollDelay",
                frozenWidth: "frozenWidth",
                responsive: "responsive",
                contextMenu: "contextMenu",
                resizableColumns: "resizableColumns",
                columnResizeMode: "columnResizeMode",
                reorderableColumns: "reorderableColumns",
                loading: "loading",
                loadingIcon: "loadingIcon",
                showLoader: "showLoader",
                rowHover: "rowHover",
                customSort: "customSort",
                showInitialSortBadge: "showInitialSortBadge",
                autoLayout: "autoLayout",
                exportFunction: "exportFunction",
                exportHeader: "exportHeader",
                stateKey: "stateKey",
                stateStorage: "stateStorage",
                editMode: "editMode",
                groupRowsBy: "groupRowsBy",
                groupRowsByOrder: "groupRowsByOrder",
                responsiveLayout: "responsiveLayout",
                breakpoint: "breakpoint",
                paginatorLocale: "paginatorLocale",
                value: "value",
                columns: "columns",
                first: "first",
                rows: "rows",
                totalRecords: "totalRecords",
                sortField: "sortField",
                sortOrder: "sortOrder",
                multiSortMeta: "multiSortMeta",
                selection: "selection",
                selectAll: "selectAll",
                virtualRowHeight: "virtualRowHeight",
              },
              outputs: {
                contextMenuSelectionChange: "contextMenuSelectionChange",
                selectAllChange: "selectAllChange",
                selectionChange: "selectionChange",
                onRowSelect: "onRowSelect",
                onRowUnselect: "onRowUnselect",
                onPage: "onPage",
                onSort: "onSort",
                onFilter: "onFilter",
                onLazyLoad: "onLazyLoad",
                onRowExpand: "onRowExpand",
                onRowCollapse: "onRowCollapse",
                onContextMenuSelect: "onContextMenuSelect",
                onColResize: "onColResize",
                onColReorder: "onColReorder",
                onRowReorder: "onRowReorder",
                onEditInit: "onEditInit",
                onEditComplete: "onEditComplete",
                onEditCancel: "onEditCancel",
                onHeaderCheckboxToggle: "onHeaderCheckboxToggle",
                sortFunction: "sortFunction",
                firstChange: "firstChange",
                rowsChange: "rowsChange",
                onStateSave: "onStateSave",
                onStateRestore: "onStateRestore",
              },
              features: [Ee([gg]), _t],
              decls: 16,
              vars: 22,
              consts: [
                [3, "ngStyle", "ngClass"],
                ["container", ""],
                [
                  "class",
                  "p-datatable-loading-overlay p-component-overlay",
                  4,
                  "ngIf",
                ],
                ["class", "p-datatable-header", 4, "ngIf"],
                [
                  "styleClass",
                  "p-paginator-top",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "dropdownScrollHeight",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "showJumpToPageDropdown",
                  "showJumpToPageInput",
                  "showPageLinks",
                  "styleClass",
                  "locale",
                  "onPageChange",
                  4,
                  "ngIf",
                ],
                [1, "p-datatable-wrapper", 3, "ngStyle"],
                ["wrapper", ""],
                [
                  3,
                  "items",
                  "columns",
                  "style",
                  "scrollHeight",
                  "itemSize",
                  "step",
                  "delay",
                  "inline",
                  "lazy",
                  "loaderDisabled",
                  "showSpacer",
                  "showLoader",
                  "options",
                  "autoSize",
                  "onLazyLoad",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                ["buildInTable", ""],
                [
                  "styleClass",
                  "p-paginator-bottom",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "dropdownScrollHeight",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "showJumpToPageDropdown",
                  "showJumpToPageInput",
                  "showPageLinks",
                  "styleClass",
                  "locale",
                  "onPageChange",
                  4,
                  "ngIf",
                ],
                ["class", "p-datatable-footer", 4, "ngIf"],
                [
                  "class",
                  "p-column-resizer-helper",
                  "style",
                  "display:none",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "p-datatable-reorder-indicator-up",
                  "style",
                  "display: none;",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "p-datatable-reorder-indicator-down",
                  "style",
                  "display: none;",
                  4,
                  "ngIf",
                ],
                [1, "p-datatable-loading-overlay", "p-component-overlay"],
                [3, "class", 4, "ngIf"],
                [3, "spin", "styleClass", 4, "ngIf"],
                ["class", "p-datatable-loading-icon", 4, "ngIf"],
                [3, "spin", "styleClass"],
                [1, "p-datatable-loading-icon"],
                [4, "ngTemplateOutlet"],
                [1, "p-datatable-header"],
                [
                  "styleClass",
                  "p-paginator-top",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "dropdownScrollHeight",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "showJumpToPageDropdown",
                  "showJumpToPageInput",
                  "showPageLinks",
                  "styleClass",
                  "locale",
                  "onPageChange",
                ],
                ["pTemplate", "firstpagelinkicon"],
                ["pTemplate", "previouspagelinkicon"],
                ["pTemplate", "lastpagelinkicon"],
                ["pTemplate", "nextpagelinkicon"],
                [
                  3,
                  "items",
                  "columns",
                  "scrollHeight",
                  "itemSize",
                  "step",
                  "delay",
                  "inline",
                  "lazy",
                  "loaderDisabled",
                  "showSpacer",
                  "showLoader",
                  "options",
                  "autoSize",
                  "onLazyLoad",
                ],
                ["scroller", ""],
                ["pTemplate", "content"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                ["role", "table", 3, "ngClass"],
                ["table", ""],
                ["role", "rowgroup", 1, "p-datatable-thead"],
                ["thead", ""],
                [
                  "role",
                  "rowgroup",
                  "class",
                  "p-datatable-tbody p-datatable-frozen-tbody",
                  3,
                  "value",
                  "frozenRows",
                  "pTableBody",
                  "pTableBodyTemplate",
                  "frozen",
                  4,
                  "ngIf",
                ],
                [
                  "role",
                  "rowgroup",
                  1,
                  "p-datatable-tbody",
                  3,
                  "ngClass",
                  "value",
                  "pTableBody",
                  "pTableBodyTemplate",
                  "scrollerOptions",
                ],
                [
                  "role",
                  "rowgroup",
                  "class",
                  "p-datatable-scroller-spacer",
                  3,
                  "style",
                  4,
                  "ngIf",
                ],
                ["role", "rowgroup", "class", "p-datatable-tfoot", 4, "ngIf"],
                [
                  "role",
                  "rowgroup",
                  1,
                  "p-datatable-tbody",
                  "p-datatable-frozen-tbody",
                  3,
                  "value",
                  "frozenRows",
                  "pTableBody",
                  "pTableBodyTemplate",
                  "frozen",
                ],
                ["role", "rowgroup", 1, "p-datatable-scroller-spacer"],
                ["role", "rowgroup", 1, "p-datatable-tfoot"],
                ["tfoot", ""],
                [
                  "styleClass",
                  "p-paginator-bottom",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "dropdownScrollHeight",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "showJumpToPageDropdown",
                  "showJumpToPageInput",
                  "showPageLinks",
                  "styleClass",
                  "locale",
                  "onPageChange",
                ],
                [1, "p-datatable-footer"],
                [1, "p-column-resizer-helper", 2, "display", "none"],
                ["resizeHelper", ""],
                [1, "p-datatable-reorder-indicator-up", 2, "display", "none"],
                ["reorderIndicatorUp", ""],
                [1, "p-datatable-reorder-indicator-down", 2, "display", "none"],
                ["reorderIndicatorDown", ""],
              ],
              template: function (i, o) {
                1 & i &&
                  (y(0, "div", 0, 1),
                  f(2, XV, 3, 2, "div", 2),
                  f(3, tB, 2, 1, "div", 3),
                  f(4, fB, 5, 23, "p-paginator", 4),
                  y(5, "div", 5, 6),
                  f(7, yB, 3, 17, "p-scroller", 7),
                  f(8, CB, 2, 7, "ng-container", 8),
                  f(9, MB, 10, 28, "ng-template", null, 9, Yt),
                  v(),
                  f(11, $B, 5, 23, "p-paginator", 10),
                  f(12, UB, 2, 1, "div", 11),
                  f(13, GB, 2, 0, "div", 12),
                  f(14, ZB, 4, 2, "span", 13),
                  f(15, XB, 4, 2, "span", 14),
                  v()),
                  2 & i &&
                    (ne(o.styleClass),
                    d("ngStyle", o.style)(
                      "ngClass",
                      kn(
                        16,
                        eH,
                        o.rowHover || o.selectionMode,
                        o.scrollable,
                        o.scrollable && "flex" === o.scrollHeight
                      )
                    ),
                    x("id", o.id),
                    g(2),
                    d("ngIf", o.loading && o.showLoader),
                    g(1),
                    d("ngIf", o.captionTemplate),
                    g(1),
                    d(
                      "ngIf",
                      o.paginator &&
                        ("top" === o.paginatorPosition ||
                          "both" == o.paginatorPosition)
                    ),
                    g(1),
                    d(
                      "ngStyle",
                      Q(20, tH, o.virtualScroll ? "" : o.scrollHeight)
                    ),
                    g(2),
                    d("ngIf", o.virtualScroll),
                    g(1),
                    d("ngIf", !o.virtualScroll),
                    g(3),
                    d(
                      "ngIf",
                      o.paginator &&
                        ("bottom" === o.paginatorPosition ||
                          "both" == o.paginatorPosition)
                    ),
                    g(1),
                    d("ngIf", o.summaryTemplate),
                    g(1),
                    d("ngIf", o.resizableColumns),
                    g(1),
                    d("ngIf", o.reorderableColumns),
                    g(1),
                    d("ngIf", o.reorderableColumns));
              },
              dependencies: function () {
                return [Bt, wt, St, Xt, nV, It, ag, rS, sS, Gr, Vz];
              },
              styles: [
                "@layer primeng{.p-datatable{position:relative}.p-datatable>.p-datatable-wrapper{overflow:auto}.p-datatable-table{border-spacing:0px;width:100%}.p-datatable .p-sortable-column{cursor:pointer;-webkit-user-select:none;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-icon,.p-datatable .p-sortable-column .p-sortable-column-badge{vertical-align:middle}.p-datatable .p-sortable-column .p-icon-wrapper{display:inline}.p-datatable .p-sortable-column .p-sortable-column-badge{display:inline-flex;align-items:center;justify-content:center}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable>.p-datatable-wrapper{position:relative}.p-datatable-scrollable-table>.p-datatable-thead{position:sticky;top:0;z-index:2}.p-datatable-scrollable-table>.p-datatable-frozen-tbody{position:sticky;z-index:1}.p-datatable-scrollable-table>.p-datatable-tfoot{position:sticky;bottom:0;z-index:1}.p-datatable-scrollable .p-frozen-column{position:sticky;background:inherit;z-index:1}.p-datatable-scrollable th.p-frozen-column{z-index:1}.p-datatable-flex-scrollable{display:flex;flex-direction:column;height:100%}.p-datatable-flex-scrollable>.p-datatable-wrapper{display:flex;flex-direction:column;flex:1;height:100%}.p-datatable-scrollable-table>.p-datatable-tbody>.p-rowgroup-header{position:sticky;z-index:2}.p-datatable-resizable-table>.p-datatable-thead>tr>th,.p-datatable-resizable-table>.p-datatable-tfoot>tr>td,.p-datatable-resizable-table>.p-datatable-tbody>tr>td{overflow:hidden;white-space:nowrap}.p-datatable-resizable-table>.p-datatable-thead>tr>th.p-resizable-column:not(.p-frozen-column){background-clip:padding-box;position:relative}.p-datatable-resizable-table-fit>.p-datatable-thead>tr>th.p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5rem;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.p-datatable .p-column-resizer-helper{width:1px;position:absolute;z-index:10;display:none}.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-editor-cancel,.p-datatable .p-row-toggler{display:inline-flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-up,.p-datatable-reorder-indicator-down{position:absolute}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:3}.p-column-filter-row{display:flex;align-items:center;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-menu-button,.p-column-filter-clear-button{display:inline-flex;justify-content:center;align-items:center;cursor:pointer;text-decoration:none;overflow:hidden;position:relative}.p-column-filter-overlay{position:absolute;top:0;left:0}.p-column-filter-row-items{margin:0;padding:0;list-style:none}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{display:flex;align-items:center;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable-tbody>tr>td>.p-column-title{display:none}.p-datatable-scroller-spacer{display:flex}.p-datatable .p-scroller .p-scroller-loading{transform:none!important;min-height:0;position:sticky;top:0;left:0}}\n",
              ],
              encapsulation: 2,
            });
          }
          return t;
        })(),
        Vz = (() => {
          class t {
            dt;
            tableService;
            cd;
            el;
            columns;
            template;
            get value() {
              return this._value;
            }
            set value(e) {
              (this._value = e),
                this.frozenRows && this.updateFrozenRowStickyPosition(),
                this.dt.scrollable &&
                  "subheader" === this.dt.rowGroupMode &&
                  this.updateFrozenRowGroupHeaderStickyPosition();
            }
            frozen;
            frozenRows;
            scrollerOptions;
            subscription;
            _value;
            ngAfterViewInit() {
              this.frozenRows && this.updateFrozenRowStickyPosition(),
                this.dt.scrollable &&
                  "subheader" === this.dt.rowGroupMode &&
                  this.updateFrozenRowGroupHeaderStickyPosition();
            }
            constructor(e, i, o, r) {
              (this.dt = e),
                (this.tableService = i),
                (this.cd = o),
                (this.el = r),
                (this.subscription =
                  this.dt.tableService.valueSource$.subscribe(() => {
                    this.dt.virtualScroll && this.cd.detectChanges();
                  }));
            }
            shouldRenderRowGroupHeader(e, i, o) {
              let r = P.resolveFieldData(i, this.dt.groupRowsBy),
                s = e[o - 1];
              return !s || r !== P.resolveFieldData(s, this.dt.groupRowsBy);
            }
            shouldRenderRowGroupFooter(e, i, o) {
              let r = P.resolveFieldData(i, this.dt.groupRowsBy),
                s = e[o + 1];
              return !s || r !== P.resolveFieldData(s, this.dt.groupRowsBy);
            }
            shouldRenderRowspan(e, i, o) {
              let r = P.resolveFieldData(i, this.dt.groupRowsBy),
                s = e[o - 1];
              return !s || r !== P.resolveFieldData(s, this.dt.groupRowsBy);
            }
            calculateRowGroupSize(e, i, o) {
              let r = P.resolveFieldData(i, this.dt.groupRowsBy),
                s = r,
                a = 0;
              for (; r === s; ) {
                a++;
                let l = e[++o];
                if (!l) break;
                s = P.resolveFieldData(l, this.dt.groupRowsBy);
              }
              return 1 === a ? null : a;
            }
            ngOnDestroy() {
              this.subscription && this.subscription.unsubscribe();
            }
            updateFrozenRowStickyPosition() {
              this.el.nativeElement.style.top =
                w.getOuterHeight(this.el.nativeElement.previousElementSibling) +
                "px";
            }
            updateFrozenRowGroupHeaderStickyPosition() {
              if (this.el.nativeElement.previousElementSibling) {
                let e = w.getOuterHeight(
                  this.el.nativeElement.previousElementSibling
                );
                this.dt.rowGroupHeaderStyleObject.top = e + "px";
              }
            }
            getScrollerOption(e, i) {
              return this.dt.virtualScroll && (i = i || this.scrollerOptions)
                ? i[e]
                : null;
            }
            getRowIndex(e) {
              const i = this.dt.paginator ? this.dt.first + e : e,
                o = this.getScrollerOption("getItemOptions");
              return o ? o(i).index : i;
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Yr), D(gg), D(Ct), D(Fe));
            };
            static ɵcmp = le({
              type: t,
              selectors: [["", "pTableBody", ""]],
              hostAttrs: [1, "p-element"],
              inputs: {
                columns: ["pTableBody", "columns"],
                template: ["pTableBodyTemplate", "template"],
                value: "value",
                frozen: "frozen",
                frozenRows: "frozenRows",
                scrollerOptions: "scrollerOptions",
              },
              attrs: nH,
              decls: 5,
              vars: 5,
              consts: [
                [4, "ngIf"],
                ["ngFor", "", 3, "ngForOf", "ngForTrackBy"],
                ["role", "row", 4, "ngIf"],
                ["role", "row"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
              ],
              template: function (i, o) {
                1 & i &&
                  (f(0, hH, 2, 2, "ng-container", 0),
                  f(1, TH, 2, 2, "ng-container", 0),
                  f(2, xH, 2, 2, "ng-container", 0),
                  f(3, OH, 2, 5, "ng-container", 0),
                  f(4, kH, 2, 5, "ng-container", 0)),
                  2 & i &&
                    (d("ngIf", !o.dt.expandedRowTemplate),
                    g(1),
                    d(
                      "ngIf",
                      o.dt.expandedRowTemplate &&
                        !(o.frozen && o.dt.frozenExpandedRowTemplate)
                    ),
                    g(1),
                    d("ngIf", o.dt.frozenExpandedRowTemplate && o.frozen),
                    g(1),
                    d("ngIf", o.dt.loading),
                    g(1),
                    d("ngIf", o.dt.isEmpty() && !o.dt.loading));
              },
              dependencies: [Oi, wt, St],
              encapsulation: 2,
            });
          }
          return t;
        })(),
        Bz = (() => {
          class t {
            el;
            get frozen() {
              return this._frozen;
            }
            set frozen(e) {
              (this._frozen = e), this.updateStickyPosition();
            }
            alignFrozen = "left";
            constructor(e) {
              this.el = e;
            }
            ngAfterViewInit() {
              setTimeout(() => {
                this.updateStickyPosition();
              }, 1e3);
            }
            _frozen = !0;
            updateStickyPosition() {
              if (this._frozen) {
                if ("right" === this.alignFrozen) {
                  let i = 0,
                    o = this.el.nativeElement.nextElementSibling;
                  o &&
                    (i = w.getOuterWidth(o) + (parseFloat(o.style.right) || 0)),
                    (this.el.nativeElement.style.right = i + "px");
                } else {
                  let i = 0,
                    o = this.el.nativeElement.previousElementSibling;
                  o &&
                    (i = w.getOuterWidth(o) + (parseFloat(o.style.left) || 0)),
                    (this.el.nativeElement.style.left = i + "px");
                }
                const e =
                  this.el.nativeElement?.parentElement?.nextElementSibling;
                if (e) {
                  let i = w.index(this.el.nativeElement);
                  e.children &&
                    e.children[i] &&
                    ((e.children[i].style.left =
                      this.el.nativeElement.style.left),
                    (e.children[i].style.right =
                      this.el.nativeElement.style.right));
                }
              }
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Fe));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pFrozenColumn", ""]],
              hostAttrs: [1, "p-element"],
              hostVars: 2,
              hostBindings: function (i, o) {
                2 & i && On("p-frozen-column", o.frozen);
              },
              inputs: { frozen: "frozen", alignFrozen: "alignFrozen" },
            });
          }
          return t;
        })(),
        pS = (() => {
          class t {
            dt;
            el;
            zone;
            data;
            field;
            rowIndex;
            pEditableColumnDisabled;
            pFocusCellSelector;
            overlayEventListener;
            constructor(e, i, o) {
              (this.dt = e), (this.el = i), (this.zone = o);
            }
            ngOnChanges({ data: e }) {
              this.el.nativeElement &&
                !e.firstChange &&
                this.dt.updateEditingCell(
                  this.el.nativeElement,
                  this.data,
                  this.field,
                  this.rowIndex
                );
            }
            ngAfterViewInit() {
              this.isEnabled() &&
                w.addClass(this.el.nativeElement, "p-editable-column");
            }
            onClick(e) {
              if (this.isEnabled())
                if (((this.dt.selfClick = !0), this.dt.editingCell)) {
                  if (this.dt.editingCell !== this.el.nativeElement) {
                    if (!this.dt.isEditingCellValid()) return;
                    this.closeEditingCell(!0, e), this.openCell();
                  }
                } else this.openCell();
            }
            openCell() {
              this.dt.updateEditingCell(
                this.el.nativeElement,
                this.data,
                this.field,
                this.rowIndex
              ),
                w.addClass(this.el.nativeElement, "p-cell-editing"),
                this.dt.onEditInit.emit({
                  field: this.field,
                  data: this.data,
                  index: this.rowIndex,
                }),
                this.zone.runOutsideAngular(() => {
                  setTimeout(() => {
                    let i = w.findSingle(
                      this.el.nativeElement,
                      this.pFocusCellSelector || "input, textarea, select"
                    );
                    i && i.focus();
                  }, 50);
                }),
                (this.overlayEventListener = (e) => {
                  this.el &&
                    this.el.nativeElement.contains(e.target) &&
                    (this.dt.selfClick = !0);
                }),
                (this.dt.overlaySubscription =
                  this.dt.overlayService.clickObservable.subscribe(
                    this.overlayEventListener
                  ));
            }
            closeEditingCell(e, i) {
              const o = {
                field: this.dt.editingCellField,
                data: this.dt.editingCellData,
                originalEvent: i,
                index: this.dt.editingCellRowIndex,
              };
              e
                ? this.dt.onEditComplete.emit(o)
                : (this.dt.onEditCancel.emit(o),
                  this.dt.value.forEach((r) => {
                    r[this.dt.editingCellField] === this.data &&
                      (r[this.dt.editingCellField] = this.dt.editingCellData);
                  })),
                w.removeClass(this.dt.editingCell, "p-cell-editing"),
                (this.dt.editingCell = null),
                (this.dt.editingCellData = null),
                (this.dt.editingCellField = null),
                this.dt.unbindDocumentEditListener(),
                this.dt.overlaySubscription &&
                  this.dt.overlaySubscription.unsubscribe();
            }
            onEnterKeyDown(e) {
              this.isEnabled() &&
                !e.shiftKey &&
                (this.dt.isEditingCellValid() && this.closeEditingCell(!0, e),
                e.preventDefault());
            }
            onTabKeyDown(e) {
              this.isEnabled() &&
                (this.dt.isEditingCellValid() && this.closeEditingCell(!0, e),
                e.preventDefault());
            }
            onEscapeKeyDown(e) {
              this.isEnabled() &&
                (this.dt.isEditingCellValid() && this.closeEditingCell(!1, e),
                e.preventDefault());
            }
            onShiftKeyDown(e) {
              this.isEnabled() &&
                (e.shiftKey
                  ? this.moveToPreviousCell(e)
                  : this.moveToNextCell(e));
            }
            onArrowDown(e) {
              if (this.isEnabled()) {
                let i = this.findCell(e.target);
                if (i) {
                  let o = w.index(i),
                    r = this.findNextEditableColumnByIndex(i, o);
                  r &&
                    (this.dt.isEditingCellValid() &&
                      this.closeEditingCell(!0, e),
                    w.invokeElementMethod(e.target, "blur"),
                    w.invokeElementMethod(r, "click")),
                    e.preventDefault();
                }
              }
            }
            onArrowUp(e) {
              if (this.isEnabled()) {
                let i = this.findCell(e.target);
                if (i) {
                  let o = w.index(i),
                    r = this.findPrevEditableColumnByIndex(i, o);
                  r &&
                    (this.dt.isEditingCellValid() &&
                      this.closeEditingCell(!0, e),
                    w.invokeElementMethod(e.target, "blur"),
                    w.invokeElementMethod(r, "click")),
                    e.preventDefault();
                }
              }
            }
            onArrowLeft(e) {
              this.isEnabled() && this.moveToPreviousCell(e);
            }
            onArrowRight(e) {
              this.isEnabled() && this.moveToNextCell(e);
            }
            findCell(e) {
              if (e) {
                let i = e;
                for (; i && !w.hasClass(i, "p-cell-editing"); )
                  i = i.parentElement;
                return i;
              }
              return null;
            }
            moveToPreviousCell(e) {
              let i = this.findCell(e.target);
              if (i) {
                let o = this.findPreviousEditableColumn(i);
                o &&
                  (this.dt.isEditingCellValid() && this.closeEditingCell(!0, e),
                  w.invokeElementMethod(e.target, "blur"),
                  w.invokeElementMethod(o, "click"),
                  e.preventDefault());
              }
            }
            moveToNextCell(e) {
              let i = this.findCell(e.target);
              if (i) {
                let o = this.findNextEditableColumn(i);
                o &&
                  (this.dt.isEditingCellValid() && this.closeEditingCell(!0, e),
                  w.invokeElementMethod(e.target, "blur"),
                  w.invokeElementMethod(o, "click"),
                  e.preventDefault());
              }
            }
            findPreviousEditableColumn(e) {
              let i = e.previousElementSibling;
              if (!i) {
                let o = e.parentElement?.previousElementSibling;
                o && (i = o.lastElementChild);
              }
              return i
                ? w.hasClass(i, "p-editable-column")
                  ? i
                  : this.findPreviousEditableColumn(i)
                : null;
            }
            findNextEditableColumn(e) {
              let i = e.nextElementSibling;
              if (!i) {
                let o = e.parentElement?.nextElementSibling;
                o && (i = o.firstElementChild);
              }
              return i
                ? w.hasClass(i, "p-editable-column")
                  ? i
                  : this.findNextEditableColumn(i)
                : null;
            }
            findNextEditableColumnByIndex(e, i) {
              let o = e.parentElement?.nextElementSibling;
              if (o) {
                let r = o.children[i];
                return r && w.hasClass(r, "p-editable-column") ? r : null;
              }
              return null;
            }
            findPrevEditableColumnByIndex(e, i) {
              let o = e.parentElement?.previousElementSibling;
              if (o) {
                let r = o.children[i];
                return r && w.hasClass(r, "p-editable-column") ? r : null;
              }
              return null;
            }
            isEnabled() {
              return !0 !== this.pEditableColumnDisabled;
            }
            ngOnDestroy() {
              this.dt.overlaySubscription &&
                this.dt.overlaySubscription.unsubscribe();
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Yr), D(Fe), D(_e));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pEditableColumn", ""]],
              hostAttrs: [1, "p-element"],
              hostBindings: function (i, o) {
                1 & i &&
                  A("click", function (s) {
                    return o.onClick(s);
                  })("keydown.enter", function (s) {
                    return o.onEnterKeyDown(s);
                  })("keydown.tab", function (s) {
                    return o.onShiftKeyDown(s);
                  })("keydown.escape", function (s) {
                    return o.onEscapeKeyDown(s);
                  })("keydown.shift.tab", function (s) {
                    return o.onShiftKeyDown(s);
                  })("keydown.meta.tab", function (s) {
                    return o.onShiftKeyDown(s);
                  })("keydown.arrowdown", function (s) {
                    return o.onArrowDown(s);
                  })("keydown.arrowup", function (s) {
                    return o.onArrowUp(s);
                  })("keydown.arrowleft", function (s) {
                    return o.onArrowLeft(s);
                  })("keydown.arrowright", function (s) {
                    return o.onArrowRight(s);
                  });
              },
              inputs: {
                data: ["pEditableColumn", "data"],
                field: ["pEditableColumnField", "field"],
                rowIndex: ["pEditableColumnRowIndex", "rowIndex"],
                pEditableColumnDisabled: "pEditableColumnDisabled",
                pFocusCellSelector: "pFocusCellSelector",
              },
              features: [_t],
            });
          }
          return t;
        })(),
        Hz = (() => {
          class t {
            el;
            data;
            pEditableRowDisabled;
            constructor(e) {
              this.el = e;
            }
            isEnabled() {
              return !0 !== this.pEditableRowDisabled;
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Fe));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pEditableRow", ""]],
              hostAttrs: [1, "p-element"],
              inputs: {
                data: ["pEditableRow", "data"],
                pEditableRowDisabled: "pEditableRowDisabled",
              },
            });
          }
          return t;
        })(),
        zz = (() => {
          class t {
            dt;
            editableColumn;
            editableRow;
            templates;
            inputTemplate;
            outputTemplate;
            constructor(e, i, o) {
              (this.dt = e), (this.editableColumn = i), (this.editableRow = o);
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "input":
                    this.inputTemplate = e.template;
                    break;
                  case "output":
                    this.outputTemplate = e.template;
                }
              });
            }
            get editing() {
              return (
                (this.dt.editingCell &&
                  this.editableColumn &&
                  this.dt.editingCell ===
                    this.editableColumn.el.nativeElement) ||
                (this.editableRow &&
                  "row" === this.dt.editMode &&
                  this.dt.isRowEditing(this.editableRow.data))
              );
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Yr), D(pS, 8), D(Hz, 8));
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-cellEditor"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              hostAttrs: [1, "p-element"],
              decls: 2,
              vars: 2,
              consts: [
                [4, "ngIf"],
                [4, "ngTemplateOutlet"],
              ],
              template: function (i, o) {
                1 & i &&
                  (f(0, BH, 2, 1, "ng-container", 0),
                  f(1, zH, 2, 1, "ng-container", 0)),
                  2 & i && (d("ngIf", o.editing), g(1), d("ngIf", !o.editing));
              },
              dependencies: [wt, St],
              encapsulation: 2,
            });
          }
          return t;
        })(),
        hS = (() => {
          class t {
            document;
            el;
            dt;
            renderer;
            config;
            overlayService;
            cd;
            field;
            type = "text";
            display = "row";
            showMenu = !0;
            matchMode;
            operator = Ia.AND;
            showOperator = !0;
            showClearButton = !0;
            showApplyButton = !0;
            showMatchModes = !0;
            showAddButton = !0;
            hideOnClear = !1;
            placeholder;
            matchModeOptions;
            maxConstraints = 2;
            minFractionDigits;
            maxFractionDigits;
            prefix;
            suffix;
            locale;
            localeMatcher;
            currency;
            currencyDisplay;
            useGrouping = !0;
            showButtons = !0;
            icon;
            clearButtonViewChild;
            templates;
            overlaySubscription;
            headerTemplate;
            filterTemplate;
            footerTemplate;
            filterIconTemplate;
            removeRuleIconTemplate;
            addRuleIconTemplate;
            operatorOptions;
            overlayVisible;
            overlay;
            scrollHandler;
            documentClickListener;
            documentResizeListener;
            matchModes;
            translationSubscription;
            resetSubscription;
            selfClick;
            overlayEventListener;
            window;
            overlayId;
            constructor(e, i, o, r, s, a, l) {
              (this.document = e),
                (this.el = i),
                (this.dt = o),
                (this.renderer = r),
                (this.config = s),
                (this.overlayService = a),
                (this.cd = l),
                (this.window = this.document.defaultView);
            }
            ngOnInit() {
              (this.overlayId = zt()),
                this.dt.filters[this.field] || this.initFieldFilterConstraint(),
                (this.translationSubscription =
                  this.config.translationObserver.subscribe(() => {
                    this.generateMatchModeOptions(),
                      this.generateOperatorOptions();
                  })),
                this.generateMatchModeOptions(),
                this.generateOperatorOptions();
            }
            generateMatchModeOptions() {
              this.matchModes =
                this.matchModeOptions ||
                this.config.filterMatchModeOptions[this.type]?.map((e) => ({
                  label: this.config.getTranslation(e),
                  value: e,
                }));
            }
            generateOperatorOptions() {
              this.operatorOptions = [
                {
                  label: this.config.getTranslation(lt.MATCH_ALL),
                  value: Ia.AND,
                },
                {
                  label: this.config.getTranslation(lt.MATCH_ANY),
                  value: Ia.OR,
                },
              ];
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "header":
                    this.headerTemplate = e.template;
                    break;
                  case "filter":
                  default:
                    this.filterTemplate = e.template;
                    break;
                  case "footer":
                    this.footerTemplate = e.template;
                    break;
                  case "filtericon":
                    this.filterIconTemplate = e.template;
                    break;
                  case "removeruleicon":
                    this.removeRuleIconTemplate = e.template;
                    break;
                  case "addruleicon":
                    this.addRuleIconTemplate = e.template;
                }
              });
            }
            initFieldFilterConstraint() {
              let e = this.getDefaultMatchMode();
              this.dt.filters[this.field] =
                "row" == this.display
                  ? { value: null, matchMode: e }
                  : [{ value: null, matchMode: e, operator: this.operator }];
            }
            onMenuMatchModeChange(e, i) {
              (i.matchMode = e), this.showApplyButton || this.dt._filter();
            }
            onRowMatchModeChange(e) {
              (this.dt.filters[this.field].matchMode = e),
                this.dt._filter(),
                this.hide();
            }
            onRowMatchModeKeyDown(e) {
              let i = e.target;
              switch (e.key) {
                case "ArrowDown":
                  var o = this.findNextItem(i);
                  o &&
                    (i.removeAttribute("tabindex"),
                    (o.tabIndex = "0"),
                    o.focus()),
                    e.preventDefault();
                  break;
                case "ArrowUp":
                  var r = this.findPrevItem(i);
                  r &&
                    (i.removeAttribute("tabindex"),
                    (r.tabIndex = "0"),
                    r.focus()),
                    e.preventDefault();
              }
            }
            onRowClearItemClick() {
              this.clearFilter(), this.hide();
            }
            isRowMatchModeSelected(e) {
              return this.dt.filters[this.field].matchMode === e;
            }
            addConstraint() {
              this.dt.filters[this.field].push({
                value: null,
                matchMode: this.getDefaultMatchMode(),
                operator: this.getDefaultOperator(),
              }),
                w.focus(this.clearButtonViewChild.nativeElement);
            }
            removeConstraint(e) {
              (this.dt.filters[this.field] = this.dt.filters[this.field].filter(
                (i) => i !== e
              )),
                this.dt._filter(),
                w.focus(this.clearButtonViewChild.nativeElement);
            }
            onOperatorChange(e) {
              this.dt.filters[this.field].forEach((i) => {
                (i.operator = e), (this.operator = e);
              }),
                this.showApplyButton || this.dt._filter();
            }
            toggleMenu() {
              this.overlayVisible = !this.overlayVisible;
            }
            onToggleButtonKeyDown(e) {
              switch (e.key) {
                case "Escape":
                case "Tab":
                  this.overlayVisible = !1;
                  break;
                case "ArrowDown":
                  if (this.overlayVisible) {
                    let i = w.getFocusableElements(this.overlay);
                    i && i[0].focus(), e.preventDefault();
                  } else
                    e.altKey &&
                      ((this.overlayVisible = !0), e.preventDefault());
              }
            }
            onEscape() {
              (this.overlayVisible = !1), this.icon?.nativeElement.focus();
            }
            findNextItem(e) {
              let i = e.nextElementSibling;
              return i
                ? w.hasClass(i, "p-column-filter-separator")
                  ? this.findNextItem(i)
                  : i
                : e.parentElement?.firstElementChild;
            }
            findPrevItem(e) {
              let i = e.previousElementSibling;
              return i
                ? w.hasClass(i, "p-column-filter-separator")
                  ? this.findPrevItem(i)
                  : i
                : e.parentElement?.lastElementChild;
            }
            onContentClick() {
              this.selfClick = !0;
            }
            onOverlayAnimationStart(e) {
              switch (e.toState) {
                case "visible":
                  (this.overlay = e.element),
                    this.renderer.appendChild(this.document.body, this.overlay),
                    yn.set("overlay", this.overlay, this.config.zIndex.overlay),
                    w.absolutePosition(this.overlay, this.icon?.nativeElement),
                    this.bindDocumentClickListener(),
                    this.bindDocumentResizeListener(),
                    this.bindScrollListener(),
                    (this.overlayEventListener = (i) => {
                      this.overlay &&
                        this.overlay.contains(i.target) &&
                        (this.selfClick = !0);
                    }),
                    (this.overlaySubscription =
                      this.overlayService.clickObservable.subscribe(
                        this.overlayEventListener
                      ));
                  break;
                case "void":
                  this.onOverlayHide(),
                    this.overlaySubscription &&
                      this.overlaySubscription.unsubscribe();
              }
            }
            onOverlayAnimationEnd(e) {
              switch (e.toState) {
                case "visible":
                  this.focusOnFirstElement();
                  break;
                case "void":
                  yn.clear(e.element);
              }
            }
            focusOnFirstElement() {
              this.overlay &&
                w.focus(w.getFirstFocusableElement(this.overlay, ""));
            }
            getDefaultMatchMode() {
              return this.matchMode
                ? this.matchMode
                : "text" === this.type
                ? at.STARTS_WITH
                : "numeric" === this.type
                ? at.EQUALS
                : "date" === this.type
                ? at.DATE_IS
                : at.CONTAINS;
            }
            getDefaultOperator() {
              return this.dt.filters
                ? this.dt.filters[this.field][0].operator
                : this.operator;
            }
            hasRowFilter() {
              return (
                this.dt.filters[this.field] &&
                !this.dt.isFilterBlank(this.dt.filters[this.field].value)
              );
            }
            get fieldConstraints() {
              return this.dt.filters ? this.dt.filters[this.field] : null;
            }
            get showRemoveIcon() {
              return (
                !!this.fieldConstraints && this.fieldConstraints.length > 1
              );
            }
            get showMenuButton() {
              return (
                this.showMenu &&
                ("row" !== this.display || "boolean" !== this.type)
              );
            }
            get isShowOperator() {
              return this.showOperator && "boolean" !== this.type;
            }
            get isShowAddConstraint() {
              return (
                this.showAddButton &&
                "boolean" !== this.type &&
                this.fieldConstraints &&
                this.fieldConstraints.length < this.maxConstraints
              );
            }
            get applyButtonLabel() {
              return this.config.getTranslation(lt.APPLY);
            }
            get clearButtonLabel() {
              return this.config.getTranslation(lt.CLEAR);
            }
            get addRuleButtonLabel() {
              return this.config.getTranslation(lt.ADD_RULE);
            }
            get removeRuleButtonLabel() {
              return this.config.getTranslation(lt.REMOVE_RULE);
            }
            get noFilterLabel() {
              return this.config.getTranslation(lt.NO_FILTER);
            }
            hasFilter() {
              let e = this.dt.filters[this.field];
              return (
                !!e &&
                (Array.isArray(e)
                  ? !this.dt.isFilterBlank(e[0].value)
                  : !this.dt.isFilterBlank(e.value))
              );
            }
            isOutsideClicked(e) {
              return !(
                this.overlay?.isSameNode(e.target) ||
                this.overlay?.contains(e.target) ||
                this.icon?.nativeElement.isSameNode(e.target) ||
                this.icon?.nativeElement.contains(e.target) ||
                w.hasClass(e.target, "p-column-filter-add-button") ||
                w.hasClass(
                  e.target.parentElement,
                  "p-column-filter-add-button"
                ) ||
                w.hasClass(e.target, "p-column-filter-remove-button") ||
                w.hasClass(
                  e.target.parentElement,
                  "p-column-filter-remove-button"
                )
              );
            }
            bindDocumentClickListener() {
              this.documentClickListener ||
                (this.documentClickListener = this.renderer.listen(
                  this.el ? this.el.nativeElement.ownerDocument : "document",
                  "click",
                  (i) => {
                    this.overlayVisible &&
                      !this.selfClick &&
                      this.isOutsideClicked(i) &&
                      this.hide(),
                      (this.selfClick = !1);
                  }
                ));
            }
            unbindDocumentClickListener() {
              this.documentClickListener &&
                (this.documentClickListener(),
                (this.documentClickListener = null),
                (this.selfClick = !1));
            }
            bindDocumentResizeListener() {
              this.documentResizeListener ||
                (this.documentResizeListener = this.renderer.listen(
                  this.window,
                  "resize",
                  (e) => {
                    this.overlayVisible && !w.isTouchDevice() && this.hide();
                  }
                ));
            }
            unbindDocumentResizeListener() {
              this.documentResizeListener &&
                (this.documentResizeListener(),
                (this.documentResizeListener = null));
            }
            bindScrollListener() {
              this.scrollHandler ||
                (this.scrollHandler = new du(this.icon?.nativeElement, () => {
                  this.overlayVisible && this.hide();
                })),
                this.scrollHandler.bindScrollListener();
            }
            unbindScrollListener() {
              this.scrollHandler && this.scrollHandler.unbindScrollListener();
            }
            hide() {
              (this.overlayVisible = !1), this.cd.markForCheck();
            }
            onOverlayHide() {
              this.unbindDocumentClickListener(),
                this.unbindDocumentResizeListener(),
                this.unbindScrollListener(),
                (this.overlay = null);
            }
            clearFilter() {
              this.initFieldFilterConstraint(),
                this.dt._filter(),
                this.hideOnClear && this.hide();
            }
            applyFilter() {
              this.dt._filter(), this.hide();
            }
            ngOnDestroy() {
              this.overlay &&
                (this.renderer.appendChild(this.el.nativeElement, this.overlay),
                yn.clear(this.overlay),
                this.onOverlayHide()),
                this.translationSubscription &&
                  this.translationSubscription.unsubscribe(),
                this.resetSubscription && this.resetSubscription.unsubscribe(),
                this.overlaySubscription &&
                  this.overlaySubscription.unsubscribe();
            }
            static ɵfac = function (i) {
              return new (i || t)(
                D(Qe),
                D(Fe),
                D(Yr),
                D(Tt),
                D(Ri),
                D(Da),
                D(Ct)
              );
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-columnFilter"]],
              contentQueries: function (i, o, r) {
                if ((1 & i && kt(r, It, 4), 2 & i)) {
                  let s;
                  J((s = X())) && (o.templates = s);
                }
              },
              viewQuery: function (i, o) {
                if ((1 & i && (me(qH, 5), me(ZH, 5)), 2 & i)) {
                  let r;
                  J((r = X())) && (o.icon = r.first),
                    J((r = X())) && (o.clearButtonViewChild = r.first);
                }
              },
              hostAttrs: [1, "p-element"],
              inputs: {
                field: "field",
                type: "type",
                display: "display",
                showMenu: "showMenu",
                matchMode: "matchMode",
                operator: "operator",
                showOperator: "showOperator",
                showClearButton: "showClearButton",
                showApplyButton: "showApplyButton",
                showMatchModes: "showMatchModes",
                showAddButton: "showAddButton",
                hideOnClear: "hideOnClear",
                placeholder: "placeholder",
                matchModeOptions: "matchModeOptions",
                maxConstraints: "maxConstraints",
                minFractionDigits: "minFractionDigits",
                maxFractionDigits: "maxFractionDigits",
                prefix: "prefix",
                suffix: "suffix",
                locale: "locale",
                localeMatcher: "localeMatcher",
                currency: "currency",
                currencyDisplay: "currencyDisplay",
                useGrouping: "useGrouping",
                showButtons: "showButtons",
              },
              decls: 5,
              vars: 8,
              consts: [
                [1, "p-column-filter", 3, "ngClass"],
                [
                  "class",
                  "p-fluid",
                  3,
                  "type",
                  "field",
                  "filterConstraint",
                  "filterTemplate",
                  "placeholder",
                  "minFractionDigits",
                  "maxFractionDigits",
                  "prefix",
                  "suffix",
                  "locale",
                  "localeMatcher",
                  "currency",
                  "currencyDisplay",
                  "useGrouping",
                  "showButtons",
                  4,
                  "ngIf",
                ],
                [
                  "type",
                  "button",
                  "class",
                  "p-column-filter-menu-button p-link",
                  "aria-haspopup",
                  "true",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                  4,
                  "ngIf",
                ],
                [
                  "type",
                  "button",
                  "class",
                  "p-column-filter-clear-button p-link",
                  3,
                  "ngClass",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "role",
                  "dialog",
                  3,
                  "ngClass",
                  "id",
                  "click",
                  "keydown.escape",
                  4,
                  "ngIf",
                ],
                [
                  1,
                  "p-fluid",
                  3,
                  "type",
                  "field",
                  "filterConstraint",
                  "filterTemplate",
                  "placeholder",
                  "minFractionDigits",
                  "maxFractionDigits",
                  "prefix",
                  "suffix",
                  "locale",
                  "localeMatcher",
                  "currency",
                  "currencyDisplay",
                  "useGrouping",
                  "showButtons",
                ],
                [
                  "type",
                  "button",
                  "aria-haspopup",
                  "true",
                  1,
                  "p-column-filter-menu-button",
                  "p-link",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                ],
                ["icon", ""],
                [3, "styleClass", 4, "ngIf"],
                ["class", "pi-filter-icon", 4, "ngIf"],
                [3, "styleClass"],
                [1, "pi-filter-icon"],
                [4, "ngTemplateOutlet"],
                [
                  "type",
                  "button",
                  1,
                  "p-column-filter-clear-button",
                  "p-link",
                  3,
                  "ngClass",
                  "click",
                ],
                [4, "ngIf"],
                [
                  "role",
                  "dialog",
                  3,
                  "ngClass",
                  "id",
                  "click",
                  "keydown.escape",
                ],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                ["class", "p-column-filter-row-items", 4, "ngIf", "ngIfElse"],
                ["menu", ""],
                [1, "p-column-filter-row-items"],
                [
                  "class",
                  "p-column-filter-row-item",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                  "keydown.enter",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [1, "p-column-filter-separator"],
                [
                  1,
                  "p-column-filter-row-item",
                  3,
                  "click",
                  "keydown",
                  "keydown.enter",
                ],
                [
                  1,
                  "p-column-filter-row-item",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                  "keydown.enter",
                ],
                ["class", "p-column-filter-operator", 4, "ngIf"],
                [1, "p-column-filter-constraints"],
                ["class", "p-column-filter-constraint", 4, "ngFor", "ngForOf"],
                ["class", "p-column-filter-add-rule", 4, "ngIf"],
                [1, "p-column-filter-buttonbar"],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "class",
                  "p-button-outlined p-button-sm",
                  "pRipple",
                  "",
                  3,
                  "label",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "class",
                  "p-button-sm",
                  "pRipple",
                  "",
                  3,
                  "label",
                  "click",
                  4,
                  "ngIf",
                ],
                [1, "p-column-filter-operator"],
                [
                  "styleClass",
                  "p-column-filter-operator-dropdown",
                  3,
                  "options",
                  "ngModel",
                  "ngModelChange",
                ],
                [1, "p-column-filter-constraint"],
                [
                  "styleClass",
                  "p-column-filter-matchmode-dropdown",
                  3,
                  "options",
                  "ngModel",
                  "ngModelChange",
                  4,
                  "ngIf",
                ],
                [
                  3,
                  "type",
                  "field",
                  "filterConstraint",
                  "filterTemplate",
                  "placeholder",
                  "minFractionDigits",
                  "maxFractionDigits",
                  "prefix",
                  "suffix",
                  "locale",
                  "localeMatcher",
                  "currency",
                  "currencyDisplay",
                  "useGrouping",
                ],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "class",
                  "p-column-filter-remove-button p-button-text p-button-danger p-button-sm",
                  "pRipple",
                  "",
                  3,
                  "label",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "styleClass",
                  "p-column-filter-matchmode-dropdown",
                  3,
                  "options",
                  "ngModel",
                  "ngModelChange",
                ],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "pRipple",
                  "",
                  1,
                  "p-column-filter-remove-button",
                  "p-button-text",
                  "p-button-danger",
                  "p-button-sm",
                  3,
                  "label",
                  "click",
                ],
                [1, "p-column-filter-add-rule"],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "pRipple",
                  "",
                  1,
                  "p-column-filter-add-button",
                  "p-button-text",
                  "p-button-sm",
                  3,
                  "label",
                  "click",
                ],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "pRipple",
                  "",
                  1,
                  "p-button-outlined",
                  "p-button-sm",
                  3,
                  "label",
                  "click",
                ],
                ["clearBtn", ""],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "pRipple",
                  "",
                  1,
                  "p-button-sm",
                  3,
                  "label",
                  "click",
                ],
              ],
              template: function (i, o) {
                1 & i &&
                  (y(0, "div", 0),
                  f(1, YH, 1, 15, "p-columnFilterFormElement", 1),
                  f(2, nz, 4, 8, "button", 2),
                  f(3, az, 4, 5, "button", 3),
                  f(4, xz, 6, 16, "div", 4),
                  v()),
                  2 & i &&
                    (d(
                      "ngClass",
                      Ze(5, Mz, "row" === o.display, "menu" === o.display)
                    ),
                    g(1),
                    d("ngIf", "row" === o.display),
                    g(1),
                    d("ngIf", o.showMenuButton),
                    g(1),
                    d("ngIf", o.showClearButton && "row" === o.display),
                    g(1),
                    d("ngIf", o.showMenu && o.overlayVisible));
              },
              dependencies: function () {
                return [Bt, Oi, wt, St, gu, va, io, ng, aS, lS, $z];
              },
              encapsulation: 2,
              data: {
                animation: [
                  Lf("overlayAnimation", [
                    eo(":enter", [
                      Pn({ opacity: 0, transform: "scaleY(0.8)" }),
                      Xi(".12s cubic-bezier(0, 0, 0.2, 1)"),
                    ]),
                    eo(":leave", [Xi(".1s linear", Pn({ opacity: 0 }))]),
                  ]),
                ],
              },
            });
          }
          return t;
        })(),
        $z = (() => {
          class t {
            dt;
            colFilter;
            field;
            type;
            filterConstraint;
            filterTemplate;
            placeholder;
            minFractionDigits;
            maxFractionDigits;
            prefix;
            suffix;
            locale;
            localeMatcher;
            currency;
            currencyDisplay;
            useGrouping = !0;
            get showButtons() {
              return this.colFilter.showButtons;
            }
            filterCallback;
            constructor(e, i) {
              (this.dt = e), (this.colFilter = i);
            }
            ngOnInit() {
              this.filterCallback = (e) => {
                (this.filterConstraint.value = e), this.dt._filter();
              };
            }
            onModelChange(e) {
              (this.filterConstraint.value = e),
                ("date" === this.type || "boolean" === this.type || "" === e) &&
                  this.dt._filter();
            }
            onTextInputEnterKeyDown(e) {
              this.dt._filter(), e.preventDefault();
            }
            onNumericInputKeyDown(e) {
              "Enter" === e.key && (this.dt._filter(), e.preventDefault());
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Yr), D(hS));
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-columnFilterFormElement"]],
              hostAttrs: [1, "p-element"],
              inputs: {
                field: "field",
                type: "type",
                filterConstraint: "filterConstraint",
                filterTemplate: "filterTemplate",
                placeholder: "placeholder",
                minFractionDigits: "minFractionDigits",
                maxFractionDigits: "maxFractionDigits",
                prefix: "prefix",
                suffix: "suffix",
                locale: "locale",
                localeMatcher: "localeMatcher",
                currency: "currency",
                currencyDisplay: "currencyDisplay",
                useGrouping: "useGrouping",
              },
              decls: 3,
              vars: 2,
              consts: [
                [4, "ngIf", "ngIfElse"],
                ["builtInElement", ""],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [3, "ngSwitch"],
                [
                  "type",
                  "text",
                  "pInputText",
                  "",
                  3,
                  "value",
                  "input",
                  "keydown.enter",
                  4,
                  "ngSwitchCase",
                ],
                [
                  3,
                  "ngModel",
                  "showButtons",
                  "minFractionDigits",
                  "maxFractionDigits",
                  "prefix",
                  "suffix",
                  "placeholder",
                  "mode",
                  "locale",
                  "localeMatcher",
                  "currency",
                  "currencyDisplay",
                  "useGrouping",
                  "ngModelChange",
                  "onKeyDown",
                  4,
                  "ngSwitchCase",
                ],
                [3, "ngModel", "ngModelChange", 4, "ngSwitchCase"],
                [
                  3,
                  "placeholder",
                  "ngModel",
                  "ngModelChange",
                  4,
                  "ngSwitchCase",
                ],
                [
                  "type",
                  "text",
                  "pInputText",
                  "",
                  3,
                  "value",
                  "input",
                  "keydown.enter",
                ],
                [
                  3,
                  "ngModel",
                  "showButtons",
                  "minFractionDigits",
                  "maxFractionDigits",
                  "prefix",
                  "suffix",
                  "placeholder",
                  "mode",
                  "locale",
                  "localeMatcher",
                  "currency",
                  "currencyDisplay",
                  "useGrouping",
                  "ngModelChange",
                  "onKeyDown",
                ],
                [3, "ngModel", "ngModelChange"],
                [3, "placeholder", "ngModel", "ngModelChange"],
              ],
              template: function (i, o) {
                if (
                  (1 & i &&
                    (f(0, kz, 2, 19, "ng-container", 0),
                    f(1, Nz, 5, 5, "ng-template", null, 1, Yt)),
                  2 & i)
                ) {
                  const r = rt(2);
                  d("ngIf", o.filterTemplate)("ngIfElse", r);
                }
              },
              dependencies: [wt, St, qc, XC, dg, va, io, QT, UT, oS],
              encapsulation: 2,
            });
          }
          return t;
        })(),
        fS = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({
              imports: [
                pt,
                iV,
                ug,
                xa,
                Sa,
                Kr,
                fV,
                GT,
                pg,
                FV,
                Zr,
                rS,
                sS,
                Gr,
                LV,
                NV,
                PV,
                ko,
                aS,
                lS,
                ht,
                Zr,
              ],
            });
          }
          return t;
        })();
      function mg(...t) {
        const n = fs(t),
          e = Bm(t),
          { args: i, keys: o } = Aw(t);
        if (0 === i.length) return gt([], n);
        const r = new nt(
          (function Uz(t, n, e = Vi) {
            return (i) => {
              gS(
                n,
                () => {
                  const { length: o } = t,
                    r = new Array(o);
                  let s = o,
                    a = o;
                  for (let l = 0; l < o; l++)
                    gS(
                      n,
                      () => {
                        const c = gt(t[l], n);
                        let u = !1;
                        c.subscribe(
                          ut(
                            i,
                            (h) => {
                              (r[l] = h),
                                u || ((u = !0), a--),
                                a || i.next(e(r.slice()));
                            },
                            () => {
                              --s || i.complete();
                            }
                          )
                        );
                      },
                      i
                    );
                },
                i
              );
            };
          })(i, n, o ? (s) => Rw(o, s) : Vi)
        );
        return e ? r.pipe(kw(e)) : r;
      }
      function gS(t, n, e) {
        t ? fi(e, t, n) : n();
      }
      const yu = ds(
        (t) =>
          function () {
            t(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          }
      );
      function _g(...t) {
        return (function Gz() {
          return jo(1);
        })()(gt(t, fs(t)));
      }
      function mS(t) {
        return new nt((n) => {
          un(t()).subscribe(n);
        });
      }
      function Ma(t, n) {
        const e = Ve(t) ? t : () => t,
          i = (o) => o.error(e());
        return new nt(n ? (o) => n.schedule(i, 0, o) : i);
      }
      function yg() {
        return ft((t, n) => {
          let e = null;
          t._refCount++;
          const i = ut(n, void 0, void 0, void 0, () => {
            if (!t || t._refCount <= 0 || 0 < --t._refCount)
              return void (e = null);
            const o = t._connection,
              r = e;
            (e = null),
              o && (!r || o === r) && o.unsubscribe(),
              n.unsubscribe();
          });
          t.subscribe(i), i.closed || (e = t.connect());
        });
      }
      class _S extends nt {
        constructor(n, e) {
          super(),
            (this.source = n),
            (this.subjectFactory = e),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            Sm(n) && (this.lift = n.lift);
        }
        _subscribe(n) {
          return this.getSubject().subscribe(n);
        }
        getSubject() {
          const n = this._subject;
          return (
            (!n || n.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: n } = this;
          (this._subject = this._connection = null), n?.unsubscribe();
        }
        connect() {
          let n = this._connection;
          if (!n) {
            n = this._connection = new cn();
            const e = this.getSubject();
            n.add(
              this.source.subscribe(
                ut(
                  e,
                  void 0,
                  () => {
                    this._teardown(), e.complete();
                  },
                  (i) => {
                    this._teardown(), e.error(i);
                  },
                  () => this._teardown()
                )
              )
            ),
              n.closed && ((this._connection = null), (n = cn.EMPTY));
          }
          return n;
        }
        refCount() {
          return yg()(this);
        }
      }
      function Qr(t) {
        return t <= 0
          ? () => Qn
          : ft((n, e) => {
              let i = 0;
              n.subscribe(
                ut(e, (o) => {
                  ++i <= t && (e.next(o), t <= i && e.complete());
                })
              );
            });
      }
      function Fi(t, n) {
        return ft((e, i) => {
          let o = 0;
          e.subscribe(ut(i, (r) => t.call(n, r, o++) && i.next(r)));
        });
      }
      function vu(t) {
        return ft((n, e) => {
          let i = !1;
          n.subscribe(
            ut(
              e,
              (o) => {
                (i = !0), e.next(o);
              },
              () => {
                i || e.next(t), e.complete();
              }
            )
          );
        });
      }
      function yS(t = Kz) {
        return ft((n, e) => {
          let i = !1;
          n.subscribe(
            ut(
              e,
              (o) => {
                (i = !0), e.next(o);
              },
              () => (i ? e.complete() : e.error(t()))
            )
          );
        });
      }
      function Kz() {
        return new yu();
      }
      function Ro(t, n) {
        const e = arguments.length >= 2;
        return (i) =>
          i.pipe(
            t ? Fi((o, r) => t(o, r, i)) : Vi,
            Qr(1),
            e ? vu(n) : yS(() => new yu())
          );
      }
      function Jr(t, n) {
        return Ve(n) ? Et(t, n, 1) : Et(t, 1);
      }
      function $t(t, n, e) {
        const i = Ve(t) || n || e ? { next: t, error: n, complete: e } : t;
        return i
          ? ft((o, r) => {
              var s;
              null === (s = i.subscribe) || void 0 === s || s.call(i);
              let a = !0;
              o.subscribe(
                ut(
                  r,
                  (l) => {
                    var c;
                    null === (c = i.next) || void 0 === c || c.call(i, l),
                      r.next(l);
                  },
                  () => {
                    var l;
                    (a = !1),
                      null === (l = i.complete) || void 0 === l || l.call(i),
                      r.complete();
                  },
                  (l) => {
                    var c;
                    (a = !1),
                      null === (c = i.error) || void 0 === c || c.call(i, l),
                      r.error(l);
                  },
                  () => {
                    var l, c;
                    a &&
                      (null === (l = i.unsubscribe) ||
                        void 0 === l ||
                        l.call(i)),
                      null === (c = i.finalize) || void 0 === c || c.call(i);
                  }
                )
              );
            })
          : Vi;
      }
      function Fo(t) {
        return ft((n, e) => {
          let r,
            i = null,
            o = !1;
          (i = n.subscribe(
            ut(e, void 0, void 0, (s) => {
              (r = un(t(s, Fo(t)(n)))),
                i ? (i.unsubscribe(), (i = null), r.subscribe(e)) : (o = !0);
            })
          )),
            o && (i.unsubscribe(), (i = null), r.subscribe(e));
        });
      }
      function vg(t) {
        return t <= 0
          ? () => Qn
          : ft((n, e) => {
              let i = [];
              n.subscribe(
                ut(
                  e,
                  (o) => {
                    i.push(o), t < i.length && i.shift();
                  },
                  () => {
                    for (const o of i) e.next(o);
                    e.complete();
                  },
                  void 0,
                  () => {
                    i = null;
                  }
                )
              );
            });
      }
      function Oa(t) {
        return ft((n, e) => {
          try {
            n.subscribe(e);
          } finally {
            e.add(t);
          }
        });
      }
      const he = "primary",
        Aa = Symbol("RouteTitle");
      class Xz {
        constructor(n) {
          this.params = n || {};
        }
        has(n) {
          return Object.prototype.hasOwnProperty.call(this.params, n);
        }
        get(n) {
          if (this.has(n)) {
            const e = this.params[n];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(n) {
          if (this.has(n)) {
            const e = this.params[n];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function Xr(t) {
        return new Xz(t);
      }
      function e$(t, n, e) {
        const i = e.path.split("/");
        if (
          i.length > t.length ||
          ("full" === e.pathMatch && (n.hasChildren() || i.length < t.length))
        )
          return null;
        const o = {};
        for (let r = 0; r < i.length; r++) {
          const s = i[r],
            a = t[r];
          if (s.startsWith(":")) o[s.substring(1)] = a;
          else if (s !== a.path) return null;
        }
        return { consumed: t.slice(0, i.length), posParams: o };
      }
      function ci(t, n) {
        const e = t ? Object.keys(t) : void 0,
          i = n ? Object.keys(n) : void 0;
        if (!e || !i || e.length != i.length) return !1;
        let o;
        for (let r = 0; r < e.length; r++)
          if (((o = e[r]), !vS(t[o], n[o]))) return !1;
        return !0;
      }
      function vS(t, n) {
        if (Array.isArray(t) && Array.isArray(n)) {
          if (t.length !== n.length) return !1;
          const e = [...t].sort(),
            i = [...n].sort();
          return e.every((o, r) => i[r] === o);
        }
        return t === n;
      }
      function bS(t) {
        return t.length > 0 ? t[t.length - 1] : null;
      }
      function so(t) {
        return (function jz(t) {
          return !!t && (t instanceof nt || (Ve(t.lift) && Ve(t.subscribe)));
        })(t)
          ? t
          : na(t)
          ? gt(Promise.resolve(t))
          : oe(t);
      }
      const n$ = {
          exact: function TS(t, n, e) {
            if (
              !Lo(t.segments, n.segments) ||
              !bu(t.segments, n.segments, e) ||
              t.numberOfChildren !== n.numberOfChildren
            )
              return !1;
            for (const i in n.children)
              if (!t.children[i] || !TS(t.children[i], n.children[i], e))
                return !1;
            return !0;
          },
          subset: SS,
        },
        CS = {
          exact: function i$(t, n) {
            return ci(t, n);
          },
          subset: function o$(t, n) {
            return (
              Object.keys(n).length <= Object.keys(t).length &&
              Object.keys(n).every((e) => vS(t[e], n[e]))
            );
          },
          ignored: () => !0,
        };
      function wS(t, n, e) {
        return (
          n$[e.paths](t.root, n.root, e.matrixParams) &&
          CS[e.queryParams](t.queryParams, n.queryParams) &&
          !("exact" === e.fragment && t.fragment !== n.fragment)
        );
      }
      function SS(t, n, e) {
        return IS(t, n, n.segments, e);
      }
      function IS(t, n, e, i) {
        if (t.segments.length > e.length) {
          const o = t.segments.slice(0, e.length);
          return !(!Lo(o, e) || n.hasChildren() || !bu(o, e, i));
        }
        if (t.segments.length === e.length) {
          if (!Lo(t.segments, e) || !bu(t.segments, e, i)) return !1;
          for (const o in n.children)
            if (!t.children[o] || !SS(t.children[o], n.children[o], i))
              return !1;
          return !0;
        }
        {
          const o = e.slice(0, t.segments.length),
            r = e.slice(t.segments.length);
          return (
            !!(Lo(t.segments, o) && bu(t.segments, o, i) && t.children[he]) &&
            IS(t.children[he], n, r, i)
          );
        }
      }
      function bu(t, n, e) {
        return n.every((i, o) => CS[e](t[o].parameters, i.parameters));
      }
      class es {
        constructor(n = new Ne([], {}), e = {}, i = null) {
          (this.root = n), (this.queryParams = e), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Xr(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return a$.serialize(this);
        }
      }
      class Ne {
        constructor(n, e) {
          (this.segments = n),
            (this.children = e),
            (this.parent = null),
            Object.values(e).forEach((i) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Cu(this);
        }
      }
      class ka {
        constructor(n, e) {
          (this.path = n), (this.parameters = e);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = Xr(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return xS(this);
        }
      }
      function Lo(t, n) {
        return t.length === n.length && t.every((e, i) => e.path === n[i].path);
      }
      let Ra = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: function () {
              return new bg();
            },
            providedIn: "root",
          }));
        }
        return t;
      })();
      class bg {
        parse(n) {
          const e = new y$(n);
          return new es(
            e.parseRootSegment(),
            e.parseQueryParams(),
            e.parseFragment()
          );
        }
        serialize(n) {
          const e = `/${Fa(n.root, !0)}`,
            i = (function u$(t) {
              const n = Object.keys(t)
                .map((e) => {
                  const i = t[e];
                  return Array.isArray(i)
                    ? i.map((o) => `${wu(e)}=${wu(o)}`).join("&")
                    : `${wu(e)}=${wu(i)}`;
                })
                .filter((e) => !!e);
              return n.length ? `?${n.join("&")}` : "";
            })(n.queryParams);
          return `${e}${i}${
            "string" == typeof n.fragment
              ? `#${(function l$(t) {
                  return encodeURI(t);
                })(n.fragment)}`
              : ""
          }`;
        }
      }
      const a$ = new bg();
      function Cu(t) {
        return t.segments.map((n) => xS(n)).join("/");
      }
      function Fa(t, n) {
        if (!t.hasChildren()) return Cu(t);
        if (n) {
          const e = t.children[he] ? Fa(t.children[he], !1) : "",
            i = [];
          return (
            Object.entries(t.children).forEach(([o, r]) => {
              o !== he && i.push(`${o}:${Fa(r, !1)}`);
            }),
            i.length > 0 ? `${e}(${i.join("//")})` : e
          );
        }
        {
          const e = (function s$(t, n) {
            let e = [];
            return (
              Object.entries(t.children).forEach(([i, o]) => {
                i === he && (e = e.concat(n(o, i)));
              }),
              Object.entries(t.children).forEach(([i, o]) => {
                i !== he && (e = e.concat(n(o, i)));
              }),
              e
            );
          })(t, (i, o) =>
            o === he ? [Fa(t.children[he], !1)] : [`${o}:${Fa(i, !1)}`]
          );
          return 1 === Object.keys(t.children).length && null != t.children[he]
            ? `${Cu(t)}/${e[0]}`
            : `${Cu(t)}/(${e.join("//")})`;
        }
      }
      function DS(t) {
        return encodeURIComponent(t)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function wu(t) {
        return DS(t).replace(/%3B/gi, ";");
      }
      function Cg(t) {
        return DS(t)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function Tu(t) {
        return decodeURIComponent(t);
      }
      function ES(t) {
        return Tu(t.replace(/\+/g, "%20"));
      }
      function xS(t) {
        return `${Cg(t.path)}${(function c$(t) {
          return Object.keys(t)
            .map((n) => `;${Cg(n)}=${Cg(t[n])}`)
            .join("");
        })(t.parameters)}`;
      }
      const d$ = /^[^\/()?;#]+/;
      function wg(t) {
        const n = t.match(d$);
        return n ? n[0] : "";
      }
      const p$ = /^[^\/()?;=#]+/,
        f$ = /^[^=?&#]+/,
        m$ = /^[^&#]+/;
      class y$ {
        constructor(n) {
          (this.url = n), (this.remaining = n);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new Ne([], {})
              : new Ne([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const n = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(n);
            } while (this.consumeOptional("&"));
          return n;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const n = [];
          for (
            this.peekStartsWith("(") || n.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), n.push(this.parseSegment());
          let e = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (e = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith("(") && (i = this.parseParens(!1)),
            (n.length > 0 || Object.keys(e).length > 0) &&
              (i[he] = new Ne(n, e)),
            i
          );
        }
        parseSegment() {
          const n = wg(this.remaining);
          if ("" === n && this.peekStartsWith(";")) throw new O(4009, !1);
          return this.capture(n), new ka(Tu(n), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const n = {};
          for (; this.consumeOptional(";"); ) this.parseParam(n);
          return n;
        }
        parseParam(n) {
          const e = (function h$(t) {
            const n = t.match(p$);
            return n ? n[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const o = wg(this.remaining);
            o && ((i = o), this.capture(i));
          }
          n[Tu(e)] = Tu(i);
        }
        parseQueryParam(n) {
          const e = (function g$(t) {
            const n = t.match(f$);
            return n ? n[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let i = "";
          if (this.consumeOptional("=")) {
            const s = (function _$(t) {
              const n = t.match(m$);
              return n ? n[0] : "";
            })(this.remaining);
            s && ((i = s), this.capture(i));
          }
          const o = ES(e),
            r = ES(i);
          if (n.hasOwnProperty(o)) {
            let s = n[o];
            Array.isArray(s) || ((s = [s]), (n[o] = s)), s.push(r);
          } else n[o] = r;
        }
        parseParens(n) {
          const e = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const i = wg(this.remaining),
              o = this.remaining[i.length];
            if ("/" !== o && ")" !== o && ";" !== o) throw new O(4010, !1);
            let r;
            i.indexOf(":") > -1
              ? ((r = i.slice(0, i.indexOf(":"))),
                this.capture(r),
                this.capture(":"))
              : n && (r = he);
            const s = this.parseChildren();
            (e[r] = 1 === Object.keys(s).length ? s[he] : new Ne([], s)),
              this.consumeOptional("//");
          }
          return e;
        }
        peekStartsWith(n) {
          return this.remaining.startsWith(n);
        }
        consumeOptional(n) {
          return (
            !!this.peekStartsWith(n) &&
            ((this.remaining = this.remaining.substring(n.length)), !0)
          );
        }
        capture(n) {
          if (!this.consumeOptional(n)) throw new O(4011, !1);
        }
      }
      function MS(t) {
        return t.segments.length > 0 ? new Ne([], { [he]: t }) : t;
      }
      function OS(t) {
        const n = {};
        for (const i of Object.keys(t.children)) {
          const r = OS(t.children[i]);
          if (i === he && 0 === r.segments.length && r.hasChildren())
            for (const [s, a] of Object.entries(r.children)) n[s] = a;
          else (r.segments.length > 0 || r.hasChildren()) && (n[i] = r);
        }
        return (function v$(t) {
          if (1 === t.numberOfChildren && t.children[he]) {
            const n = t.children[he];
            return new Ne(t.segments.concat(n.segments), n.children);
          }
          return t;
        })(new Ne(t.segments, n));
      }
      function Po(t) {
        return t instanceof es;
      }
      function AS(t) {
        let n;
        const o = MS(
          (function e(r) {
            const s = {};
            for (const l of r.children) {
              const c = e(l);
              s[l.outlet] = c;
            }
            const a = new Ne(r.url, s);
            return r === t && (n = a), a;
          })(t.root)
        );
        return n ?? o;
      }
      function kS(t, n, e, i) {
        let o = t;
        for (; o.parent; ) o = o.parent;
        if (0 === n.length) return Tg(o, o, o, e, i);
        const r = (function C$(t) {
          if ("string" == typeof t[0] && 1 === t.length && "/" === t[0])
            return new FS(!0, 0, t);
          let n = 0,
            e = !1;
          const i = t.reduce((o, r, s) => {
            if ("object" == typeof r && null != r) {
              if (r.outlets) {
                const a = {};
                return (
                  Object.entries(r.outlets).forEach(([l, c]) => {
                    a[l] = "string" == typeof c ? c.split("/") : c;
                  }),
                  [...o, { outlets: a }]
                );
              }
              if (r.segmentPath) return [...o, r.segmentPath];
            }
            return "string" != typeof r
              ? [...o, r]
              : 0 === s
              ? (r.split("/").forEach((a, l) => {
                  (0 == l && "." === a) ||
                    (0 == l && "" === a
                      ? (e = !0)
                      : ".." === a
                      ? n++
                      : "" != a && o.push(a));
                }),
                o)
              : [...o, r];
          }, []);
          return new FS(e, n, i);
        })(n);
        if (r.toRoot()) return Tg(o, o, new Ne([], {}), e, i);
        const s = (function w$(t, n, e) {
            if (t.isAbsolute) return new Iu(n, !0, 0);
            if (!e) return new Iu(n, !1, NaN);
            if (null === e.parent) return new Iu(e, !0, 0);
            const i = Su(t.commands[0]) ? 0 : 1;
            return (function T$(t, n, e) {
              let i = t,
                o = n,
                r = e;
              for (; r > o; ) {
                if (((r -= o), (i = i.parent), !i)) throw new O(4005, !1);
                o = i.segments.length;
              }
              return new Iu(i, !1, o - r);
            })(e, e.segments.length - 1 + i, t.numberOfDoubleDots);
          })(r, o, t),
          a = s.processChildren
            ? Pa(s.segmentGroup, s.index, r.commands)
            : LS(s.segmentGroup, s.index, r.commands);
        return Tg(o, s.segmentGroup, a, e, i);
      }
      function Su(t) {
        return (
          "object" == typeof t && null != t && !t.outlets && !t.segmentPath
        );
      }
      function La(t) {
        return "object" == typeof t && null != t && t.outlets;
      }
      function Tg(t, n, e, i, o) {
        let s,
          r = {};
        i &&
          Object.entries(i).forEach(([l, c]) => {
            r[l] = Array.isArray(c) ? c.map((u) => `${u}`) : `${c}`;
          }),
          (s = t === n ? e : RS(t, n, e));
        const a = MS(OS(s));
        return new es(a, r, o);
      }
      function RS(t, n, e) {
        const i = {};
        return (
          Object.entries(t.children).forEach(([o, r]) => {
            i[o] = r === n ? e : RS(r, n, e);
          }),
          new Ne(t.segments, i)
        );
      }
      class FS {
        constructor(n, e, i) {
          if (
            ((this.isAbsolute = n),
            (this.numberOfDoubleDots = e),
            (this.commands = i),
            n && i.length > 0 && Su(i[0]))
          )
            throw new O(4003, !1);
          const o = i.find(La);
          if (o && o !== bS(i)) throw new O(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class Iu {
        constructor(n, e, i) {
          (this.segmentGroup = n), (this.processChildren = e), (this.index = i);
        }
      }
      function LS(t, n, e) {
        if (
          (t || (t = new Ne([], {})),
          0 === t.segments.length && t.hasChildren())
        )
          return Pa(t, n, e);
        const i = (function I$(t, n, e) {
            let i = 0,
              o = n;
            const r = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; o < t.segments.length; ) {
              if (i >= e.length) return r;
              const s = t.segments[o],
                a = e[i];
              if (La(a)) break;
              const l = `${a}`,
                c = i < e.length - 1 ? e[i + 1] : null;
              if (o > 0 && void 0 === l) break;
              if (l && c && "object" == typeof c && void 0 === c.outlets) {
                if (!NS(l, c, s)) return r;
                i += 2;
              } else {
                if (!NS(l, {}, s)) return r;
                i++;
              }
              o++;
            }
            return { match: !0, pathIndex: o, commandIndex: i };
          })(t, n, e),
          o = e.slice(i.commandIndex);
        if (i.match && i.pathIndex < t.segments.length) {
          const r = new Ne(t.segments.slice(0, i.pathIndex), {});
          return (
            (r.children[he] = new Ne(
              t.segments.slice(i.pathIndex),
              t.children
            )),
            Pa(r, 0, o)
          );
        }
        return i.match && 0 === o.length
          ? new Ne(t.segments, {})
          : i.match && !t.hasChildren()
          ? Sg(t, n, e)
          : i.match
          ? Pa(t, 0, o)
          : Sg(t, n, e);
      }
      function Pa(t, n, e) {
        if (0 === e.length) return new Ne(t.segments, {});
        {
          const i = (function S$(t) {
              return La(t[0]) ? t[0].outlets : { [he]: t };
            })(e),
            o = {};
          if (
            Object.keys(i).some((r) => r !== he) &&
            t.children[he] &&
            1 === t.numberOfChildren &&
            0 === t.children[he].segments.length
          ) {
            const r = Pa(t.children[he], n, e);
            return new Ne(t.segments, r.children);
          }
          return (
            Object.entries(i).forEach(([r, s]) => {
              "string" == typeof s && (s = [s]),
                null !== s && (o[r] = LS(t.children[r], n, s));
            }),
            Object.entries(t.children).forEach(([r, s]) => {
              void 0 === i[r] && (o[r] = s);
            }),
            new Ne(t.segments, o)
          );
        }
      }
      function Sg(t, n, e) {
        const i = t.segments.slice(0, n);
        let o = 0;
        for (; o < e.length; ) {
          const r = e[o];
          if (La(r)) {
            const l = D$(r.outlets);
            return new Ne(i, l);
          }
          if (0 === o && Su(e[0])) {
            i.push(new ka(t.segments[n].path, PS(e[0]))), o++;
            continue;
          }
          const s = La(r) ? r.outlets[he] : `${r}`,
            a = o < e.length - 1 ? e[o + 1] : null;
          s && a && Su(a)
            ? (i.push(new ka(s, PS(a))), (o += 2))
            : (i.push(new ka(s, {})), o++);
        }
        return new Ne(i, {});
      }
      function D$(t) {
        const n = {};
        return (
          Object.entries(t).forEach(([e, i]) => {
            "string" == typeof i && (i = [i]),
              null !== i && (n[e] = Sg(new Ne([], {}), 0, i));
          }),
          n
        );
      }
      function PS(t) {
        const n = {};
        return Object.entries(t).forEach(([e, i]) => (n[e] = `${i}`)), n;
      }
      function NS(t, n, e) {
        return t == e.path && ci(n, e.parameters);
      }
      const Na = "imperative";
      class ui {
        constructor(n, e) {
          (this.id = n), (this.url = e);
        }
      }
      class Du extends ui {
        constructor(n, e, i = "imperative", o = null) {
          super(n, e),
            (this.type = 0),
            (this.navigationTrigger = i),
            (this.restoredState = o);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class ao extends ui {
        constructor(n, e, i) {
          super(n, e), (this.urlAfterRedirects = i), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class Va extends ui {
        constructor(n, e, i, o) {
          super(n, e), (this.reason = i), (this.code = o), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class ts extends ui {
        constructor(n, e, i, o) {
          super(n, e), (this.reason = i), (this.code = o), (this.type = 16);
        }
      }
      class Eu extends ui {
        constructor(n, e, i, o) {
          super(n, e), (this.error = i), (this.target = o), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class VS extends ui {
        constructor(n, e, i, o) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class E$ extends ui {
        constructor(n, e, i, o) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class x$ extends ui {
        constructor(n, e, i, o, r) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.shouldActivate = r),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class M$ extends ui {
        constructor(n, e, i, o) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class O$ extends ui {
        constructor(n, e, i, o) {
          super(n, e),
            (this.urlAfterRedirects = i),
            (this.state = o),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class A$ {
        constructor(n) {
          (this.route = n), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class k$ {
        constructor(n) {
          (this.route = n), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class R$ {
        constructor(n) {
          (this.snapshot = n), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class F$ {
        constructor(n) {
          (this.snapshot = n), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class L$ {
        constructor(n) {
          (this.snapshot = n), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class P$ {
        constructor(n) {
          (this.snapshot = n), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class BS {
        constructor(n, e, i) {
          (this.routerEvent = n),
            (this.position = e),
            (this.anchor = i),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      class Ig {}
      class Dg {
        constructor(n) {
          this.url = n;
        }
      }
      class N$ {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.injector = null),
            (this.children = new Ba()),
            (this.attachRef = null);
        }
      }
      let Ba = (() => {
        class t {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(e, i) {
            const o = this.getOrCreateContext(e);
            (o.outlet = i), this.contexts.set(e, o);
          }
          onChildOutletDestroyed(e) {
            const i = this.getContext(e);
            i && ((i.outlet = null), (i.attachRef = null));
          }
          onOutletDeactivated() {
            const e = this.contexts;
            return (this.contexts = new Map()), e;
          }
          onOutletReAttached(e) {
            this.contexts = e;
          }
          getOrCreateContext(e) {
            let i = this.getContext(e);
            return i || ((i = new N$()), this.contexts.set(e, i)), i;
          }
          getContext(e) {
            return this.contexts.get(e) || null;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      class HS {
        constructor(n) {
          this._root = n;
        }
        get root() {
          return this._root.value;
        }
        parent(n) {
          const e = this.pathFromRoot(n);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(n) {
          const e = Eg(n, this._root);
          return e ? e.children.map((i) => i.value) : [];
        }
        firstChild(n) {
          const e = Eg(n, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(n) {
          const e = xg(n, this._root);
          return e.length < 2
            ? []
            : e[e.length - 2].children
                .map((o) => o.value)
                .filter((o) => o !== n);
        }
        pathFromRoot(n) {
          return xg(n, this._root).map((e) => e.value);
        }
      }
      function Eg(t, n) {
        if (t === n.value) return n;
        for (const e of n.children) {
          const i = Eg(t, e);
          if (i) return i;
        }
        return null;
      }
      function xg(t, n) {
        if (t === n.value) return [n];
        for (const e of n.children) {
          const i = xg(t, e);
          if (i.length) return i.unshift(n), i;
        }
        return [];
      }
      class Li {
        constructor(n, e) {
          (this.value = n), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function ns(t) {
        const n = {};
        return t && t.children.forEach((e) => (n[e.value.outlet] = e)), n;
      }
      class zS extends HS {
        constructor(n, e) {
          super(n), (this.snapshot = e), Mg(this, n);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function $S(t, n) {
        const e = (function V$(t, n) {
            const s = new xu([], {}, {}, "", {}, he, n, null, {});
            return new US("", new Li(s, []));
          })(0, n),
          i = new wn([new ka("", {})]),
          o = new wn({}),
          r = new wn({}),
          s = new wn({}),
          a = new wn(""),
          l = new is(i, o, s, a, r, he, n, e.root);
        return (l.snapshot = e.root), new zS(new Li(l, []), e);
      }
      class is {
        constructor(n, e, i, o, r, s, a, l) {
          (this.urlSubject = n),
            (this.paramsSubject = e),
            (this.queryParamsSubject = i),
            (this.fragmentSubject = o),
            (this.dataSubject = r),
            (this.outlet = s),
            (this.component = a),
            (this._futureSnapshot = l),
            (this.title =
              this.dataSubject?.pipe(Ie((c) => c[Aa])) ?? oe(void 0)),
            (this.url = n),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = o),
            (this.data = r);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(Ie((n) => Xr(n)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(Ie((n) => Xr(n)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function jS(t, n = "emptyOnly") {
        const e = t.pathFromRoot;
        let i = 0;
        if ("always" !== n)
          for (i = e.length - 1; i >= 1; ) {
            const o = e[i],
              r = e[i - 1];
            if (o.routeConfig && "" === o.routeConfig.path) i--;
            else {
              if (r.component) break;
              i--;
            }
          }
        return (function B$(t) {
          return t.reduce(
            (n, e) => ({
              params: { ...n.params, ...e.params },
              data: { ...n.data, ...e.data },
              resolve: {
                ...e.data,
                ...n.resolve,
                ...e.routeConfig?.data,
                ...e._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(e.slice(i));
      }
      class xu {
        get title() {
          return this.data?.[Aa];
        }
        constructor(n, e, i, o, r, s, a, l, c) {
          (this.url = n),
            (this.params = e),
            (this.queryParams = i),
            (this.fragment = o),
            (this.data = r),
            (this.outlet = s),
            (this.component = a),
            (this.routeConfig = l),
            (this._resolve = c);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = Xr(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Xr(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class US extends HS {
        constructor(n, e) {
          super(e), (this.url = n), Mg(this, e);
        }
        toString() {
          return GS(this._root);
        }
      }
      function Mg(t, n) {
        (n.value._routerState = t), n.children.forEach((e) => Mg(t, e));
      }
      function GS(t) {
        const n =
          t.children.length > 0 ? ` { ${t.children.map(GS).join(", ")} } ` : "";
        return `${t.value}${n}`;
      }
      function Og(t) {
        if (t.snapshot) {
          const n = t.snapshot,
            e = t._futureSnapshot;
          (t.snapshot = e),
            ci(n.queryParams, e.queryParams) ||
              t.queryParamsSubject.next(e.queryParams),
            n.fragment !== e.fragment && t.fragmentSubject.next(e.fragment),
            ci(n.params, e.params) || t.paramsSubject.next(e.params),
            (function t$(t, n) {
              if (t.length !== n.length) return !1;
              for (let e = 0; e < t.length; ++e) if (!ci(t[e], n[e])) return !1;
              return !0;
            })(n.url, e.url) || t.urlSubject.next(e.url),
            ci(n.data, e.data) || t.dataSubject.next(e.data);
        } else
          (t.snapshot = t._futureSnapshot),
            t.dataSubject.next(t._futureSnapshot.data);
      }
      function Ag(t, n) {
        const e =
          ci(t.params, n.params) &&
          (function r$(t, n) {
            return (
              Lo(t, n) && t.every((e, i) => ci(e.parameters, n[i].parameters))
            );
          })(t.url, n.url);
        return (
          e &&
          !(!t.parent != !n.parent) &&
          (!t.parent || Ag(t.parent, n.parent))
        );
      }
      let WS = (() => {
        class t {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = he),
              (this.activateEvents = new L()),
              (this.deactivateEvents = new L()),
              (this.attachEvents = new L()),
              (this.detachEvents = new L()),
              (this.parentContexts = U(Ba)),
              (this.location = U(Rn)),
              (this.changeDetector = U(Ct)),
              (this.environmentInjector = U(gn)),
              (this.inputBinder = U(Mu, { optional: !0 })),
              (this.supportsBindingToComponentInputs = !0);
          }
          get activatedComponentRef() {
            return this.activated;
          }
          ngOnChanges(e) {
            if (e.name) {
              const { firstChange: i, previousValue: o } = e.name;
              if (i) return;
              this.isTrackedInParentContexts(o) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(o)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name),
              this.inputBinder?.unsubscribeFromRouteData(this);
          }
          isTrackedInParentContexts(e) {
            return this.parentContexts.getContext(e)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const e = this.parentContexts.getContext(this.name);
            e?.route &&
              (e.attachRef
                ? this.attach(e.attachRef, e.route)
                : this.activateWith(e.route, e.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new O(4012, !1);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new O(4012, !1);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new O(4012, !1);
            this.location.detach();
            const e = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(e.instance),
              e
            );
          }
          attach(e, i) {
            (this.activated = e),
              (this._activatedRoute = i),
              this.location.insert(e.hostView),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.attachEvents.emit(e.instance);
          }
          deactivate() {
            if (this.activated) {
              const e = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(e);
            }
          }
          activateWith(e, i) {
            if (this.isActivated) throw new O(4013, !1);
            this._activatedRoute = e;
            const o = this.location,
              s = e.snapshot.component,
              a = this.parentContexts.getOrCreateContext(this.name).children,
              l = new H$(e, a, o.injector);
            (this.activated = o.createComponent(s, {
              index: o.length,
              injector: l,
              environmentInjector: i ?? this.environmentInjector,
            })),
              this.changeDetector.markForCheck(),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.activateEvents.emit(this.activated.instance);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵdir = Y({
            type: t,
            selectors: [["router-outlet"]],
            inputs: { name: "name" },
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
            standalone: !0,
            features: [_t],
          }));
        }
        return t;
      })();
      class H$ {
        constructor(n, e, i) {
          (this.route = n), (this.childContexts = e), (this.parent = i);
        }
        get(n, e) {
          return n === is
            ? this.route
            : n === Ba
            ? this.childContexts
            : this.parent.get(n, e);
        }
      }
      const Mu = new G("");
      let KS = (() => {
        class t {
          constructor() {
            this.outletDataSubscriptions = new Map();
          }
          bindActivatedRouteToOutletComponent(e) {
            this.unsubscribeFromRouteData(e), this.subscribeToRouteData(e);
          }
          unsubscribeFromRouteData(e) {
            this.outletDataSubscriptions.get(e)?.unsubscribe(),
              this.outletDataSubscriptions.delete(e);
          }
          subscribeToRouteData(e) {
            const { activatedRoute: i } = e,
              o = mg([i.queryParams, i.params, i.data])
                .pipe(
                  Tn(
                    ([r, s, a], l) => (
                      (a = { ...r, ...s, ...a }),
                      0 === l ? oe(a) : Promise.resolve(a)
                    )
                  )
                )
                .subscribe((r) => {
                  if (
                    !e.isActivated ||
                    !e.activatedComponentRef ||
                    e.activatedRoute !== i ||
                    null === i.component
                  )
                    return void this.unsubscribeFromRouteData(e);
                  const s = (function pF(t) {
                    const n = be(t);
                    if (!n) return null;
                    const e = new Qs(n);
                    return {
                      get selector() {
                        return e.selector;
                      },
                      get type() {
                        return e.componentType;
                      },
                      get inputs() {
                        return e.inputs;
                      },
                      get outputs() {
                        return e.outputs;
                      },
                      get ngContentSelectors() {
                        return e.ngContentSelectors;
                      },
                      get isStandalone() {
                        return n.standalone;
                      },
                      get isSignal() {
                        return n.signals;
                      },
                    };
                  })(i.component);
                  if (s)
                    for (const { templateName: a } of s.inputs)
                      e.activatedComponentRef.setInput(a, r[a]);
                  else this.unsubscribeFromRouteData(e);
                });
            this.outletDataSubscriptions.set(e, o);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      function Ha(t, n, e) {
        if (e && t.shouldReuseRoute(n.value, e.value.snapshot)) {
          const i = e.value;
          i._futureSnapshot = n.value;
          const o = (function $$(t, n, e) {
            return n.children.map((i) => {
              for (const o of e.children)
                if (t.shouldReuseRoute(i.value, o.value.snapshot))
                  return Ha(t, i, o);
              return Ha(t, i);
            });
          })(t, n, e);
          return new Li(i, o);
        }
        {
          if (t.shouldAttach(n.value)) {
            const r = t.retrieve(n.value);
            if (null !== r) {
              const s = r.route;
              return (
                (s.value._futureSnapshot = n.value),
                (s.children = n.children.map((a) => Ha(t, a))),
                s
              );
            }
          }
          const i = (function j$(t) {
              return new is(
                new wn(t.url),
                new wn(t.params),
                new wn(t.queryParams),
                new wn(t.fragment),
                new wn(t.data),
                t.outlet,
                t.component,
                t
              );
            })(n.value),
            o = n.children.map((r) => Ha(t, r));
          return new Li(i, o);
        }
      }
      const kg = "ngNavigationCancelingError";
      function qS(t, n) {
        const { redirectTo: e, navigationBehaviorOptions: i } = Po(n)
            ? { redirectTo: n, navigationBehaviorOptions: void 0 }
            : n,
          o = ZS(!1, 0, n);
        return (o.url = e), (o.navigationBehaviorOptions = i), o;
      }
      function ZS(t, n, e) {
        const i = new Error("NavigationCancelingError: " + (t || ""));
        return (i[kg] = !0), (i.cancellationCode = n), e && (i.url = e), i;
      }
      function YS(t) {
        return t && t[kg];
      }
      let QS = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵcmp = le({
            type: t,
            selectors: [["ng-component"]],
            standalone: !0,
            features: [Be],
            decls: 1,
            vars: 0,
            template: function (i, o) {
              1 & i && k(0, "router-outlet");
            },
            dependencies: [WS],
            encapsulation: 2,
          }));
        }
        return t;
      })();
      function Rg(t) {
        const n = t.children && t.children.map(Rg),
          e = n ? { ...t, children: n } : { ...t };
        return (
          !e.component &&
            !e.loadComponent &&
            (n || e.loadChildren) &&
            e.outlet &&
            e.outlet !== he &&
            (e.component = QS),
          e
        );
      }
      function Zn(t) {
        return t.outlet || he;
      }
      function za(t) {
        if (!t) return null;
        if (t.routeConfig?._injector) return t.routeConfig._injector;
        for (let n = t.parent; n; n = n.parent) {
          const e = n.routeConfig;
          if (e?._loadedInjector) return e._loadedInjector;
          if (e?._injector) return e._injector;
        }
        return null;
      }
      class Q$ {
        constructor(n, e, i, o, r) {
          (this.routeReuseStrategy = n),
            (this.futureState = e),
            (this.currState = i),
            (this.forwardEvent = o),
            (this.inputBindingEnabled = r);
        }
        activate(n) {
          const e = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, i, n),
            Og(this.futureState.root),
            this.activateChildRoutes(e, i, n);
        }
        deactivateChildRoutes(n, e, i) {
          const o = ns(e);
          n.children.forEach((r) => {
            const s = r.value.outlet;
            this.deactivateRoutes(r, o[s], i), delete o[s];
          }),
            Object.values(o).forEach((r) => {
              this.deactivateRouteAndItsChildren(r, i);
            });
        }
        deactivateRoutes(n, e, i) {
          const o = n.value,
            r = e ? e.value : null;
          if (o === r)
            if (o.component) {
              const s = i.getContext(o.outlet);
              s && this.deactivateChildRoutes(n, e, s.children);
            } else this.deactivateChildRoutes(n, e, i);
          else r && this.deactivateRouteAndItsChildren(e, i);
        }
        deactivateRouteAndItsChildren(n, e) {
          n.value.component &&
          this.routeReuseStrategy.shouldDetach(n.value.snapshot)
            ? this.detachAndStoreRouteSubtree(n, e)
            : this.deactivateRouteAndOutlet(n, e);
        }
        detachAndStoreRouteSubtree(n, e) {
          const i = e.getContext(n.value.outlet),
            o = i && n.value.component ? i.children : e,
            r = ns(n);
          for (const s of Object.keys(r))
            this.deactivateRouteAndItsChildren(r[s], o);
          if (i && i.outlet) {
            const s = i.outlet.detach(),
              a = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(n.value.snapshot, {
              componentRef: s,
              route: n,
              contexts: a,
            });
          }
        }
        deactivateRouteAndOutlet(n, e) {
          const i = e.getContext(n.value.outlet),
            o = i && n.value.component ? i.children : e,
            r = ns(n);
          for (const s of Object.keys(r))
            this.deactivateRouteAndItsChildren(r[s], o);
          i &&
            (i.outlet &&
              (i.outlet.deactivate(), i.children.onOutletDeactivated()),
            (i.attachRef = null),
            (i.route = null));
        }
        activateChildRoutes(n, e, i) {
          const o = ns(e);
          n.children.forEach((r) => {
            this.activateRoutes(r, o[r.value.outlet], i),
              this.forwardEvent(new P$(r.value.snapshot));
          }),
            n.children.length && this.forwardEvent(new F$(n.value.snapshot));
        }
        activateRoutes(n, e, i) {
          const o = n.value,
            r = e ? e.value : null;
          if ((Og(o), o === r))
            if (o.component) {
              const s = i.getOrCreateContext(o.outlet);
              this.activateChildRoutes(n, e, s.children);
            } else this.activateChildRoutes(n, e, i);
          else if (o.component) {
            const s = i.getOrCreateContext(o.outlet);
            if (this.routeReuseStrategy.shouldAttach(o.snapshot)) {
              const a = this.routeReuseStrategy.retrieve(o.snapshot);
              this.routeReuseStrategy.store(o.snapshot, null),
                s.children.onOutletReAttached(a.contexts),
                (s.attachRef = a.componentRef),
                (s.route = a.route.value),
                s.outlet && s.outlet.attach(a.componentRef, a.route.value),
                Og(a.route.value),
                this.activateChildRoutes(n, null, s.children);
            } else {
              const a = za(o.snapshot);
              (s.attachRef = null),
                (s.route = o),
                (s.injector = a),
                s.outlet && s.outlet.activateWith(o, s.injector),
                this.activateChildRoutes(n, null, s.children);
            }
          } else this.activateChildRoutes(n, null, i);
        }
      }
      class JS {
        constructor(n) {
          (this.path = n), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Ou {
        constructor(n, e) {
          (this.component = n), (this.route = e);
        }
      }
      function J$(t, n, e) {
        const i = t._root;
        return $a(i, n ? n._root : null, e, [i.value]);
      }
      function os(t, n) {
        const e = Symbol(),
          i = n.get(t, e);
        return i === e
          ? "function" != typeof t ||
            (function P2(t) {
              return null !== sl(t);
            })(t)
            ? n.get(t)
            : t
          : i;
      }
      function $a(
        t,
        n,
        e,
        i,
        o = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const r = ns(n);
        return (
          t.children.forEach((s) => {
            (function ej(
              t,
              n,
              e,
              i,
              o = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const r = t.value,
                s = n ? n.value : null,
                a = e ? e.getContext(t.value.outlet) : null;
              if (s && r.routeConfig === s.routeConfig) {
                const l = (function tj(t, n, e) {
                  if ("function" == typeof e) return e(t, n);
                  switch (e) {
                    case "pathParamsChange":
                      return !Lo(t.url, n.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !Lo(t.url, n.url) || !ci(t.queryParams, n.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !Ag(t, n) || !ci(t.queryParams, n.queryParams);
                    default:
                      return !Ag(t, n);
                  }
                })(s, r, r.routeConfig.runGuardsAndResolvers);
                l
                  ? o.canActivateChecks.push(new JS(i))
                  : ((r.data = s.data), (r._resolvedData = s._resolvedData)),
                  $a(t, n, r.component ? (a ? a.children : null) : e, i, o),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    o.canDeactivateChecks.push(new Ou(a.outlet.component, s));
              } else
                s && ja(n, a, o),
                  o.canActivateChecks.push(new JS(i)),
                  $a(t, null, r.component ? (a ? a.children : null) : e, i, o);
            })(s, r[s.value.outlet], e, i.concat([s.value]), o),
              delete r[s.value.outlet];
          }),
          Object.entries(r).forEach(([s, a]) => ja(a, e.getContext(s), o)),
          o
        );
      }
      function ja(t, n, e) {
        const i = ns(t),
          o = t.value;
        Object.entries(i).forEach(([r, s]) => {
          ja(s, o.component ? (n ? n.children.getContext(r) : null) : n, e);
        }),
          e.canDeactivateChecks.push(
            new Ou(
              o.component && n && n.outlet && n.outlet.isActivated
                ? n.outlet.component
                : null,
              o
            )
          );
      }
      function Ua(t) {
        return "function" == typeof t;
      }
      function XS(t) {
        return t instanceof yu || "EmptyError" === t?.name;
      }
      const Au = Symbol("INITIAL_VALUE");
      function rs() {
        return Tn((t) =>
          mg(
            t.map((n) =>
              n.pipe(
                Qr(1),
                (function Wz(...t) {
                  const n = fs(t);
                  return ft((e, i) => {
                    (n ? _g(t, e, n) : _g(t, e)).subscribe(i);
                  });
                })(Au)
              )
            )
          ).pipe(
            Ie((n) => {
              for (const e of n)
                if (!0 !== e) {
                  if (e === Au) return Au;
                  if (!1 === e || e instanceof es) return e;
                }
              return !0;
            }),
            Fi((n) => n !== Au),
            Qr(1)
          )
        );
      }
      function eI(t) {
        return (function VD(...t) {
          return Cm(t);
        })(
          $t((n) => {
            if (Po(n)) throw qS(0, n);
          }),
          Ie((n) => !0 === n)
        );
      }
      class ku {
        constructor(n) {
          this.segmentGroup = n || null;
        }
      }
      class tI {
        constructor(n) {
          this.urlTree = n;
        }
      }
      function ss(t) {
        return Ma(new ku(t));
      }
      function nI(t) {
        return Ma(new tI(t));
      }
      class Cj {
        constructor(n, e) {
          (this.urlSerializer = n), (this.urlTree = e);
        }
        noMatchError(n) {
          return new O(4002, !1);
        }
        lineralizeSegments(n, e) {
          let i = [],
            o = e.root;
          for (;;) {
            if (((i = i.concat(o.segments)), 0 === o.numberOfChildren))
              return oe(i);
            if (o.numberOfChildren > 1 || !o.children[he])
              return Ma(new O(4e3, !1));
            o = o.children[he];
          }
        }
        applyRedirectCommands(n, e, i) {
          return this.applyRedirectCreateUrlTree(
            e,
            this.urlSerializer.parse(e),
            n,
            i
          );
        }
        applyRedirectCreateUrlTree(n, e, i, o) {
          const r = this.createSegmentGroup(n, e.root, i, o);
          return new es(
            r,
            this.createQueryParams(e.queryParams, this.urlTree.queryParams),
            e.fragment
          );
        }
        createQueryParams(n, e) {
          const i = {};
          return (
            Object.entries(n).forEach(([o, r]) => {
              if ("string" == typeof r && r.startsWith(":")) {
                const a = r.substring(1);
                i[o] = e[a];
              } else i[o] = r;
            }),
            i
          );
        }
        createSegmentGroup(n, e, i, o) {
          const r = this.createSegments(n, e.segments, i, o);
          let s = {};
          return (
            Object.entries(e.children).forEach(([a, l]) => {
              s[a] = this.createSegmentGroup(n, l, i, o);
            }),
            new Ne(r, s)
          );
        }
        createSegments(n, e, i, o) {
          return e.map((r) =>
            r.path.startsWith(":")
              ? this.findPosParam(n, r, o)
              : this.findOrReturn(r, i)
          );
        }
        findPosParam(n, e, i) {
          const o = i[e.path.substring(1)];
          if (!o) throw new O(4001, !1);
          return o;
        }
        findOrReturn(n, e) {
          let i = 0;
          for (const o of e) {
            if (o.path === n.path) return e.splice(i), o;
            i++;
          }
          return n;
        }
      }
      const Fg = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function wj(t, n, e, i, o) {
        const r = Lg(t, n, e);
        return r.matched
          ? ((i = (function G$(t, n) {
              return (
                t.providers &&
                  !t._injector &&
                  (t._injector = Mh(t.providers, n, `Route: ${t.path}`)),
                t._injector ?? n
              );
            })(n, i)),
            (function yj(t, n, e, i) {
              const o = n.canMatch;
              return o && 0 !== o.length
                ? oe(
                    o.map((s) => {
                      const a = os(s, t);
                      return so(
                        (function aj(t) {
                          return t && Ua(t.canMatch);
                        })(a)
                          ? a.canMatch(n, e)
                          : t.runInContext(() => a(n, e))
                      );
                    })
                  ).pipe(rs(), eI())
                : oe(!0);
            })(i, n, e).pipe(Ie((s) => (!0 === s ? r : { ...Fg }))))
          : oe(r);
      }
      function Lg(t, n, e) {
        if ("" === n.path)
          return "full" === n.pathMatch && (t.hasChildren() || e.length > 0)
            ? { ...Fg }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: e,
                parameters: {},
                positionalParamSegments: {},
              };
        const o = (n.matcher || e$)(e, t, n);
        if (!o) return { ...Fg };
        const r = {};
        Object.entries(o.posParams ?? {}).forEach(([a, l]) => {
          r[a] = l.path;
        });
        const s =
          o.consumed.length > 0
            ? { ...r, ...o.consumed[o.consumed.length - 1].parameters }
            : r;
        return {
          matched: !0,
          consumedSegments: o.consumed,
          remainingSegments: e.slice(o.consumed.length),
          parameters: s,
          positionalParamSegments: o.posParams ?? {},
        };
      }
      function iI(t, n, e, i) {
        return e.length > 0 &&
          (function Ij(t, n, e) {
            return e.some((i) => Ru(t, n, i) && Zn(i) !== he);
          })(t, e, i)
          ? {
              segmentGroup: new Ne(n, Sj(i, new Ne(e, t.children))),
              slicedSegments: [],
            }
          : 0 === e.length &&
            (function Dj(t, n, e) {
              return e.some((i) => Ru(t, n, i));
            })(t, e, i)
          ? {
              segmentGroup: new Ne(t.segments, Tj(t, 0, e, i, t.children)),
              slicedSegments: e,
            }
          : { segmentGroup: new Ne(t.segments, t.children), slicedSegments: e };
      }
      function Tj(t, n, e, i, o) {
        const r = {};
        for (const s of i)
          if (Ru(t, e, s) && !o[Zn(s)]) {
            const a = new Ne([], {});
            r[Zn(s)] = a;
          }
        return { ...o, ...r };
      }
      function Sj(t, n) {
        const e = {};
        e[he] = n;
        for (const i of t)
          if ("" === i.path && Zn(i) !== he) {
            const o = new Ne([], {});
            e[Zn(i)] = o;
          }
        return e;
      }
      function Ru(t, n, e) {
        return (
          (!(t.hasChildren() || n.length > 0) || "full" !== e.pathMatch) &&
          "" === e.path
        );
      }
      class Oj {
        constructor(n, e, i, o, r, s, a) {
          (this.injector = n),
            (this.configLoader = e),
            (this.rootComponentType = i),
            (this.config = o),
            (this.urlTree = r),
            (this.paramsInheritanceStrategy = s),
            (this.urlSerializer = a),
            (this.allowRedirects = !0),
            (this.applyRedirects = new Cj(this.urlSerializer, this.urlTree));
        }
        noMatchError(n) {
          return new O(4002, !1);
        }
        recognize() {
          const n = iI(this.urlTree.root, [], [], this.config).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            n,
            he
          ).pipe(
            Fo((e) => {
              if (e instanceof tI)
                return (
                  (this.allowRedirects = !1),
                  (this.urlTree = e.urlTree),
                  this.match(e.urlTree)
                );
              throw e instanceof ku ? this.noMatchError(e) : e;
            }),
            Ie((e) => {
              const i = new xu(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  he,
                  this.rootComponentType,
                  null,
                  {}
                ),
                o = new Li(i, e),
                r = new US("", o),
                s = (function b$(t, n, e = null, i = null) {
                  return kS(AS(t), n, e, i);
                })(i, [], this.urlTree.queryParams, this.urlTree.fragment);
              return (
                (s.queryParams = this.urlTree.queryParams),
                (r.url = this.urlSerializer.serialize(s)),
                this.inheritParamsAndData(r._root),
                { state: r, tree: s }
              );
            })
          );
        }
        match(n) {
          return this.processSegmentGroup(
            this.injector,
            this.config,
            n.root,
            he
          ).pipe(
            Fo((i) => {
              throw i instanceof ku ? this.noMatchError(i) : i;
            })
          );
        }
        inheritParamsAndData(n) {
          const e = n.value,
            i = jS(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(i.params)),
            (e.data = Object.freeze(i.data)),
            n.children.forEach((o) => this.inheritParamsAndData(o));
        }
        processSegmentGroup(n, e, i, o) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.processChildren(n, e, i)
            : this.processSegment(n, e, i, i.segments, o, !0);
        }
        processChildren(n, e, i) {
          const o = [];
          for (const r of Object.keys(i.children))
            "primary" === r ? o.unshift(r) : o.push(r);
          return gt(o).pipe(
            Jr((r) => {
              const s = i.children[r],
                a = (function Z$(t, n) {
                  const e = t.filter((i) => Zn(i) === n);
                  return e.push(...t.filter((i) => Zn(i) !== n)), e;
                })(e, r);
              return this.processSegmentGroup(n, a, s, r);
            }),
            (function Zz(t, n) {
              return ft(
                (function qz(t, n, e, i, o) {
                  return (r, s) => {
                    let a = e,
                      l = n,
                      c = 0;
                    r.subscribe(
                      ut(
                        s,
                        (u) => {
                          const h = c++;
                          (l = a ? t(l, u, h) : ((a = !0), u)), i && s.next(l);
                        },
                        o &&
                          (() => {
                            a && s.next(l), s.complete();
                          })
                      )
                    );
                  };
                })(t, n, arguments.length >= 2, !0)
              );
            })((r, s) => (r.push(...s), r)),
            vu(null),
            (function Yz(t, n) {
              const e = arguments.length >= 2;
              return (i) =>
                i.pipe(
                  t ? Fi((o, r) => t(o, r, i)) : Vi,
                  vg(1),
                  e ? vu(n) : yS(() => new yu())
                );
            })(),
            Et((r) => {
              if (null === r) return ss(i);
              const s = oI(r);
              return (
                (function Aj(t) {
                  t.sort((n, e) =>
                    n.value.outlet === he
                      ? -1
                      : e.value.outlet === he
                      ? 1
                      : n.value.outlet.localeCompare(e.value.outlet)
                  );
                })(s),
                oe(s)
              );
            })
          );
        }
        processSegment(n, e, i, o, r, s) {
          return gt(e).pipe(
            Jr((a) =>
              this.processSegmentAgainstRoute(
                a._injector ?? n,
                e,
                a,
                i,
                o,
                r,
                s
              ).pipe(
                Fo((l) => {
                  if (l instanceof ku) return oe(null);
                  throw l;
                })
              )
            ),
            Ro((a) => !!a),
            Fo((a) => {
              if (XS(a))
                return (function xj(t, n, e) {
                  return 0 === n.length && !t.children[e];
                })(i, o, r)
                  ? oe([])
                  : ss(i);
              throw a;
            })
          );
        }
        processSegmentAgainstRoute(n, e, i, o, r, s, a) {
          return (function Ej(t, n, e, i) {
            return (
              !!(Zn(t) === i || (i !== he && Ru(n, e, t))) &&
              ("**" === t.path || Lg(n, t, e).matched)
            );
          })(i, o, r, s)
            ? void 0 === i.redirectTo
              ? this.matchSegmentAgainstRoute(n, o, i, r, s, a)
              : a && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(n, o, e, i, r, s)
              : ss(o)
            : ss(o);
        }
        expandSegmentAgainstRouteUsingRedirect(n, e, i, o, r, s) {
          return "**" === o.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(n, i, o, s)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                n,
                e,
                i,
                o,
                r,
                s
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(n, e, i, o) {
          const r = this.applyRedirects.applyRedirectCommands(
            [],
            i.redirectTo,
            {}
          );
          return i.redirectTo.startsWith("/")
            ? nI(r)
            : this.applyRedirects.lineralizeSegments(i, r).pipe(
                Et((s) => {
                  const a = new Ne(s, {});
                  return this.processSegment(n, e, a, s, o, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(n, e, i, o, r, s) {
          const {
            matched: a,
            consumedSegments: l,
            remainingSegments: c,
            positionalParamSegments: u,
          } = Lg(e, o, r);
          if (!a) return ss(e);
          const h = this.applyRedirects.applyRedirectCommands(
            l,
            o.redirectTo,
            u
          );
          return o.redirectTo.startsWith("/")
            ? nI(h)
            : this.applyRedirects
                .lineralizeSegments(o, h)
                .pipe(
                  Et((m) => this.processSegment(n, i, e, m.concat(c), s, !1))
                );
        }
        matchSegmentAgainstRoute(n, e, i, o, r, s) {
          let a;
          if ("**" === i.path) {
            const l = o.length > 0 ? bS(o).parameters : {};
            (a = oe({
              snapshot: new xu(
                o,
                l,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                rI(i),
                Zn(i),
                i.component ?? i._loadedComponent ?? null,
                i,
                sI(i)
              ),
              consumedSegments: [],
              remainingSegments: [],
            })),
              (e.children = {});
          } else
            a = wj(e, i, o, n).pipe(
              Ie(
                ({
                  matched: l,
                  consumedSegments: c,
                  remainingSegments: u,
                  parameters: h,
                }) =>
                  l
                    ? {
                        snapshot: new xu(
                          c,
                          h,
                          Object.freeze({ ...this.urlTree.queryParams }),
                          this.urlTree.fragment,
                          rI(i),
                          Zn(i),
                          i.component ?? i._loadedComponent ?? null,
                          i,
                          sI(i)
                        ),
                        consumedSegments: c,
                        remainingSegments: u,
                      }
                    : null
              )
            );
          return a.pipe(
            Tn((l) =>
              null === l
                ? ss(e)
                : this.getChildConfig((n = i._injector ?? n), i, o).pipe(
                    Tn(({ routes: c }) => {
                      const u = i._loadedInjector ?? n,
                        {
                          snapshot: h,
                          consumedSegments: m,
                          remainingSegments: _,
                        } = l,
                        { segmentGroup: b, slicedSegments: C } = iI(e, m, _, c);
                      if (0 === C.length && b.hasChildren())
                        return this.processChildren(u, c, b).pipe(
                          Ie((M) => (null === M ? null : [new Li(h, M)]))
                        );
                      if (0 === c.length && 0 === C.length)
                        return oe([new Li(h, [])]);
                      const I = Zn(i) === r;
                      return this.processSegment(
                        u,
                        c,
                        b,
                        C,
                        I ? he : r,
                        !0
                      ).pipe(Ie((M) => [new Li(h, M)]));
                    })
                  )
            )
          );
        }
        getChildConfig(n, e, i) {
          return e.children
            ? oe({ routes: e.children, injector: n })
            : e.loadChildren
            ? void 0 !== e._loadedRoutes
              ? oe({ routes: e._loadedRoutes, injector: e._loadedInjector })
              : (function _j(t, n, e, i) {
                  const o = n.canLoad;
                  return void 0 === o || 0 === o.length
                    ? oe(!0)
                    : oe(
                        o.map((s) => {
                          const a = os(s, t);
                          return so(
                            (function ij(t) {
                              return t && Ua(t.canLoad);
                            })(a)
                              ? a.canLoad(n, e)
                              : t.runInContext(() => a(n, e))
                          );
                        })
                      ).pipe(rs(), eI());
                })(n, e, i).pipe(
                  Et((o) =>
                    o
                      ? this.configLoader.loadChildren(n, e).pipe(
                          $t((r) => {
                            (e._loadedRoutes = r.routes),
                              (e._loadedInjector = r.injector);
                          })
                        )
                      : (function bj(t) {
                          return Ma(ZS(!1, 3));
                        })()
                  )
                )
            : oe({ routes: [], injector: n });
        }
      }
      function kj(t) {
        const n = t.value.routeConfig;
        return n && "" === n.path;
      }
      function oI(t) {
        const n = [],
          e = new Set();
        for (const i of t) {
          if (!kj(i)) {
            n.push(i);
            continue;
          }
          const o = n.find((r) => i.value.routeConfig === r.value.routeConfig);
          void 0 !== o ? (o.children.push(...i.children), e.add(o)) : n.push(i);
        }
        for (const i of e) {
          const o = oI(i.children);
          n.push(new Li(i.value, o));
        }
        return n.filter((i) => !e.has(i));
      }
      function rI(t) {
        return t.data || {};
      }
      function sI(t) {
        return t.resolve || {};
      }
      function aI(t) {
        return "string" == typeof t.title || null === t.title;
      }
      function Pg(t) {
        return Tn((n) => {
          const e = t(n);
          return e ? gt(e).pipe(Ie(() => n)) : oe(n);
        });
      }
      const as = new G("ROUTES");
      let Ng = (() => {
        class t {
          constructor() {
            (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap()),
              (this.compiler = U(tC));
          }
          loadComponent(e) {
            if (this.componentLoaders.get(e))
              return this.componentLoaders.get(e);
            if (e._loadedComponent) return oe(e._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(e);
            const i = so(e.loadComponent()).pipe(
                Ie(lI),
                $t((r) => {
                  this.onLoadEndListener && this.onLoadEndListener(e),
                    (e._loadedComponent = r);
                }),
                Oa(() => {
                  this.componentLoaders.delete(e);
                })
              ),
              o = new _S(i, () => new ct()).pipe(yg());
            return this.componentLoaders.set(e, o), o;
          }
          loadChildren(e, i) {
            if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
            if (i._loadedRoutes)
              return oe({
                routes: i._loadedRoutes,
                injector: i._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(i);
            const r = (function Bj(t, n, e, i) {
                return so(t.loadChildren()).pipe(
                  Ie(lI),
                  Et((o) =>
                    o instanceof ub || Array.isArray(o)
                      ? oe(o)
                      : gt(n.compileModuleAsync(o))
                  ),
                  Ie((o) => {
                    i && i(t);
                    let r,
                      s,
                      a = !1;
                    return (
                      Array.isArray(o)
                        ? ((s = o), !0)
                        : ((r = o.create(e).injector),
                          (s = r
                            .get(as, [], { optional: !0, self: !0 })
                            .flat())),
                      { routes: s.map(Rg), injector: r }
                    );
                  })
                );
              })(i, this.compiler, e, this.onLoadEndListener).pipe(
                Oa(() => {
                  this.childrenLoaders.delete(i);
                })
              ),
              s = new _S(r, () => new ct()).pipe(yg());
            return this.childrenLoaders.set(i, s), s;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function lI(t) {
        return (function Hj(t) {
          return t && "object" == typeof t && "default" in t;
        })(t)
          ? t.default
          : t;
      }
      let Fu = (() => {
        class t {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.currentTransition = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new ct()),
              (this.transitionAbortSubject = new ct()),
              (this.configLoader = U(Ng)),
              (this.environmentInjector = U(gn)),
              (this.urlSerializer = U(Ra)),
              (this.rootContexts = U(Ba)),
              (this.inputBindingEnabled = null !== U(Mu, { optional: !0 })),
              (this.navigationId = 0),
              (this.afterPreactivation = () => oe(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = (o) =>
                this.events.next(new k$(o))),
              (this.configLoader.onLoadStartListener = (o) =>
                this.events.next(new A$(o)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(e) {
            const i = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...e, id: i });
          }
          setupNavigations(e, i, o) {
            return (
              (this.transitions = new wn({
                id: 0,
                currentUrlTree: i,
                currentRawUrl: i,
                currentBrowserUrl: i,
                extractedUrl: e.urlHandlingStrategy.extract(i),
                urlAfterRedirects: e.urlHandlingStrategy.extract(i),
                rawUrl: i,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: Na,
                restoredState: null,
                currentSnapshot: o.snapshot,
                targetSnapshot: null,
                currentRouterState: o,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                Fi((r) => 0 !== r.id),
                Ie((r) => ({
                  ...r,
                  extractedUrl: e.urlHandlingStrategy.extract(r.rawUrl),
                })),
                Tn((r) => {
                  this.currentTransition = r;
                  let s = !1,
                    a = !1;
                  return oe(r).pipe(
                    $t((l) => {
                      this.currentNavigation = {
                        id: l.id,
                        initialUrl: l.rawUrl,
                        extractedUrl: l.extractedUrl,
                        trigger: l.source,
                        extras: l.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    Tn((l) => {
                      const c = l.currentBrowserUrl.toString(),
                        u =
                          !e.navigated ||
                          l.extractedUrl.toString() !== c ||
                          c !== l.currentUrlTree.toString();
                      if (
                        !u &&
                        "reload" !==
                          (l.extras.onSameUrlNavigation ??
                            e.onSameUrlNavigation)
                      ) {
                        const m = "";
                        return (
                          this.events.next(
                            new ts(
                              l.id,
                              this.urlSerializer.serialize(l.rawUrl),
                              m,
                              0
                            )
                          ),
                          l.resolve(null),
                          Qn
                        );
                      }
                      if (e.urlHandlingStrategy.shouldProcessUrl(l.rawUrl))
                        return oe(l).pipe(
                          Tn((m) => {
                            const _ = this.transitions?.getValue();
                            return (
                              this.events.next(
                                new Du(
                                  m.id,
                                  this.urlSerializer.serialize(m.extractedUrl),
                                  m.source,
                                  m.restoredState
                                )
                              ),
                              _ !== this.transitions?.getValue()
                                ? Qn
                                : Promise.resolve(m)
                            );
                          }),
                          (function Rj(t, n, e, i, o, r) {
                            return Et((s) =>
                              (function Mj(t, n, e, i, o, r, s = "emptyOnly") {
                                return new Oj(t, n, e, i, o, s, r).recognize();
                              })(t, n, e, i, s.extractedUrl, o, r).pipe(
                                Ie(({ state: a, tree: l }) => ({
                                  ...s,
                                  targetSnapshot: a,
                                  urlAfterRedirects: l,
                                }))
                              )
                            );
                          })(
                            this.environmentInjector,
                            this.configLoader,
                            this.rootComponentType,
                            e.config,
                            this.urlSerializer,
                            e.paramsInheritanceStrategy
                          ),
                          $t((m) => {
                            (r.targetSnapshot = m.targetSnapshot),
                              (r.urlAfterRedirects = m.urlAfterRedirects),
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: m.urlAfterRedirects,
                              });
                            const _ = new VS(
                              m.id,
                              this.urlSerializer.serialize(m.extractedUrl),
                              this.urlSerializer.serialize(m.urlAfterRedirects),
                              m.targetSnapshot
                            );
                            this.events.next(_);
                          })
                        );
                      if (
                        u &&
                        e.urlHandlingStrategy.shouldProcessUrl(l.currentRawUrl)
                      ) {
                        const {
                            id: m,
                            extractedUrl: _,
                            source: b,
                            restoredState: C,
                            extras: I,
                          } = l,
                          M = new Du(m, this.urlSerializer.serialize(_), b, C);
                        this.events.next(M);
                        const E = $S(0, this.rootComponentType).snapshot;
                        return (
                          (this.currentTransition = r =
                            {
                              ...l,
                              targetSnapshot: E,
                              urlAfterRedirects: _,
                              extras: {
                                ...I,
                                skipLocationChange: !1,
                                replaceUrl: !1,
                              },
                            }),
                          oe(r)
                        );
                      }
                      {
                        const m = "";
                        return (
                          this.events.next(
                            new ts(
                              l.id,
                              this.urlSerializer.serialize(l.extractedUrl),
                              m,
                              1
                            )
                          ),
                          l.resolve(null),
                          Qn
                        );
                      }
                    }),
                    $t((l) => {
                      const c = new E$(
                        l.id,
                        this.urlSerializer.serialize(l.extractedUrl),
                        this.urlSerializer.serialize(l.urlAfterRedirects),
                        l.targetSnapshot
                      );
                      this.events.next(c);
                    }),
                    Ie(
                      (l) => (
                        (this.currentTransition = r =
                          {
                            ...l,
                            guards: J$(
                              l.targetSnapshot,
                              l.currentSnapshot,
                              this.rootContexts
                            ),
                          }),
                        r
                      )
                    ),
                    (function cj(t, n) {
                      return Et((e) => {
                        const {
                          targetSnapshot: i,
                          currentSnapshot: o,
                          guards: {
                            canActivateChecks: r,
                            canDeactivateChecks: s,
                          },
                        } = e;
                        return 0 === s.length && 0 === r.length
                          ? oe({ ...e, guardsResult: !0 })
                          : (function uj(t, n, e, i) {
                              return gt(t).pipe(
                                Et((o) =>
                                  (function mj(t, n, e, i, o) {
                                    const r =
                                      n && n.routeConfig
                                        ? n.routeConfig.canDeactivate
                                        : null;
                                    return r && 0 !== r.length
                                      ? oe(
                                          r.map((a) => {
                                            const l = za(n) ?? o,
                                              c = os(a, l);
                                            return so(
                                              (function sj(t) {
                                                return t && Ua(t.canDeactivate);
                                              })(c)
                                                ? c.canDeactivate(t, n, e, i)
                                                : l.runInContext(() =>
                                                    c(t, n, e, i)
                                                  )
                                            ).pipe(Ro());
                                          })
                                        ).pipe(rs())
                                      : oe(!0);
                                  })(o.component, o.route, e, n, i)
                                ),
                                Ro((o) => !0 !== o, !0)
                              );
                            })(s, i, o, t).pipe(
                              Et((a) =>
                                a &&
                                (function nj(t) {
                                  return "boolean" == typeof t;
                                })(a)
                                  ? (function dj(t, n, e, i) {
                                      return gt(n).pipe(
                                        Jr((o) =>
                                          _g(
                                            (function hj(t, n) {
                                              return (
                                                null !== t && n && n(new R$(t)),
                                                oe(!0)
                                              );
                                            })(o.route.parent, i),
                                            (function pj(t, n) {
                                              return (
                                                null !== t && n && n(new L$(t)),
                                                oe(!0)
                                              );
                                            })(o.route, i),
                                            (function gj(t, n, e) {
                                              const i = n[n.length - 1],
                                                r = n
                                                  .slice(0, n.length - 1)
                                                  .reverse()
                                                  .map((s) =>
                                                    (function X$(t) {
                                                      const n = t.routeConfig
                                                        ? t.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return n && 0 !== n.length
                                                        ? { node: t, guards: n }
                                                        : null;
                                                    })(s)
                                                  )
                                                  .filter((s) => null !== s)
                                                  .map((s) =>
                                                    mS(() =>
                                                      oe(
                                                        s.guards.map((l) => {
                                                          const c =
                                                              za(s.node) ?? e,
                                                            u = os(l, c);
                                                          return so(
                                                            (function rj(t) {
                                                              return (
                                                                t &&
                                                                Ua(
                                                                  t.canActivateChild
                                                                )
                                                              );
                                                            })(u)
                                                              ? u.canActivateChild(
                                                                  i,
                                                                  t
                                                                )
                                                              : c.runInContext(
                                                                  () => u(i, t)
                                                                )
                                                          ).pipe(Ro());
                                                        })
                                                      ).pipe(rs())
                                                    )
                                                  );
                                              return oe(r).pipe(rs());
                                            })(t, o.path, e),
                                            (function fj(t, n, e) {
                                              const i = n.routeConfig
                                                ? n.routeConfig.canActivate
                                                : null;
                                              if (!i || 0 === i.length)
                                                return oe(!0);
                                              const o = i.map((r) =>
                                                mS(() => {
                                                  const s = za(n) ?? e,
                                                    a = os(r, s);
                                                  return so(
                                                    (function oj(t) {
                                                      return (
                                                        t && Ua(t.canActivate)
                                                      );
                                                    })(a)
                                                      ? a.canActivate(n, t)
                                                      : s.runInContext(() =>
                                                          a(n, t)
                                                        )
                                                  ).pipe(Ro());
                                                })
                                              );
                                              return oe(o).pipe(rs());
                                            })(t, o.route, e)
                                          )
                                        ),
                                        Ro((o) => !0 !== o, !0)
                                      );
                                    })(i, r, t, n)
                                  : oe(a)
                              ),
                              Ie((a) => ({ ...e, guardsResult: a }))
                            );
                      });
                    })(this.environmentInjector, (l) => this.events.next(l)),
                    $t((l) => {
                      if (
                        ((r.guardsResult = l.guardsResult), Po(l.guardsResult))
                      )
                        throw qS(0, l.guardsResult);
                      const c = new x$(
                        l.id,
                        this.urlSerializer.serialize(l.extractedUrl),
                        this.urlSerializer.serialize(l.urlAfterRedirects),
                        l.targetSnapshot,
                        !!l.guardsResult
                      );
                      this.events.next(c);
                    }),
                    Fi(
                      (l) =>
                        !!l.guardsResult ||
                        (this.cancelNavigationTransition(l, "", 3), !1)
                    ),
                    Pg((l) => {
                      if (l.guards.canActivateChecks.length)
                        return oe(l).pipe(
                          $t((c) => {
                            const u = new M$(
                              c.id,
                              this.urlSerializer.serialize(c.extractedUrl),
                              this.urlSerializer.serialize(c.urlAfterRedirects),
                              c.targetSnapshot
                            );
                            this.events.next(u);
                          }),
                          Tn((c) => {
                            let u = !1;
                            return oe(c).pipe(
                              (function Fj(t, n) {
                                return Et((e) => {
                                  const {
                                    targetSnapshot: i,
                                    guards: { canActivateChecks: o },
                                  } = e;
                                  if (!o.length) return oe(e);
                                  let r = 0;
                                  return gt(o).pipe(
                                    Jr((s) =>
                                      (function Lj(t, n, e, i) {
                                        const o = t.routeConfig,
                                          r = t._resolve;
                                        return (
                                          void 0 !== o?.title &&
                                            !aI(o) &&
                                            (r[Aa] = o.title),
                                          (function Pj(t, n, e, i) {
                                            const o = (function Nj(t) {
                                              return [
                                                ...Object.keys(t),
                                                ...Object.getOwnPropertySymbols(
                                                  t
                                                ),
                                              ];
                                            })(t);
                                            if (0 === o.length) return oe({});
                                            const r = {};
                                            return gt(o).pipe(
                                              Et((s) =>
                                                (function Vj(t, n, e, i) {
                                                  const o = za(n) ?? i,
                                                    r = os(t, o);
                                                  return so(
                                                    r.resolve
                                                      ? r.resolve(n, e)
                                                      : o.runInContext(() =>
                                                          r(n, e)
                                                        )
                                                  );
                                                })(t[s], n, e, i).pipe(
                                                  Ro(),
                                                  $t((a) => {
                                                    r[s] = a;
                                                  })
                                                )
                                              ),
                                              vg(1),
                                              (function Qz(t) {
                                                return Ie(() => t);
                                              })(r),
                                              Fo((s) => (XS(s) ? Qn : Ma(s)))
                                            );
                                          })(r, t, n, i).pipe(
                                            Ie(
                                              (s) => (
                                                (t._resolvedData = s),
                                                (t.data = jS(t, e).resolve),
                                                o &&
                                                  aI(o) &&
                                                  (t.data[Aa] = o.title),
                                                null
                                              )
                                            )
                                          )
                                        );
                                      })(s.route, i, t, n)
                                    ),
                                    $t(() => r++),
                                    vg(1),
                                    Et((s) => (r === o.length ? oe(e) : Qn))
                                  );
                                });
                              })(
                                e.paramsInheritanceStrategy,
                                this.environmentInjector
                              ),
                              $t({
                                next: () => (u = !0),
                                complete: () => {
                                  u ||
                                    this.cancelNavigationTransition(c, "", 2);
                                },
                              })
                            );
                          }),
                          $t((c) => {
                            const u = new O$(
                              c.id,
                              this.urlSerializer.serialize(c.extractedUrl),
                              this.urlSerializer.serialize(c.urlAfterRedirects),
                              c.targetSnapshot
                            );
                            this.events.next(u);
                          })
                        );
                    }),
                    Pg((l) => {
                      const c = (u) => {
                        const h = [];
                        u.routeConfig?.loadComponent &&
                          !u.routeConfig._loadedComponent &&
                          h.push(
                            this.configLoader.loadComponent(u.routeConfig).pipe(
                              $t((m) => {
                                u.component = m;
                              }),
                              Ie(() => {})
                            )
                          );
                        for (const m of u.children) h.push(...c(m));
                        return h;
                      };
                      return mg(c(l.targetSnapshot.root)).pipe(vu(), Qr(1));
                    }),
                    Pg(() => this.afterPreactivation()),
                    Ie((l) => {
                      const c = (function z$(t, n, e) {
                        const i = Ha(t, n._root, e ? e._root : void 0);
                        return new zS(i, n);
                      })(
                        e.routeReuseStrategy,
                        l.targetSnapshot,
                        l.currentRouterState
                      );
                      return (
                        (this.currentTransition = r =
                          { ...l, targetRouterState: c }),
                        r
                      );
                    }),
                    $t(() => {
                      this.events.next(new Ig());
                    }),
                    ((t, n, e, i) =>
                      Ie(
                        (o) => (
                          new Q$(
                            n,
                            o.targetRouterState,
                            o.currentRouterState,
                            e,
                            i
                          ).activate(t),
                          o
                        )
                      ))(
                      this.rootContexts,
                      e.routeReuseStrategy,
                      (l) => this.events.next(l),
                      this.inputBindingEnabled
                    ),
                    Qr(1),
                    $t({
                      next: (l) => {
                        (s = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          this.events.next(
                            new ao(
                              l.id,
                              this.urlSerializer.serialize(l.extractedUrl),
                              this.urlSerializer.serialize(l.urlAfterRedirects)
                            )
                          ),
                          e.titleStrategy?.updateTitle(
                            l.targetRouterState.snapshot
                          ),
                          l.resolve(!0);
                      },
                      complete: () => {
                        s = !0;
                      },
                    }),
                    (function Jz(t) {
                      return ft((n, e) => {
                        un(t).subscribe(ut(e, () => e.complete(), id)),
                          !e.closed && n.subscribe(e);
                      });
                    })(
                      this.transitionAbortSubject.pipe(
                        $t((l) => {
                          throw l;
                        })
                      )
                    ),
                    Oa(() => {
                      s || a || this.cancelNavigationTransition(r, "", 1),
                        this.currentNavigation?.id === r.id &&
                          (this.currentNavigation = null);
                    }),
                    Fo((l) => {
                      if (((a = !0), YS(l)))
                        this.events.next(
                          new Va(
                            r.id,
                            this.urlSerializer.serialize(r.extractedUrl),
                            l.message,
                            l.cancellationCode
                          )
                        ),
                          (function U$(t) {
                            return YS(t) && Po(t.url);
                          })(l)
                            ? this.events.next(new Dg(l.url))
                            : r.resolve(!1);
                      else {
                        this.events.next(
                          new Eu(
                            r.id,
                            this.urlSerializer.serialize(r.extractedUrl),
                            l,
                            r.targetSnapshot ?? void 0
                          )
                        );
                        try {
                          r.resolve(e.errorHandler(l));
                        } catch (c) {
                          r.reject(c);
                        }
                      }
                      return Qn;
                    })
                  );
                })
              )
            );
          }
          cancelNavigationTransition(e, i, o) {
            const r = new Va(
              e.id,
              this.urlSerializer.serialize(e.extractedUrl),
              i,
              o
            );
            this.events.next(r), e.resolve(!1);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function cI(t) {
        return t !== Na;
      }
      let uI = (() => {
          class t {
            buildTitle(e) {
              let i,
                o = e.root;
              for (; void 0 !== o; )
                (i = this.getResolvedTitleForRoute(o) ?? i),
                  (o = o.children.find((r) => r.outlet === he));
              return i;
            }
            getResolvedTitleForRoute(e) {
              return e.data[Aa];
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: function () {
                return U(zj);
              },
              providedIn: "root",
            }));
          }
          return t;
        })(),
        zj = (() => {
          class t extends uI {
            constructor(e) {
              super(), (this.title = e);
            }
            updateTitle(e) {
              const i = this.buildTitle(e);
              void 0 !== i && this.title.setTitle(i);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)(W(ww));
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })(),
        $j = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: function () {
                return U(Uj);
              },
              providedIn: "root",
            }));
          }
          return t;
        })();
      class jj {
        shouldDetach(n) {
          return !1;
        }
        store(n, e) {}
        shouldAttach(n) {
          return !1;
        }
        retrieve(n) {
          return null;
        }
        shouldReuseRoute(n, e) {
          return n.routeConfig === e.routeConfig;
        }
      }
      let Uj = (() => {
        class t extends jj {
          static #e = (this.ɵfac = (function () {
            let e;
            return function (o) {
              return (e || (e = fe(t)))(o || t);
            };
          })());
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const Lu = new G("", { providedIn: "root", factory: () => ({}) });
      let Gj = (() => {
          class t {
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: function () {
                return U(Wj);
              },
              providedIn: "root",
            }));
          }
          return t;
        })(),
        Wj = (() => {
          class t {
            shouldProcessUrl(e) {
              return !0;
            }
            extract(e) {
              return e;
            }
            merge(e, i) {
              return e;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = K({
              token: t,
              factory: t.ɵfac,
              providedIn: "root",
            }));
          }
          return t;
        })();
      var Ga = (function (t) {
        return (
          (t[(t.COMPLETE = 0)] = "COMPLETE"),
          (t[(t.FAILED = 1)] = "FAILED"),
          (t[(t.REDIRECTING = 2)] = "REDIRECTING"),
          t
        );
      })(Ga || {});
      function dI(t, n) {
        t.events
          .pipe(
            Fi(
              (e) =>
                e instanceof ao ||
                e instanceof Va ||
                e instanceof Eu ||
                e instanceof ts
            ),
            Ie((e) =>
              e instanceof ao || e instanceof ts
                ? Ga.COMPLETE
                : e instanceof Va && (0 === e.code || 1 === e.code)
                ? Ga.REDIRECTING
                : Ga.FAILED
            ),
            Fi((e) => e !== Ga.REDIRECTING),
            Qr(1)
          )
          .subscribe(() => {
            n();
          });
      }
      function Kj(t) {
        throw t;
      }
      function qj(t, n, e) {
        return n.parse("/");
      }
      const Zj = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        Yj = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let Nn = (() => {
        class t {
          get navigationId() {
            return this.navigationTransitions.navigationId;
          }
          get browserPageId() {
            return "computed" !== this.canceledNavigationResolution
              ? this.currentPageId
              : this.location.getState()?.ɵrouterPageId ?? this.currentPageId;
          }
          get events() {
            return this._events;
          }
          constructor() {
            (this.disposed = !1),
              (this.currentPageId = 0),
              (this.console = U(eC)),
              (this.isNgZoneEnabled = !1),
              (this._events = new ct()),
              (this.options = U(Lu, { optional: !0 }) || {}),
              (this.pendingTasks = U(Oc)),
              (this.errorHandler = this.options.errorHandler || Kj),
              (this.malformedUriErrorHandler =
                this.options.malformedUriErrorHandler || qj),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.urlHandlingStrategy = U(Gj)),
              (this.routeReuseStrategy = U($j)),
              (this.titleStrategy = U(uI)),
              (this.onSameUrlNavigation =
                this.options.onSameUrlNavigation || "ignore"),
              (this.paramsInheritanceStrategy =
                this.options.paramsInheritanceStrategy || "emptyOnly"),
              (this.urlUpdateStrategy =
                this.options.urlUpdateStrategy || "deferred"),
              (this.canceledNavigationResolution =
                this.options.canceledNavigationResolution || "replace"),
              (this.config = U(as, { optional: !0 })?.flat() ?? []),
              (this.navigationTransitions = U(Fu)),
              (this.urlSerializer = U(Ra)),
              (this.location = U(uf)),
              (this.componentInputBindingEnabled = !!U(Mu, { optional: !0 })),
              (this.eventsSubscription = new cn()),
              (this.isNgZoneEnabled =
                U(_e) instanceof _e && _e.isInAngularZone()),
              this.resetConfig(this.config),
              (this.currentUrlTree = new es()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = $S(0, null)),
              this.navigationTransitions
                .setupNavigations(this, this.currentUrlTree, this.routerState)
                .subscribe(
                  (e) => {
                    (this.lastSuccessfulId = e.id),
                      (this.currentPageId = this.browserPageId);
                  },
                  (e) => {
                    this.console.warn(`Unhandled Navigation Error: ${e}`);
                  }
                ),
              this.subscribeToNavigationEvents();
          }
          subscribeToNavigationEvents() {
            const e = this.navigationTransitions.events.subscribe((i) => {
              try {
                const { currentTransition: o } = this.navigationTransitions;
                if (null === o) return void (pI(i) && this._events.next(i));
                if (i instanceof Du)
                  cI(o.source) && (this.browserUrlTree = o.extractedUrl);
                else if (i instanceof ts) this.rawUrlTree = o.rawUrl;
                else if (i instanceof VS) {
                  if ("eager" === this.urlUpdateStrategy) {
                    if (!o.extras.skipLocationChange) {
                      const r = this.urlHandlingStrategy.merge(
                        o.urlAfterRedirects,
                        o.rawUrl
                      );
                      this.setBrowserUrl(r, o);
                    }
                    this.browserUrlTree = o.urlAfterRedirects;
                  }
                } else if (i instanceof Ig)
                  (this.currentUrlTree = o.urlAfterRedirects),
                    (this.rawUrlTree = this.urlHandlingStrategy.merge(
                      o.urlAfterRedirects,
                      o.rawUrl
                    )),
                    (this.routerState = o.targetRouterState),
                    "deferred" === this.urlUpdateStrategy &&
                      (o.extras.skipLocationChange ||
                        this.setBrowserUrl(this.rawUrlTree, o),
                      (this.browserUrlTree = o.urlAfterRedirects));
                else if (i instanceof Va)
                  0 !== i.code && 1 !== i.code && (this.navigated = !0),
                    (3 === i.code || 2 === i.code) && this.restoreHistory(o);
                else if (i instanceof Dg) {
                  const r = this.urlHandlingStrategy.merge(
                      i.url,
                      o.currentRawUrl
                    ),
                    s = {
                      skipLocationChange: o.extras.skipLocationChange,
                      replaceUrl:
                        "eager" === this.urlUpdateStrategy || cI(o.source),
                    };
                  this.scheduleNavigation(r, Na, null, s, {
                    resolve: o.resolve,
                    reject: o.reject,
                    promise: o.promise,
                  });
                }
                i instanceof Eu && this.restoreHistory(o, !0),
                  i instanceof ao && (this.navigated = !0),
                  pI(i) && this._events.next(i);
              } catch (o) {
                this.navigationTransitions.transitionAbortSubject.next(o);
              }
            });
            this.eventsSubscription.add(e);
          }
          resetRootComponentType(e) {
            (this.routerState.root.component = e),
              (this.navigationTransitions.rootComponentType = e);
          }
          initialNavigation() {
            if (
              (this.setUpLocationChangeListener(),
              !this.navigationTransitions.hasRequestedNavigation)
            ) {
              const e = this.location.getState();
              this.navigateToSyncWithBrowser(this.location.path(!0), Na, e);
            }
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((e) => {
                const i = "popstate" === e.type ? "popstate" : "hashchange";
                "popstate" === i &&
                  setTimeout(() => {
                    this.navigateToSyncWithBrowser(e.url, i, e.state);
                  }, 0);
              }));
          }
          navigateToSyncWithBrowser(e, i, o) {
            const r = { replaceUrl: !0 },
              s = o?.navigationId ? o : null;
            if (o) {
              const l = { ...o };
              delete l.navigationId,
                delete l.ɵrouterPageId,
                0 !== Object.keys(l).length && (r.state = l);
            }
            const a = this.parseUrl(e);
            this.scheduleNavigation(a, i, s, r);
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.navigationTransitions.currentNavigation;
          }
          get lastSuccessfulNavigation() {
            return this.navigationTransitions.lastSuccessfulNavigation;
          }
          resetConfig(e) {
            (this.config = e.map(Rg)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.navigationTransitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0),
              this.eventsSubscription.unsubscribe();
          }
          createUrlTree(e, i = {}) {
            const {
                relativeTo: o,
                queryParams: r,
                fragment: s,
                queryParamsHandling: a,
                preserveFragment: l,
              } = i,
              c = l ? this.currentUrlTree.fragment : s;
            let h,
              u = null;
            switch (a) {
              case "merge":
                u = { ...this.currentUrlTree.queryParams, ...r };
                break;
              case "preserve":
                u = this.currentUrlTree.queryParams;
                break;
              default:
                u = r || null;
            }
            null !== u && (u = this.removeEmptyProps(u));
            try {
              h = AS(o ? o.snapshot : this.routerState.snapshot.root);
            } catch {
              ("string" != typeof e[0] || !e[0].startsWith("/")) && (e = []),
                (h = this.currentUrlTree.root);
            }
            return kS(h, e, u, c ?? null);
          }
          navigateByUrl(e, i = { skipLocationChange: !1 }) {
            const o = Po(e) ? e : this.parseUrl(e),
              r = this.urlHandlingStrategy.merge(o, this.rawUrlTree);
            return this.scheduleNavigation(r, Na, null, i);
          }
          navigate(e, i = { skipLocationChange: !1 }) {
            return (
              (function Qj(t) {
                for (let n = 0; n < t.length; n++)
                  if (null == t[n]) throw new O(4008, !1);
              })(e),
              this.navigateByUrl(this.createUrlTree(e, i), i)
            );
          }
          serializeUrl(e) {
            return this.urlSerializer.serialize(e);
          }
          parseUrl(e) {
            let i;
            try {
              i = this.urlSerializer.parse(e);
            } catch (o) {
              i = this.malformedUriErrorHandler(o, this.urlSerializer, e);
            }
            return i;
          }
          isActive(e, i) {
            let o;
            if (((o = !0 === i ? { ...Zj } : !1 === i ? { ...Yj } : i), Po(e)))
              return wS(this.currentUrlTree, e, o);
            const r = this.parseUrl(e);
            return wS(this.currentUrlTree, r, o);
          }
          removeEmptyProps(e) {
            return Object.keys(e).reduce((i, o) => {
              const r = e[o];
              return null != r && (i[o] = r), i;
            }, {});
          }
          scheduleNavigation(e, i, o, r, s) {
            if (this.disposed) return Promise.resolve(!1);
            let a, l, c;
            s
              ? ((a = s.resolve), (l = s.reject), (c = s.promise))
              : (c = new Promise((h, m) => {
                  (a = h), (l = m);
                }));
            const u = this.pendingTasks.add();
            return (
              dI(this, () => {
                queueMicrotask(() => this.pendingTasks.remove(u));
              }),
              this.navigationTransitions.handleNavigationRequest({
                source: i,
                restoredState: o,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                currentBrowserUrl: this.browserUrlTree,
                rawUrl: e,
                extras: r,
                resolve: a,
                reject: l,
                promise: c,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              c.catch((h) => Promise.reject(h))
            );
          }
          setBrowserUrl(e, i) {
            const o = this.urlSerializer.serialize(e);
            if (this.location.isCurrentPathEqualTo(o) || i.extras.replaceUrl) {
              const s = {
                ...i.extras.state,
                ...this.generateNgRouterState(i.id, this.browserPageId),
              };
              this.location.replaceState(o, "", s);
            } else {
              const r = {
                ...i.extras.state,
                ...this.generateNgRouterState(i.id, this.browserPageId + 1),
              };
              this.location.go(o, "", r);
            }
          }
          restoreHistory(e, i = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const r = this.currentPageId - this.browserPageId;
              0 !== r
                ? this.location.historyGo(r)
                : this.currentUrlTree ===
                    this.getCurrentNavigation()?.finalUrl &&
                  0 === r &&
                  (this.resetState(e),
                  (this.browserUrlTree = e.currentUrlTree),
                  this.resetUrlToCurrentUrlTree());
            } else
              "replace" === this.canceledNavigationResolution &&
                (i && this.resetState(e), this.resetUrlToCurrentUrlTree());
          }
          resetState(e) {
            (this.routerState = e.currentRouterState),
              (this.currentUrlTree = e.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                e.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          generateNgRouterState(e, i) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: e, ɵrouterPageId: i }
              : { navigationId: e };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      function pI(t) {
        return !(t instanceof Ig || t instanceof Dg);
      }
      class hI {}
      let eU = (() => {
        class t {
          constructor(e, i, o, r, s) {
            (this.router = e),
              (this.injector = o),
              (this.preloadingStrategy = r),
              (this.loader = s);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                Fi((e) => e instanceof ao),
                Jr(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(e, i) {
            const o = [];
            for (const r of i) {
              r.providers &&
                !r._injector &&
                (r._injector = Mh(r.providers, e, `Route: ${r.path}`));
              const s = r._injector ?? e,
                a = r._loadedInjector ?? s;
              ((r.loadChildren && !r._loadedRoutes && void 0 === r.canLoad) ||
                (r.loadComponent && !r._loadedComponent)) &&
                o.push(this.preloadConfig(s, r)),
                (r.children || r._loadedRoutes) &&
                  o.push(this.processRoutes(a, r.children ?? r._loadedRoutes));
            }
            return gt(o).pipe(jo());
          }
          preloadConfig(e, i) {
            return this.preloadingStrategy.preload(i, () => {
              let o;
              o =
                i.loadChildren && void 0 === i.canLoad
                  ? this.loader.loadChildren(e, i)
                  : oe(null);
              const r = o.pipe(
                Et((s) =>
                  null === s
                    ? oe(void 0)
                    : ((i._loadedRoutes = s.routes),
                      (i._loadedInjector = s.injector),
                      this.processRoutes(s.injector ?? e, s.routes))
                )
              );
              return i.loadComponent && !i._loadedComponent
                ? gt([r, this.loader.loadComponent(i)]).pipe(jo())
                : r;
            });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Nn), W(tC), W(gn), W(hI), W(Ng));
          });
          static #t = (this.ɵprov = K({
            token: t,
            factory: t.ɵfac,
            providedIn: "root",
          }));
        }
        return t;
      })();
      const Bg = new G("");
      let fI = (() => {
        class t {
          constructor(e, i, o, r, s = {}) {
            (this.urlSerializer = e),
              (this.transitions = i),
              (this.viewportScroller = o),
              (this.zone = r),
              (this.options = s),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (s.scrollPositionRestoration =
                s.scrollPositionRestoration || "disabled"),
              (s.anchorScrolling = s.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe((e) => {
              e instanceof Du
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = e.navigationTrigger),
                  (this.restoredId = e.restoredState
                    ? e.restoredState.navigationId
                    : 0))
                : e instanceof ao
                ? ((this.lastId = e.id),
                  this.scheduleScrollEvent(
                    e,
                    this.urlSerializer.parse(e.urlAfterRedirects).fragment
                  ))
                : e instanceof ts &&
                  0 === e.code &&
                  ((this.lastSource = void 0),
                  (this.restoredId = 0),
                  this.scheduleScrollEvent(
                    e,
                    this.urlSerializer.parse(e.url).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe((e) => {
              e instanceof BS &&
                (e.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(e.position)
                  : e.anchor && "enabled" === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(e.anchor)
                  : "disabled" !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(e, i) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new BS(
                      e,
                      "popstate" === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      i
                    )
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
          static #e = (this.ɵfac = function (i) {
            !(function X1() {
              throw new Error("invalid");
            })();
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      function Pi(t, n) {
        return { ɵkind: t, ɵproviders: n };
      }
      function mI() {
        const t = U(Nt);
        return (n) => {
          const e = t.get(Yi);
          if (n !== e.components[0]) return;
          const i = t.get(Nn),
            o = t.get(_I);
          1 === t.get(Hg) && i.initialNavigation(),
            t.get(yI, null, ye.Optional)?.setUpPreloading(),
            t.get(Bg, null, ye.Optional)?.init(),
            i.resetRootComponentType(e.componentTypes[0]),
            o.closed || (o.next(), o.complete(), o.unsubscribe());
        };
      }
      const _I = new G("", { factory: () => new ct() }),
        Hg = new G("", { providedIn: "root", factory: () => 1 }),
        yI = new G("");
      function oU(t) {
        return Pi(0, [
          { provide: yI, useExisting: eU },
          { provide: hI, useExisting: t },
        ]);
      }
      const vI = new G("ROUTER_FORROOT_GUARD"),
        sU = [
          uf,
          { provide: Ra, useClass: bg },
          Nn,
          Ba,
          {
            provide: is,
            useFactory: function gI(t) {
              return t.routerState.root;
            },
            deps: [Nn],
          },
          Ng,
          [],
        ];
      function aU() {
        return new lC("Router", Nn);
      }
      let bI = (() => {
        class t {
          constructor(e) {}
          static forRoot(e, i) {
            return {
              ngModule: t,
              providers: [
                sU,
                [],
                { provide: as, multi: !0, useValue: e },
                {
                  provide: vI,
                  useFactory: dU,
                  deps: [[Nn, new Fl(), new Ll()]],
                },
                { provide: Lu, useValue: i || {} },
                i?.useHash
                  ? { provide: xo, useClass: _F }
                  : { provide: xo, useClass: VC },
                {
                  provide: Bg,
                  useFactory: () => {
                    const t = U(FL),
                      n = U(_e),
                      e = U(Lu),
                      i = U(Fu),
                      o = U(Ra);
                    return (
                      e.scrollOffset && t.setOffset(e.scrollOffset),
                      new fI(o, i, t, n, e)
                    );
                  },
                },
                i?.preloadingStrategy
                  ? oU(i.preloadingStrategy).ɵproviders
                  : [],
                { provide: lC, multi: !0, useFactory: aU },
                i?.initialNavigation ? pU(i) : [],
                i?.bindToComponentInputs
                  ? Pi(8, [KS, { provide: Mu, useExisting: KS }]).ɵproviders
                  : [],
                [
                  { provide: CI, useFactory: mI },
                  { provide: Jh, multi: !0, useExisting: CI },
                ],
              ],
            };
          }
          static forChild(e) {
            return {
              ngModule: t,
              providers: [{ provide: as, multi: !0, useValue: e }],
            };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(vI, 8));
          });
          static #t = (this.ɵmod = Re({ type: t }));
          static #n = (this.ɵinj = xe({}));
        }
        return t;
      })();
      function dU(t) {
        return "guarded";
      }
      function pU(t) {
        return [
          "disabled" === t.initialNavigation
            ? Pi(3, [
                {
                  provide: Uh,
                  multi: !0,
                  useFactory: () => {
                    const n = U(Nn);
                    return () => {
                      n.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: Hg, useValue: 2 },
              ]).ɵproviders
            : [],
          "enabledBlocking" === t.initialNavigation
            ? Pi(2, [
                { provide: Hg, useValue: 0 },
                {
                  provide: Uh,
                  multi: !0,
                  deps: [Nt],
                  useFactory: (n) => {
                    const e = n.get(gF, Promise.resolve());
                    return () =>
                      e.then(
                        () =>
                          new Promise((i) => {
                            const o = n.get(Nn),
                              r = n.get(_I);
                            dI(o, () => {
                              i(!0);
                            }),
                              (n.get(Fu).afterPreactivation = () => (
                                i(!0), r.closed ? oe(void 0) : r
                              )),
                              o.initialNavigation();
                          })
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const CI = new G(""),
        fU = [];
      let gU = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵmod = Re({ type: t }));
          static #n = (this.ɵinj = xe({ imports: [bI.forRoot(fU), bI] }));
        }
        return t;
      })();
      function wI(t, n, e, i, o, r, s) {
        try {
          var a = t[r](s),
            l = a.value;
        } catch (c) {
          return void e(c);
        }
        a.done ? n(l) : Promise.resolve(l).then(i, o);
      }
      let _U = (() => {
          class t {
            styleClass;
            style;
            strokeWidth = "2";
            fill = "none";
            animationDuration = "2s";
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-progressSpinner"]],
              hostAttrs: [1, "p-element"],
              inputs: {
                styleClass: "styleClass",
                style: "style",
                strokeWidth: "strokeWidth",
                fill: "fill",
                animationDuration: "animationDuration",
              },
              decls: 3,
              vars: 10,
              consts: [
                [
                  "role",
                  "progressbar",
                  1,
                  "p-progress-spinner",
                  3,
                  "ngStyle",
                  "ngClass",
                ],
                ["viewBox", "25 25 50 50", 1, "p-progress-spinner-svg"],
                [
                  "cx",
                  "50",
                  "cy",
                  "50",
                  "r",
                  "20",
                  "stroke-miterlimit",
                  "10",
                  1,
                  "p-progress-spinner-circle",
                ],
              ],
              template: function (i, o) {
                1 & i &&
                  (y(0, "div", 0),
                  We(),
                  y(1, "svg", 1),
                  k(2, "circle", 2),
                  v()()),
                  2 & i &&
                    (d("ngStyle", o.style)("ngClass", o.styleClass),
                    x("aria-busy", !0)("data-pc-name", "progressspinner")(
                      "data-pc-section",
                      "root"
                    ),
                    g(1),
                    Lr("animation-duration", o.animationDuration),
                    x("data-pc-section", "root"),
                    g(1),
                    x("fill", o.fill)("stroke-width", o.strokeWidth));
              },
              dependencies: [Bt, Xt],
              styles: [
                '@layer primeng{.p-progress-spinner{position:relative;margin:0 auto;width:100px;height:100px;display:inline-block}.p-progress-spinner:before{content:"";display:block;padding-top:100%}.p-progress-spinner-svg{animation:p-progress-spinner-rotate 2s linear infinite;height:100%;transform-origin:center center;width:100%;position:absolute;inset:0;margin:auto}.p-progress-spinner-circle{stroke-dasharray:89,200;stroke-dashoffset:0;stroke:#d62d20;animation:p-progress-spinner-dash 1.5s ease-in-out infinite,p-progress-spinner-color 6s ease-in-out infinite;stroke-linecap:round}}@keyframes p-progress-spinner-rotate{to{transform:rotate(360deg)}}@keyframes p-progress-spinner-dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35px}to{stroke-dasharray:89,200;stroke-dashoffset:-124px}}@keyframes p-progress-spinner-color{to,0%{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            });
          }
          return t;
        })(),
        TI = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt] });
          }
          return t;
        })(),
        yU = (() => {
          class t {
            el;
            ngModel;
            control;
            cd;
            autoResize;
            onResize = new L();
            filled;
            cachedScrollHeight;
            ngModelSubscription;
            ngControlSubscription;
            constructor(e, i, o, r) {
              (this.el = e),
                (this.ngModel = i),
                (this.control = o),
                (this.cd = r);
            }
            ngOnInit() {
              this.ngModel &&
                (this.ngModelSubscription = this.ngModel.valueChanges.subscribe(
                  () => {
                    this.updateState();
                  }
                )),
                this.control &&
                  (this.ngControlSubscription =
                    this.control.valueChanges.subscribe(() => {
                      this.updateState();
                    }));
            }
            ngAfterViewChecked() {
              this.updateState();
            }
            ngAfterViewInit() {
              this.autoResize && this.resize(),
                this.updateFilledState(),
                this.cd.detectChanges();
            }
            onInput(e) {
              this.updateState();
            }
            updateFilledState() {
              this.filled =
                this.el.nativeElement.value &&
                this.el.nativeElement.value.length;
            }
            resize(e) {
              (this.el.nativeElement.style.height = "auto"),
                (this.el.nativeElement.style.height =
                  this.el.nativeElement.scrollHeight + "px"),
                parseFloat(this.el.nativeElement.style.height) >=
                parseFloat(this.el.nativeElement.style.maxHeight)
                  ? ((this.el.nativeElement.style.overflowY = "scroll"),
                    (this.el.nativeElement.style.height =
                      this.el.nativeElement.style.maxHeight))
                  : (this.el.nativeElement.style.overflow = "hidden"),
                this.onResize.emit(e || {});
            }
            updateState() {
              this.updateFilledState(), this.autoResize && this.resize();
            }
            ngOnDestroy() {
              this.ngModelSubscription &&
                this.ngModelSubscription.unsubscribe(),
                this.ngControlSubscription &&
                  this.ngControlSubscription.unsubscribe();
            }
            static ɵfac = function (i) {
              return new (i || t)(D(Fe), D(io, 8), D(ai, 8), D(Ct));
            };
            static ɵdir = Y({
              type: t,
              selectors: [["", "pInputTextarea", ""]],
              hostAttrs: [
                1,
                "p-inputtextarea",
                "p-inputtext",
                "p-component",
                "p-element",
              ],
              hostVars: 4,
              hostBindings: function (i, o) {
                1 & i &&
                  A("input", function (s) {
                    return o.onInput(s);
                  }),
                  2 & i &&
                    On("p-filled", o.filled)(
                      "p-inputtextarea-resizable",
                      o.autoResize
                    );
              },
              inputs: { autoResize: "autoResize" },
              outputs: { onResize: "onResize" },
            });
          }
          return t;
        })(),
        SI = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({ imports: [pt] });
          }
          return t;
        })(),
        II = (() => {
          class t extends Je {
            pathId;
            ngOnInit() {
              this.pathId = "url(#" + zt() + ")";
            }
            static ɵfac = (function () {
              let e;
              return function (o) {
                return (e || (e = fe(t)))(o || t);
              };
            })();
            static ɵcmp = le({
              type: t,
              selectors: [["TimesCircleIcon"]],
              standalone: !0,
              features: [te, Be],
              decls: 6,
              vars: 7,
              consts: [
                [
                  "width",
                  "14",
                  "height",
                  "14",
                  "viewBox",
                  "0 0 14 14",
                  "fill",
                  "none",
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                ],
                [
                  "fill-rule",
                  "evenodd",
                  "clip-rule",
                  "evenodd",
                  "d",
                  "M7 14C5.61553 14 4.26215 13.5895 3.11101 12.8203C1.95987 12.0511 1.06266 10.9579 0.532846 9.67879C0.00303296 8.3997 -0.13559 6.99224 0.134506 5.63437C0.404603 4.2765 1.07129 3.02922 2.05026 2.05026C3.02922 1.07129 4.2765 0.404603 5.63437 0.134506C6.99224 -0.13559 8.3997 0.00303296 9.67879 0.532846C10.9579 1.06266 12.0511 1.95987 12.8203 3.11101C13.5895 4.26215 14 5.61553 14 7C14 8.85652 13.2625 10.637 11.9497 11.9497C10.637 13.2625 8.85652 14 7 14ZM7 1.16667C5.84628 1.16667 4.71846 1.50879 3.75918 2.14976C2.79989 2.79074 2.05222 3.70178 1.61071 4.76768C1.16919 5.83358 1.05367 7.00647 1.27876 8.13803C1.50384 9.26958 2.05941 10.309 2.87521 11.1248C3.69102 11.9406 4.73042 12.4962 5.86198 12.7212C6.99353 12.9463 8.16642 12.8308 9.23232 12.3893C10.2982 11.9478 11.2093 11.2001 11.8502 10.2408C12.4912 9.28154 12.8333 8.15373 12.8333 7C12.8333 5.45291 12.2188 3.96918 11.1248 2.87521C10.0308 1.78125 8.5471 1.16667 7 1.16667ZM4.66662 9.91668C4.58998 9.91704 4.51404 9.90209 4.44325 9.87271C4.37246 9.84333 4.30826 9.8001 4.2544 9.74557C4.14516 9.6362 4.0838 9.48793 4.0838 9.33335C4.0838 9.17876 4.14516 9.0305 4.2544 8.92113L6.17553 7L4.25443 5.07891C4.15139 4.96832 4.09529 4.82207 4.09796 4.67094C4.10063 4.51982 4.16185 4.37563 4.26872 4.26876C4.3756 4.16188 4.51979 4.10066 4.67091 4.09799C4.82204 4.09532 4.96829 4.15142 5.07887 4.25446L6.99997 6.17556L8.92106 4.25446C9.03164 4.15142 9.1779 4.09532 9.32903 4.09799C9.48015 4.10066 9.62434 4.16188 9.73121 4.26876C9.83809 4.37563 9.89931 4.51982 9.90198 4.67094C9.90464 4.82207 9.84855 4.96832 9.74551 5.07891L7.82441 7L9.74554 8.92113C9.85478 9.0305 9.91614 9.17876 9.91614 9.33335C9.91614 9.48793 9.85478 9.6362 9.74554 9.74557C9.69168 9.8001 9.62748 9.84333 9.55669 9.87271C9.4859 9.90209 9.40996 9.91704 9.33332 9.91668C9.25668 9.91704 9.18073 9.90209 9.10995 9.87271C9.03916 9.84333 8.97495 9.8001 8.9211 9.74557L6.99997 7.82444L5.07884 9.74557C5.02499 9.8001 4.96078 9.84333 4.88999 9.87271C4.81921 9.90209 4.74326 9.91704 4.66662 9.91668Z",
                  "fill",
                  "currentColor",
                ],
                [3, "id"],
                ["width", "14", "height", "14", "fill", "white"],
              ],
              template: function (i, o) {
                1 & i &&
                  (We(),
                  y(0, "svg", 0)(1, "g"),
                  k(2, "path", 1),
                  v(),
                  y(3, "defs")(4, "clipPath", 2),
                  k(5, "rect", 3),
                  v()()()),
                  2 & i &&
                    (ne(o.getClassNames()),
                    x("aria-label", o.ariaLabel)("aria-hidden", o.ariaHidden)(
                      "role",
                      o.role
                    ),
                    g(1),
                    x("clip-path", o.pathId),
                    g(3),
                    d("id", o.pathId));
              },
              encapsulation: 2,
            });
          }
          return t;
        })();
      function vU(t, n) {
        1 & t && k(0, "CheckIcon", 7),
          2 & t && (d("styleClass", "p-checkbox-icon"), x("aria-hidden", !0));
      }
      function bU(t, n) {}
      function CU(t, n) {
        1 & t && f(0, bU, 0, 0, "ng-template");
      }
      function wU(t, n) {
        if ((1 & t && (y(0, "span", 8), f(1, CU, 1, 0, null, 9), v()), 2 & t)) {
          const e = p(2);
          x("aria-hidden", !0),
            g(1),
            d("ngTemplateOutlet", e.checkIconTemplate);
        }
      }
      function TU(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, vU, 1, 2, "CheckIcon", 5),
            f(2, wU, 2, 2, "span", 6),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1),
            d("ngIf", !e.checkIconTemplate),
            g(1),
            d("ngIf", e.checkIconTemplate);
        }
      }
      function SU(t, n) {
        if ((1 & t && (y(0, "span"), B(1), v()), 2 & t)) {
          const e = p();
          let i;
          g(1), Le(null !== (i = e.label) && void 0 !== i ? i : "empty");
        }
      }
      function IU(t, n) {
        1 & t && j(0);
      }
      const Wa = function (t) {
          return { height: t };
        },
        DU = function (t, n, e) {
          return {
            "p-multiselect-item": !0,
            "p-highlight": t,
            "p-disabled": n,
            "p-focus": e,
          };
        },
        EU = function (t) {
          return { "p-highlight": t };
        },
        zg = function (t) {
          return { $implicit: t };
        },
        xU = ["container"],
        MU = ["overlay"],
        OU = ["filterInput"],
        AU = ["focusInput"],
        kU = ["items"],
        RU = ["scroller"],
        FU = ["lastHiddenFocusableEl"],
        LU = ["firstHiddenFocusableEl"],
        PU = ["headerCheckbox"];
      function NU(t, n) {
        if ((1 & t && (H(0), B(1), z()), 2 & t)) {
          const e = p(2);
          g(1), Le(e.label() || "empty");
        }
      }
      function VU(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "TimesCircleIcon", 20),
            A("click", function () {
              T(e);
              const o = p(2).$implicit,
                r = p(3);
              return S(r.removeOption(o, r.event));
            }),
            v();
        }
        2 & t &&
          (d("styleClass", "p-multiselect-token-icon"),
          x("data-pc-section", "clearicon")("aria-hidden", !0));
      }
      function BU(t, n) {
        1 & t && j(0);
      }
      function HU(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "span", 21),
            A("click", function () {
              T(e);
              const o = p(2).$implicit,
                r = p(3);
              return S(r.removeOption(o, r.event));
            }),
            f(1, BU, 1, 0, "ng-container", 22),
            v();
        }
        if (2 & t) {
          const e = p(5);
          x("data-pc-section", "clearicon")("aria-hidden", !0),
            g(1),
            d("ngTemplateOutlet", e.removeTokenIconTemplate);
        }
      }
      function zU(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, VU, 1, 3, "TimesCircleIcon", 18),
            f(2, HU, 2, 3, "span", 19),
            z()),
          2 & t)
        ) {
          const e = p(4);
          g(1),
            d("ngIf", !e.removeTokenIconTemplate),
            g(1),
            d("ngIf", e.removeTokenIconTemplate);
        }
      }
      function $U(t, n) {
        if (
          (1 & t &&
            (y(0, "div", 15, 16)(2, "span", 17),
            B(3),
            v(),
            f(4, zU, 3, 2, "ng-container", 7),
            v()),
          2 & t)
        ) {
          const e = n.$implicit,
            i = p(3);
          g(3), Le(i.getLabelByValue(e)), g(1), d("ngIf", !i.disabled);
        }
      }
      function jU(t, n) {
        if ((1 & t && (H(0), B(1), z()), 2 & t)) {
          const e = p(3);
          g(1), Le(e.placeholder || e.defaultLabel || "empty");
        }
      }
      function UU(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, $U, 5, 2, "div", 14),
            f(2, jU, 2, 1, "ng-container", 7),
            z()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngForOf", e.chipSelectedItems()),
            g(1),
            d("ngIf", !e.modelValue() || 0 === e.modelValue().length);
        }
      }
      function GU(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, NU, 2, 1, "ng-container", 7),
            f(2, UU, 3, 2, "ng-container", 7),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1),
            d("ngIf", "comma" === e.display),
            g(1),
            d("ngIf", "chip" === e.display);
        }
      }
      function WU(t, n) {
        1 & t && j(0);
      }
      function KU(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "TimesIcon", 20),
            A("click", function (o) {
              return T(e), S(p(2).clear(o));
            }),
            v();
        }
        2 & t &&
          (d("styleClass", "p-multiselect-clear-icon"),
          x("data-pc-section", "clearicon")("aria-hidden", !0));
      }
      function qU(t, n) {}
      function ZU(t, n) {
        1 & t && f(0, qU, 0, 0, "ng-template");
      }
      function YU(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "span", 24),
            A("click", function (o) {
              return T(e), S(p(2).clear(o));
            }),
            f(1, ZU, 1, 0, null, 22),
            v();
        }
        if (2 & t) {
          const e = p(2);
          x("data-pc-section", "clearicon")("aria-hidden", !0),
            g(1),
            d("ngTemplateOutlet", e.clearIconTemplate);
        }
      }
      function QU(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, KU, 1, 3, "TimesIcon", 18),
            f(2, YU, 2, 3, "span", 23),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1),
            d("ngIf", !e.clearIconTemplate),
            g(1),
            d("ngIf", e.clearIconTemplate);
        }
      }
      function JU(t, n) {
        1 & t && k(0, "span", 27),
          2 & t &&
            (d("ngClass", p(2).dropdownIcon),
            x("data-pc-section", "triggericon")("aria-hidden", !0));
      }
      function XU(t, n) {
        1 & t && k(0, "ChevronDownIcon", 28),
          2 & t &&
            (d("styleClass", "p-multiselect-trigger-icon"),
            x("data-pc-section", "triggericon")("aria-hidden", !0));
      }
      function eG(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, JU, 1, 3, "span", 25),
            f(2, XU, 1, 3, "ChevronDownIcon", 26),
            z()),
          2 & t)
        ) {
          const e = p();
          g(1), d("ngIf", e.dropdownIcon), g(1), d("ngIf", !e.dropdownIcon);
        }
      }
      function tG(t, n) {}
      function nG(t, n) {
        1 & t && f(0, tG, 0, 0, "ng-template");
      }
      function iG(t, n) {
        if (
          (1 & t && (y(0, "span", 29), f(1, nG, 1, 0, null, 22), v()), 2 & t)
        ) {
          const e = p();
          x("data-pc-section", "triggericon")("aria-hidden", !0),
            g(1),
            d("ngTemplateOutlet", e.dropdownIconTemplate);
        }
      }
      function oG(t, n) {
        1 & t && j(0);
      }
      function rG(t, n) {
        1 & t && j(0);
      }
      const DI = function (t) {
        return { options: t };
      };
      function sG(t, n) {
        if ((1 & t && (H(0), f(1, rG, 1, 0, "ng-container", 8), z()), 2 & t)) {
          const e = p(3);
          g(1),
            d("ngTemplateOutlet", e.filterTemplate)(
              "ngTemplateOutletContext",
              Q(2, DI, e.filterOptions)
            );
        }
      }
      function aG(t, n) {
        1 & t && k(0, "CheckIcon", 28),
          2 & t && (d("styleClass", "p-checkbox-icon"), x("aria-hidden", !0));
      }
      function lG(t, n) {}
      function cG(t, n) {
        1 & t && f(0, lG, 0, 0, "ng-template");
      }
      function uG(t, n) {
        if (
          (1 & t && (y(0, "span", 51), f(1, cG, 1, 0, null, 8), v()), 2 & t)
        ) {
          const e = p(6);
          x("aria-hidden", !0),
            g(1),
            d("ngTemplateOutlet", e.checkIconTemplate)(
              "ngTemplateOutletContext",
              Q(3, zg, e.allSelected())
            );
        }
      }
      function dG(t, n) {
        if (
          (1 & t &&
            (H(0),
            f(1, aG, 1, 2, "CheckIcon", 26),
            f(2, uG, 2, 5, "span", 50),
            z()),
          2 & t)
        ) {
          const e = p(5);
          g(1),
            d("ngIf", !e.checkIconTemplate),
            g(1),
            d("ngIf", e.checkIconTemplate);
        }
      }
      const pG = function (t) {
          return { "p-checkbox-disabled": t };
        },
        hG = function (t, n, e) {
          return { "p-highlight": t, "p-focus": n, "p-disabled": e };
        };
      function fG(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 46),
            A("click", function (o) {
              return T(e), S(p(4).onToggleAll(o));
            })("keydown", function (o) {
              return T(e), S(p(4).onHeaderCheckboxKeyDown(o));
            }),
            y(1, "div", 2)(2, "input", 47, 48),
            A("focus", function () {
              return T(e), S(p(4).onHeaderCheckboxFocus());
            })("blur", function () {
              return T(e), S(p(4).onHeaderCheckboxBlur());
            }),
            v()(),
            y(4, "div", 49),
            f(5, dG, 3, 2, "ng-container", 7),
            v()();
        }
        if (2 & t) {
          const e = p(4);
          d("ngClass", Q(9, pG, e.disabled || e.toggleAllDisabled)),
            g(1),
            x("data-p-hidden-accessible", !0),
            g(1),
            d("readonly", e.readonly)(
              "disabled",
              e.disabled || e.toggleAllDisabled
            ),
            x("checked", e.allSelected())("aria-label", e.toggleAllAriaLabel),
            g(2),
            d(
              "ngClass",
              kn(
                11,
                hG,
                e.allSelected(),
                e.headerCheckboxFocus,
                e.disabled || e.toggleAllDisabled
              )
            ),
            x("aria-checked", e.allSelected()),
            g(1),
            d("ngIf", e.allSelected());
        }
      }
      function gG(t, n) {
        1 & t && k(0, "SearchIcon", 28),
          2 & t && d("styleClass", "p-multiselect-filter-icon");
      }
      function mG(t, n) {}
      function _G(t, n) {
        1 & t && f(0, mG, 0, 0, "ng-template");
      }
      function yG(t, n) {
        if (
          (1 & t && (y(0, "span", 56), f(1, _G, 1, 0, null, 22), v()), 2 & t)
        ) {
          const e = p(5);
          g(1), d("ngTemplateOutlet", e.filterIconTemplate);
        }
      }
      function vG(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 52)(1, "input", 53, 54),
            A("input", function (o) {
              return T(e), S(p(4).onFilterInputChange(o));
            })("keydown", function (o) {
              return T(e), S(p(4).onFilterKeyDown(o));
            })("click", function (o) {
              return T(e), S(p(4).onInputClick(o));
            })("blur", function (o) {
              return T(e), S(p(4).onFilterBlur(o));
            }),
            v(),
            f(3, gG, 1, 1, "SearchIcon", 26),
            f(4, yG, 2, 1, "span", 55),
            v();
        }
        if (2 & t) {
          const e = p(4);
          g(1),
            d("value", e._filterValue() || "")("disabled", e.disabled),
            x("autocomplete", e.autocomplete)(
              "placeholder",
              e.filterPlaceHolder
            )("aria-owns", e.id + "_list")(
              "aria-activedescendant",
              e.focusedOptionId
            )("placeholder", e.filterPlaceHolder)(
              "aria-label",
              e.ariaFilterLabel
            ),
            g(2),
            d("ngIf", !e.filterIconTemplate),
            g(1),
            d("ngIf", e.filterIconTemplate);
        }
      }
      function bG(t, n) {
        1 & t && k(0, "TimesIcon", 28),
          2 & t && d("styleClass", "p-multiselect-close-icon");
      }
      function CG(t, n) {}
      function wG(t, n) {
        1 & t && f(0, CG, 0, 0, "ng-template");
      }
      function TG(t, n) {
        if (
          (1 & t && (y(0, "span", 57), f(1, wG, 1, 0, null, 22), v()), 2 & t)
        ) {
          const e = p(4);
          g(1), d("ngTemplateOutlet", e.closeIconTemplate);
        }
      }
      function SG(t, n) {
        if (1 & t) {
          const e = N();
          f(0, fG, 6, 15, "div", 42),
            f(1, vG, 5, 10, "div", 43),
            y(2, "button", 44),
            A("click", function (o) {
              return T(e), S(p(3).close(o));
            }),
            f(3, bG, 1, 1, "TimesIcon", 26),
            f(4, TG, 2, 1, "span", 45),
            v();
        }
        if (2 & t) {
          const e = p(3);
          d("ngIf", e.showToggleAll && !e.selectionLimit),
            g(1),
            d("ngIf", e.filter),
            g(2),
            d("ngIf", !e.closeIconTemplate),
            g(1),
            d("ngIf", e.closeIconTemplate);
        }
      }
      function IG(t, n) {
        if (
          (1 & t &&
            (y(0, "div", 39),
            jn(1),
            f(2, oG, 1, 0, "ng-container", 22),
            f(3, sG, 2, 4, "ng-container", 40),
            f(4, SG, 5, 4, "ng-template", null, 41, Yt),
            v()),
          2 & t)
        ) {
          const e = rt(5),
            i = p(2);
          g(2),
            d("ngTemplateOutlet", i.headerTemplate),
            g(1),
            d("ngIf", i.filterTemplate)("ngIfElse", e);
        }
      }
      function DG(t, n) {
        1 & t && j(0);
      }
      const EI = function (t, n) {
        return { $implicit: t, options: n };
      };
      function EG(t, n) {
        if ((1 & t && f(0, DG, 1, 0, "ng-container", 8), 2 & t)) {
          const e = n.$implicit,
            i = n.options;
          p(2),
            d("ngTemplateOutlet", rt(8))(
              "ngTemplateOutletContext",
              Ze(2, EI, e, i)
            );
        }
      }
      function xG(t, n) {
        1 & t && j(0);
      }
      function MG(t, n) {
        if ((1 & t && f(0, xG, 1, 0, "ng-container", 8), 2 & t)) {
          const e = n.options;
          d("ngTemplateOutlet", p(4).loaderTemplate)(
            "ngTemplateOutletContext",
            Q(2, DI, e)
          );
        }
      }
      function OG(t, n) {
        1 & t && (H(0), f(1, MG, 1, 4, "ng-template", 60), z());
      }
      function AG(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-scroller", 58, 59),
            A("onLazyLoad", function (o) {
              return T(e), S(p(2).onLazyLoad.emit(o));
            }),
            f(2, EG, 1, 5, "ng-template", 13),
            f(3, OG, 2, 0, "ng-container", 7),
            v();
        }
        if (2 & t) {
          const e = p(2);
          bt(Q(9, Wa, e.scrollHeight)),
            d("items", e.visibleOptions())(
              "itemSize",
              e.virtualScrollItemSize || e._itemSize
            )("autoSize", !0)("tabindex", -1)("lazy", e.lazy)(
              "options",
              e.virtualScrollOptions
            ),
            g(3),
            d("ngIf", e.loaderTemplate);
        }
      }
      function kG(t, n) {
        1 & t && j(0);
      }
      const RG = function () {
        return {};
      };
      function FG(t, n) {
        if ((1 & t && (H(0), f(1, kG, 1, 0, "ng-container", 8), z()), 2 & t)) {
          p();
          const e = rt(8),
            i = p();
          g(1),
            d("ngTemplateOutlet", e)(
              "ngTemplateOutletContext",
              Ze(3, EI, i.visibleOptions(), An(2, RG))
            );
        }
      }
      function LG(t, n) {
        if ((1 & t && (y(0, "span"), B(1), v()), 2 & t)) {
          const e = p(2).$implicit,
            i = p(3);
          g(1), Le(i.getOptionGroupLabel(e.optionGroup));
        }
      }
      function PG(t, n) {
        1 & t && j(0);
      }
      function NG(t, n) {
        if (
          (1 & t &&
            (H(0),
            y(1, "li", 65),
            f(2, LG, 2, 1, "span", 7),
            f(3, PG, 1, 0, "ng-container", 8),
            v(),
            z()),
          2 & t)
        ) {
          const e = p(),
            i = e.index,
            o = e.$implicit,
            r = p().options,
            s = p(2);
          g(1),
            d("ngStyle", Q(5, Wa, r.itemSize + "px")),
            x("id", s.id + "_" + s.getOptionIndex(i, r)),
            g(1),
            d("ngIf", !s.groupTemplate),
            g(1),
            d("ngTemplateOutlet", s.groupTemplate)(
              "ngTemplateOutletContext",
              Q(7, zg, o.optionGroup)
            );
        }
      }
      function VG(t, n) {
        if (1 & t) {
          const e = N();
          H(0),
            y(1, "p-multiSelectItem", 66),
            A("onClick", function (o) {
              T(e);
              const r = p().index,
                s = p().options,
                a = p(2);
              return S(a.onOptionSelect(o, !1, a.getOptionIndex(r, s)));
            })("onMouseEnter", function (o) {
              T(e);
              const r = p().index,
                s = p().options,
                a = p(2);
              return S(a.onOptionMouseEnter(o, a.getOptionIndex(r, s)));
            }),
            v(),
            z();
        }
        if (2 & t) {
          const e = p(),
            i = e.index,
            o = e.$implicit,
            r = p().options,
            s = p(2);
          g(1),
            d("id", s.id + "_" + s.getOptionIndex(i, r))("option", o)(
              "selected",
              s.isSelected(o)
            )("label", s.getOptionLabel(o))("disabled", s.isOptionDisabled(o))(
              "template",
              s.itemTemplate
            )("checkIconTemplate", s.checkIconTemplate)("itemSize", r.itemSize)(
              "focused",
              s.focusedOptionIndex() === s.getOptionIndex(i, r)
            )("ariaPosInset", s.getAriaPosInset(s.getOptionIndex(i, r)))(
              "ariaSetSize",
              s.ariaSetSize
            );
        }
      }
      function BG(t, n) {
        if (
          (1 & t &&
            (f(0, NG, 4, 9, "ng-container", 7),
            f(1, VG, 2, 11, "ng-container", 7)),
          2 & t)
        ) {
          const e = n.$implicit,
            i = p(3);
          d("ngIf", i.isOptionGroup(e)), g(1), d("ngIf", !i.isOptionGroup(e));
        }
      }
      function HG(t, n) {
        if ((1 & t && (H(0), B(1), z()), 2 & t)) {
          const e = p(4);
          g(1), we(" ", e.emptyFilterMessageLabel, " ");
        }
      }
      function zG(t, n) {
        1 & t && j(0, null, 68);
      }
      function $G(t, n) {
        if (
          (1 & t &&
            (y(0, "li", 67),
            f(1, HG, 2, 1, "ng-container", 40),
            f(2, zG, 2, 0, "ng-container", 22),
            v()),
          2 & t)
        ) {
          const e = p().options,
            i = p(2);
          d("ngStyle", Q(4, Wa, e.itemSize + "px")),
            g(1),
            d("ngIf", !i.emptyFilterTemplate && !i.emptyTemplate)(
              "ngIfElse",
              i.emptyFilter
            ),
            g(1),
            d("ngTemplateOutlet", i.emptyFilterTemplate || i.emptyTemplate);
        }
      }
      function jG(t, n) {
        if ((1 & t && (H(0), B(1), z()), 2 & t)) {
          const e = p(4);
          g(1), we(" ", e.emptyMessageLabel, " ");
        }
      }
      function UG(t, n) {
        1 & t && j(0, null, 69);
      }
      function GG(t, n) {
        if (
          (1 & t &&
            (y(0, "li", 67),
            f(1, jG, 2, 1, "ng-container", 40),
            f(2, UG, 2, 0, "ng-container", 22),
            v()),
          2 & t)
        ) {
          const e = p().options,
            i = p(2);
          d("ngStyle", Q(4, Wa, e.itemSize + "px")),
            g(1),
            d("ngIf", !i.emptyTemplate)("ngIfElse", i.empty),
            g(1),
            d("ngTemplateOutlet", i.emptyTemplate);
        }
      }
      function WG(t, n) {
        if (
          (1 & t &&
            (y(0, "ul", 61, 62),
            f(2, BG, 2, 2, "ng-template", 63),
            f(3, $G, 3, 6, "li", 64),
            f(4, GG, 3, 6, "li", 64),
            v()),
          2 & t)
        ) {
          const e = n.$implicit,
            i = n.options,
            o = p(2);
          bt(i.contentStyle),
            d("ngClass", i.contentStyleClass),
            g(2),
            d("ngForOf", e),
            g(1),
            d("ngIf", o.hasFilter() && o.isEmpty()),
            g(1),
            d("ngIf", !o.hasFilter() && o.isEmpty());
        }
      }
      function KG(t, n) {
        1 & t && j(0);
      }
      function qG(t, n) {
        if (
          (1 & t &&
            (y(0, "div", 70),
            jn(1, 1),
            f(2, KG, 1, 0, "ng-container", 22),
            v()),
          2 & t)
        ) {
          const e = p(2);
          g(2), d("ngTemplateOutlet", e.footerTemplate);
        }
      }
      function ZG(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 30)(1, "span", 31, 32),
            A("focus", function (o) {
              return T(e), S(p().onFirstHiddenFocus(o));
            }),
            v(),
            f(3, IG, 6, 3, "div", 33),
            y(4, "div", 34),
            f(5, AG, 4, 11, "p-scroller", 35),
            f(6, FG, 2, 6, "ng-container", 7),
            f(7, WG, 5, 6, "ng-template", null, 36, Yt),
            v(),
            f(9, qG, 3, 1, "div", 37),
            y(10, "span", 31, 38),
            A("focus", function (o) {
              return T(e), S(p().onLastHiddenFocus(o));
            }),
            v()();
        }
        if (2 & t) {
          const e = p();
          ne(e.panelStyleClass),
            d("ngClass", "p-multiselect-panel p-component")(
              "ngStyle",
              e.panelStyle
            ),
            g(1),
            x("aria-hidden", "true")("tabindex", 0)(
              "data-p-hidden-accessible",
              !0
            )("data-p-hidden-focusable", !0),
            g(2),
            d("ngIf", e.showHeader),
            g(1),
            Lr(
              "max-height",
              e.virtualScroll ? "auto" : e.scrollHeight || "auto"
            ),
            g(1),
            d("ngIf", e.virtualScroll),
            g(1),
            d("ngIf", !e.virtualScroll),
            g(3),
            d("ngIf", e.footerFacet || e.footerTemplate),
            g(1),
            x("aria-hidden", !0)("tabindex", 0)("data-p-hidden-accessible", !0)(
              "data-p-hidden-focusable",
              !0
            );
        }
      }
      const YG = [[["p-header"]], [["p-footer"]]],
        QG = function (t, n) {
          return { $implicit: t, removeChip: n };
        },
        JG = ["p-header", "p-footer"],
        XG = { provide: Rt, useExisting: Te(() => xI), multi: !0 };
      let eW = (() => {
          class t {
            id;
            option;
            selected;
            label;
            disabled;
            itemSize;
            focused;
            ariaPosInset;
            ariaSetSize;
            template;
            checkIconTemplate;
            onClick = new L();
            onMouseEnter = new L();
            onOptionClick(e) {
              this.onClick.emit({
                originalEvent: e,
                option: this.option,
                selected: this.selected,
              });
            }
            onOptionMouseEnter(e) {
              this.onMouseEnter.emit({
                originalEvent: e,
                option: this.option,
                selected: this.selected,
              });
            }
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-multiSelectItem"]],
              hostAttrs: [1, "p-element"],
              inputs: {
                id: "id",
                option: "option",
                selected: "selected",
                label: "label",
                disabled: "disabled",
                itemSize: "itemSize",
                focused: "focused",
                ariaPosInset: "ariaPosInset",
                ariaSetSize: "ariaSetSize",
                template: "template",
                checkIconTemplate: "checkIconTemplate",
              },
              outputs: { onClick: "onClick", onMouseEnter: "onMouseEnter" },
              decls: 6,
              vars: 26,
              consts: [
                [
                  "pRipple",
                  "",
                  1,
                  "p-multiselect-item",
                  3,
                  "ngStyle",
                  "ngClass",
                  "id",
                  "click",
                  "mouseenter",
                ],
                [1, "p-checkbox", "p-component"],
                [1, "p-checkbox-box", 3, "ngClass"],
                [4, "ngIf"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [3, "styleClass", 4, "ngIf"],
                ["class", "p-checkbox-icon", 4, "ngIf"],
                [3, "styleClass"],
                [1, "p-checkbox-icon"],
                [4, "ngTemplateOutlet"],
              ],
              template: function (i, o) {
                1 & i &&
                  (y(0, "li", 0),
                  A("click", function (s) {
                    return o.onOptionClick(s);
                  })("mouseenter", function (s) {
                    return o.onOptionMouseEnter(s);
                  }),
                  y(1, "div", 1)(2, "div", 2),
                  f(3, TU, 3, 2, "ng-container", 3),
                  v()(),
                  f(4, SU, 2, 1, "span", 3),
                  f(5, IU, 1, 0, "ng-container", 4),
                  v()),
                  2 & i &&
                    (d("ngStyle", Q(16, Wa, o.itemSize + "px"))(
                      "ngClass",
                      kn(18, DU, o.selected, o.disabled, o.focused)
                    )("id", o.id),
                    x("aria-label", o.label)("aria-setsize", o.ariaSetSize)(
                      "aria-posinset",
                      o.ariaPosInset
                    )("aria-selected", o.selected)("data-p-focused", o.focused)(
                      "data-p-highlight",
                      o.selected
                    )("data-p-disabled", o.disabled),
                    g(2),
                    d("ngClass", Q(22, EU, o.selected)),
                    x("aria-checked", o.selected),
                    g(1),
                    d("ngIf", o.selected),
                    g(1),
                    d("ngIf", !o.template),
                    g(1),
                    d("ngTemplateOutlet", o.template)(
                      "ngTemplateOutletContext",
                      Q(24, zg, o.option)
                    ));
              },
              dependencies: function () {
                return [Bt, wt, St, Xt, Ao, ko];
              },
              encapsulation: 2,
            });
          }
          return t;
        })(),
        xI = (() => {
          class t {
            el;
            renderer;
            cd;
            zone;
            filterService;
            config;
            overlayService;
            id;
            ariaLabel;
            style;
            styleClass;
            panelStyle;
            panelStyleClass;
            inputId;
            disabled;
            readonly;
            group;
            filter = !0;
            filterPlaceHolder;
            filterLocale;
            overlayVisible;
            tabindex = 0;
            appendTo;
            dataKey;
            name;
            ariaLabelledBy;
            set displaySelectedLabel(e) {
              this._displaySelectedLabel = e;
            }
            get displaySelectedLabel() {
              return this._displaySelectedLabel;
            }
            set maxSelectedLabels(e) {
              this._maxSelectedLabels = e;
            }
            get maxSelectedLabels() {
              return this._maxSelectedLabels;
            }
            selectionLimit;
            selectedItemsLabel = "{0} items selected";
            showToggleAll = !0;
            emptyFilterMessage = "";
            emptyMessage = "";
            resetFilterOnHide = !1;
            dropdownIcon;
            optionLabel;
            optionValue;
            optionDisabled;
            optionGroupLabel = "label";
            optionGroupChildren = "items";
            showHeader = !0;
            filterBy;
            scrollHeight = "200px";
            lazy = !1;
            virtualScroll;
            virtualScrollItemSize;
            virtualScrollOptions;
            overlayOptions;
            ariaFilterLabel;
            filterMatchMode = "contains";
            tooltip = "";
            tooltipPosition = "right";
            tooltipPositionStyle = "absolute";
            tooltipStyleClass;
            autofocusFilter = !0;
            display = "comma";
            autocomplete = "off";
            showClear = !1;
            get autoZIndex() {
              return this._autoZIndex;
            }
            set autoZIndex(e) {
              (this._autoZIndex = e),
                console.warn(
                  "The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead."
                );
            }
            get baseZIndex() {
              return this._baseZIndex;
            }
            set baseZIndex(e) {
              (this._baseZIndex = e),
                console.warn(
                  "The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead."
                );
            }
            get showTransitionOptions() {
              return this._showTransitionOptions;
            }
            set showTransitionOptions(e) {
              (this._showTransitionOptions = e),
                console.warn(
                  "The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead."
                );
            }
            get hideTransitionOptions() {
              return this._hideTransitionOptions;
            }
            set hideTransitionOptions(e) {
              (this._hideTransitionOptions = e),
                console.warn(
                  "The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead."
                );
            }
            set defaultLabel(e) {
              (this._defaultLabel = e),
                console.warn(
                  "defaultLabel property is deprecated since 16.6.0, use placeholder instead"
                );
            }
            get defaultLabel() {
              return this._defaultLabel;
            }
            set placeholder(e) {
              this._placeholder = e;
            }
            get placeholder() {
              return this._placeholder;
            }
            get options() {
              return this._options();
            }
            set options(e) {
              this._options.set(e);
            }
            get filterValue() {
              return this._filterValue();
            }
            set filterValue(e) {
              this._filterValue.set(e);
            }
            get itemSize() {
              return this._itemSize;
            }
            set itemSize(e) {
              (this._itemSize = e),
                console.warn(
                  "The itemSize property is deprecated, use virtualScrollItemSize property instead."
                );
            }
            get selectAll() {
              return this._selectAll;
            }
            set selectAll(e) {
              this._selectAll = e;
            }
            focusOnHover = !1;
            filterFields;
            selectOnFocus = !1;
            autoOptionFocus = !0;
            onChange = new L();
            onFilter = new L();
            onFocus = new L();
            onBlur = new L();
            onClick = new L();
            onClear = new L();
            onPanelShow = new L();
            onPanelHide = new L();
            onLazyLoad = new L();
            onRemove = new L();
            onSelectAllChange = new L();
            containerViewChild;
            overlayViewChild;
            filterInputChild;
            focusInputViewChild;
            itemsViewChild;
            scroller;
            lastHiddenFocusableElementOnOverlay;
            firstHiddenFocusableElementOnOverlay;
            headerCheckboxViewChild;
            footerFacet;
            headerFacet;
            templates;
            searchValue;
            searchTimeout;
            _selectAll = null;
            _autoZIndex;
            _baseZIndex;
            _showTransitionOptions;
            _hideTransitionOptions;
            _defaultLabel;
            _placeholder;
            _itemSize;
            _selectionLimit;
            value;
            _filteredOptions;
            onModelChange = () => {};
            onModelTouched = () => {};
            valuesAsString;
            focus;
            filtered;
            itemTemplate;
            groupTemplate;
            loaderTemplate;
            headerTemplate;
            filterTemplate;
            footerTemplate;
            emptyFilterTemplate;
            emptyTemplate;
            selectedItemsTemplate;
            checkIconTemplate;
            filterIconTemplate;
            removeTokenIconTemplate;
            closeIconTemplate;
            clearIconTemplate;
            dropdownIconTemplate;
            headerCheckboxFocus;
            filterOptions;
            maxSelectionLimitReached;
            preventModelTouched;
            preventDocumentDefault;
            focused = !1;
            itemsWrapper;
            _displaySelectedLabel = !0;
            _maxSelectedLabels = 3;
            modelValue = yi(null);
            _filterValue = yi(null);
            _options = yi(null);
            startRangeIndex = yi(-1);
            focusedOptionIndex = yi(-1);
            selectedOptions;
            get containerClass() {
              return {
                "p-multiselect p-component p-inputwrapper": !0,
                "p-disabled": this.disabled,
                "p-multiselect-clearable": this.showClear && !this.disabled,
                "p-multiselect-chip": "chip" === this.display,
                "p-focus": this.focused,
                "p-inputwrapper-filled": P.isNotEmpty(this.modelValue()),
                "p-inputwrapper-focus": this.focused || this.overlayVisible,
              };
            }
            get inputClass() {
              return {
                "p-multiselect-label p-inputtext": !0,
                "p-placeholder":
                  (this.placeholder || this.defaultLabel) &&
                  (this.label() === this.placeholder ||
                    this.label() === this.defaultLabel),
                "p-multiselect-label-empty":
                  !this.selectedItemsTemplate &&
                  ("p-emptylabel" === this.label() ||
                    0 === this.label().length),
              };
            }
            get panelClass() {
              return {
                "p-multiselect-panel p-component": !0,
                "p-input-filled": "filled" === this.config.inputStyle,
                "p-ripple-disabled": !1 === this.config.ripple,
              };
            }
            get labelClass() {
              return {
                "p-multiselect-label": !0,
                "p-placeholder":
                  this.label() === this.placeholder ||
                  this.label() === this.defaultLabel,
                "p-multiselect-label-empty": !(
                  this.placeholder ||
                  this.defaultLabel ||
                  (this.modelValue() && 0 !== this.modelValue().length)
                ),
              };
            }
            get emptyMessageLabel() {
              return (
                this.emptyMessage ||
                this.config.getTranslation(lt.EMPTY_MESSAGE)
              );
            }
            get emptyFilterMessageLabel() {
              return (
                this.emptyFilterMessage ||
                this.config.getTranslation(lt.EMPTY_FILTER_MESSAGE)
              );
            }
            get filled() {
              return "string" == typeof this.modelValue()
                ? !!this.modelValue()
                : this.modelValue() ||
                    null != this.modelValue() ||
                    null != this.modelValue();
            }
            get isVisibleClearIcon() {
              return (
                null != this.modelValue() &&
                "" !== this.modelValue() &&
                P.isNotEmpty(this.modelValue()) &&
                this.showClear &&
                !this.disabled &&
                this.filled
              );
            }
            get toggleAllAriaLabel() {
              return this.config.translation.aria
                ? this.config.translation.aria[
                    this.allSelected() ? "selectAll" : "unselectAll"
                  ]
                : void 0;
            }
            get closeAriaLabel() {
              return this.config.translation.aria
                ? this.config.translation.aria.close
                : void 0;
            }
            visibleOptions = Es(() => {
              const e = this.group
                ? this.flatOptions(this.options)
                : this.options || [];
              if (this._filterValue()) {
                const i = this.filterService.filter(
                  e,
                  this.searchFields(),
                  this._filterValue(),
                  this.filterMatchMode,
                  this.filterLocale
                );
                if (this.group) {
                  const r = [];
                  return (
                    (this.options || []).forEach((s) => {
                      const l = this.getOptionGroupChildren(s).filter((c) =>
                        i.includes(c)
                      );
                      l.length > 0 &&
                        r.push({
                          ...s,
                          ["string" == typeof this.optionGroupChildren
                            ? this.optionGroupChildren
                            : "items"]: [...l],
                        });
                    }),
                    this.flatOptions(r)
                  );
                }
                return i;
              }
              return e;
            });
            label = Es(() => {
              let e;
              const i = this.modelValue();
              if (i && i.length && this.displaySelectedLabel) {
                if (
                  P.isNotEmpty(this.maxSelectedLabels) &&
                  i.length > this.maxSelectedLabels
                )
                  return this.getSelectedItemsLabel();
                e = "";
                for (let o = 0; o < i.length; o++)
                  0 !== o && (e += ", "), (e += this.getLabelByValue(i[o]));
              } else e = this.placeholder || this.defaultLabel || "";
              return e;
            });
            chipSelectedItems = Es(() =>
              P.isNotEmpty(this.maxSelectedLabels) &&
              this.modelValue() &&
              this.modelValue().length > this.maxSelectedLabels
                ? this.modelValue().slice(0, this.maxSelectedLabels)
                : this.modelValue()
            );
            constructor(e, i, o, r, s, a, l) {
              (this.el = e),
                (this.renderer = i),
                (this.cd = o),
                (this.zone = r),
                (this.filterService = s),
                (this.config = a),
                (this.overlayService = l),
                ah(() => {
                  const c = this.modelValue(),
                    u = this.visibleOptions();
                  u &&
                    P.isNotEmpty(u) &&
                    c &&
                    (this.selectedOptions =
                      this.optionValue && this.optionLabel
                        ? u.filter(
                            (h) =>
                              c.includes(h[this.optionLabel]) ||
                              c.includes(h[this.optionValue])
                          )
                        : [...c]);
                });
            }
            ngOnInit() {
              (this.id = this.id || zt()),
                this.autoUpdateModel(),
                this.filterBy &&
                  (this.filterOptions = {
                    filter: (e) => this.onFilterInputChange(e),
                    reset: () => this.resetFilter(),
                  });
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "item":
                  default:
                    this.itemTemplate = e.template;
                    break;
                  case "group":
                    this.groupTemplate = e.template;
                    break;
                  case "selectedItems":
                    this.selectedItemsTemplate = e.template;
                    break;
                  case "header":
                    this.headerTemplate = e.template;
                    break;
                  case "filter":
                    this.filterTemplate = e.template;
                    break;
                  case "emptyfilter":
                    this.emptyFilterTemplate = e.template;
                    break;
                  case "empty":
                    this.emptyTemplate = e.template;
                    break;
                  case "footer":
                    this.footerTemplate = e.template;
                    break;
                  case "loader":
                    this.loaderTemplate = e.template;
                    break;
                  case "checkicon":
                    this.checkIconTemplate = e.template;
                    break;
                  case "filtericon":
                    this.filterIconTemplate = e.template;
                    break;
                  case "removetokenicon":
                    this.removeTokenIconTemplate = e.template;
                    break;
                  case "closeicon":
                    this.closeIconTemplate = e.template;
                    break;
                  case "clearicon":
                    this.clearIconTemplate = e.template;
                    break;
                  case "dropdownicon":
                    this.dropdownIconTemplate = e.template;
                }
              });
            }
            ngAfterViewInit() {
              this.overlayVisible && this.show();
            }
            ngAfterViewChecked() {
              this.filtered &&
                (this.zone.runOutsideAngular(() => {
                  setTimeout(() => {
                    this.overlayViewChild?.alignOverlay();
                  }, 1);
                }),
                (this.filtered = !1));
            }
            flatOptions(e) {
              return (e || []).reduce((i, o, r) => {
                i.push({ optionGroup: o, group: !0, index: r });
                const s = this.getOptionGroupChildren(o);
                return s && s.forEach((a) => i.push(a)), i;
              }, []);
            }
            autoUpdateModel() {
              if (
                this.selectOnFocus &&
                this.autoOptionFocus &&
                !this.hasSelectedOption()
              ) {
                this.focusedOptionIndex.set(this.findFirstFocusedOptionIndex());
                const e = this.getOptionValue(
                  this.visibleOptions()[this.focusedOptionIndex()]
                );
                this.onOptionSelect({ originalEvent: null, option: [e] });
              }
            }
            updateModel(e, i) {
              (this.value = e), this.onModelChange(e), this.modelValue.set(e);
            }
            onInputClick(e) {
              e.stopPropagation(),
                e.preventDefault(),
                this.focusedOptionIndex.set(-1);
            }
            onOptionSelect(e, i = !1, o = -1) {
              const { originalEvent: r, option: s } = e;
              if (this.disabled || this.isOptionDisabled(s)) return;
              let l = null;
              (l = this.isSelected(s)
                ? this.modelValue().filter(
                    (c) =>
                      !P.equals(c, this.getOptionValue(s), this.equalityKey())
                  )
                : [...(this.modelValue() || []), this.getOptionValue(s)]),
                this.updateModel(l, r),
                -1 !== o && this.focusedOptionIndex.set(o),
                i && w.focus(this.focusInputViewChild?.nativeElement),
                this.onChange.emit({
                  originalEvent: e,
                  value: l,
                  itemValue: s,
                });
            }
            findSelectedOptionIndex() {
              return this.hasSelectedOption()
                ? this.visibleOptions().findIndex((e) =>
                    this.isValidSelectedOption(e)
                  )
                : -1;
            }
            onOptionSelectRange(e, i = -1, o = -1) {
              if (
                (-1 === i && (i = this.findNearestSelectedOptionIndex(o, !0)),
                -1 === o && (o = this.findNearestSelectedOptionIndex(i)),
                -1 !== i && -1 !== o)
              ) {
                const r = Math.min(i, o),
                  s = Math.max(i, o),
                  a = this.visibleOptions()
                    .slice(r, s + 1)
                    .filter((l) => this.isValidOption(l))
                    .map((l) => this.getOptionValue(l));
                this.updateModel(a, e);
              }
            }
            searchFields() {
              return this.filterFields || [this.optionLabel];
            }
            findNearestSelectedOptionIndex(e, i = !1) {
              let o = -1;
              return (
                this.hasSelectedOption() &&
                  (i
                    ? ((o = this.findPrevSelectedOptionIndex(e)),
                      (o = -1 === o ? this.findNextSelectedOptionIndex(e) : o))
                    : ((o = this.findNextSelectedOptionIndex(e)),
                      (o =
                        -1 === o ? this.findPrevSelectedOptionIndex(e) : o))),
                o > -1 ? o : e
              );
            }
            findPrevSelectedOptionIndex(e) {
              const i =
                this.hasSelectedOption() && e > 0
                  ? P.findLastIndex(this.visibleOptions().slice(0, e), (o) =>
                      this.isValidSelectedOption(o)
                    )
                  : -1;
              return i > -1 ? i : -1;
            }
            findFirstFocusedOptionIndex() {
              const e = this.findFirstSelectedOptionIndex();
              return e < 0 ? this.findFirstOptionIndex() : e;
            }
            findFirstOptionIndex() {
              return this.visibleOptions().findIndex((e) =>
                this.isValidOption(e)
              );
            }
            findFirstSelectedOptionIndex() {
              return this.hasSelectedOption()
                ? this.visibleOptions().findIndex((e) =>
                    this.isValidSelectedOption(e)
                  )
                : -1;
            }
            findNextSelectedOptionIndex(e) {
              const i =
                this.hasSelectedOption() && e < this.visibleOptions().length - 1
                  ? this.visibleOptions()
                      .slice(e + 1)
                      .findIndex((o) => this.isValidSelectedOption(o))
                  : -1;
              return i > -1 ? i + e + 1 : -1;
            }
            equalityKey() {
              return this.optionValue ? null : this.dataKey;
            }
            hasSelectedOption() {
              return P.isNotEmpty(this.modelValue());
            }
            isValidSelectedOption(e) {
              return this.isValidOption(e) && this.isSelected(e);
            }
            isOptionGroup(e) {
              return (
                (this.group || this.optionGroupLabel) &&
                e.optionGroup &&
                e.group
              );
            }
            isValidOption(e) {
              return e && !(this.isOptionDisabled(e) || this.isOptionGroup(e));
            }
            isOptionDisabled(e) {
              return (
                (this.optionDisabled
                  ? P.resolveFieldData(e, this.optionDisabled)
                  : !(!e || void 0 === e.disabled) && e.disabled) ||
                (this.maxSelectionLimitReached && !this.isSelected(e))
              );
            }
            isSelected(e) {
              const i = this.getOptionValue(e);
              return (this.modelValue() || []).some((o) =>
                P.equals(o, i, this.equalityKey())
              );
            }
            isOptionMatched(e) {
              return (
                this.isValidOption(e) &&
                this.getOptionLabel(e)
                  .toLocaleLowerCase(this.filterLocale)
                  .startsWith(
                    this.searchValue.toLocaleLowerCase(this.filterLocale)
                  )
              );
            }
            isEmpty() {
              return (
                !this._options() ||
                (this.visibleOptions() && 0 === this.visibleOptions().length)
              );
            }
            getOptionIndex(e, i) {
              return this.virtualScrollerDisabled
                ? e
                : i && i.getItemOptions(e).index;
            }
            getAriaPosInset(e) {
              return (
                (this.optionGroupLabel
                  ? e -
                    this.visibleOptions()
                      .slice(0, e)
                      .filter((i) => this.isOptionGroup(i)).length
                  : e) + 1
              );
            }
            get ariaSetSize() {
              return this.visibleOptions().filter((e) => !this.isOptionGroup(e))
                .length;
            }
            getLabelByValue(e) {
              const o = (
                this.group
                  ? this.flatOptions(this._options())
                  : this._options() || []
              ).find(
                (r) =>
                  !this.isOptionGroup(r) &&
                  P.equals(this.getOptionValue(r), e, this.equalityKey())
              );
              return o ? this.getOptionLabel(o) : null;
            }
            getSelectedItemsLabel() {
              let e = /{(.*?)}/;
              return e.test(this.selectedItemsLabel)
                ? this.selectedItemsLabel.replace(
                    this.selectedItemsLabel.match(e)[0],
                    this.modelValue().length + ""
                  )
                : this.selectedItemsLabel;
            }
            getOptionLabel(e) {
              return this.optionLabel
                ? P.resolveFieldData(e, this.optionLabel)
                : e && null != e.label
                ? e.label
                : e;
            }
            getOptionValue(e) {
              return this.optionValue
                ? P.resolveFieldData(e, this.optionValue)
                : !this.optionLabel && e && void 0 !== e.value
                ? e.value
                : e;
            }
            getOptionGroupLabel(e) {
              return this.optionGroupLabel
                ? P.resolveFieldData(e, this.optionGroupLabel)
                : e && null != e.label
                ? e.label
                : e;
            }
            getOptionGroupChildren(e) {
              return this.optionGroupChildren
                ? P.resolveFieldData(e, this.optionGroupChildren)
                : e.items;
            }
            onKeyDown(e) {
              if (this.disabled) return void e.preventDefault();
              const i = e.metaKey || e.ctrlKey;
              switch (e.code) {
                case "ArrowDown":
                  this.onArrowDownKey(e);
                  break;
                case "ArrowUp":
                  this.onArrowUpKey(e);
                  break;
                case "Home":
                  this.onHomeKey(e);
                  break;
                case "End":
                  this.onEndKey(e);
                  break;
                case "PageDown":
                  this.onPageDownKey(e);
                  break;
                case "PageUp":
                  this.onPageUpKey(e);
                  break;
                case "Enter":
                case "Space":
                  this.onEnterKey(e);
                  break;
                case "Escape":
                  this.onEscapeKey(e);
                  break;
                case "Tab":
                  this.onTabKey(e);
                  break;
                case "ShiftLeft":
                case "ShiftRight":
                  this.onShiftKey();
                  break;
                default:
                  if ("KeyA" === e.code && i) {
                    const o = this.visibleOptions()
                      .filter((r) => this.isValidOption(r))
                      .map((r) => this.getOptionValue(r));
                    this.updateModel(o, e), e.preventDefault();
                    break;
                  }
                  !i &&
                    P.isPrintableCharacter(e.key) &&
                    (!this.overlayVisible && this.show(),
                    this.searchOptions(e, e.key),
                    e.preventDefault());
              }
            }
            onFilterKeyDown(e) {
              switch (e.code) {
                case "ArrowDown":
                  this.onArrowDownKey(e);
                  break;
                case "ArrowUp":
                  this.onArrowUpKey(e, !0);
                  break;
                case "ArrowLeft":
                case "ArrowRight":
                  this.onArrowLeftKey(e, !0);
                  break;
                case "Home":
                  this.onHomeKey(e, !0);
                  break;
                case "End":
                  this.onEndKey(e, !0);
                  break;
                case "Enter":
                  this.onEnterKey(e);
                  break;
                case "Escape":
                  this.onEscapeKey(e);
                  break;
                case "Tab":
                  this.onTabKey(e, !0);
              }
            }
            onArrowLeftKey(e, i = !1) {
              i && this.focusedOptionIndex.set(-1);
            }
            onArrowDownKey(e) {
              const i =
                -1 !== this.focusedOptionIndex()
                  ? this.findNextOptionIndex(this.focusedOptionIndex())
                  : this.findFirstFocusedOptionIndex();
              e.shiftKey &&
                this.onOptionSelectRange(e, this.startRangeIndex(), i),
                this.changeFocusedOptionIndex(e, i),
                !this.overlayVisible && this.show(),
                e.preventDefault(),
                e.stopPropagation();
            }
            onArrowUpKey(e, i = !1) {
              if (e.altKey && !i)
                -1 !== this.focusedOptionIndex() &&
                  this.onOptionSelect(
                    e,
                    this.visibleOptions()[this.focusedOptionIndex()]
                  ),
                  this.overlayVisible && this.hide(),
                  e.preventDefault();
              else {
                const o =
                  -1 !== this.focusedOptionIndex()
                    ? this.findPrevOptionIndex(this.focusedOptionIndex())
                    : this.findLastFocusedOptionIndex();
                e.shiftKey &&
                  this.onOptionSelectRange(e, o, this.startRangeIndex()),
                  this.changeFocusedOptionIndex(e, o),
                  !this.overlayVisible && this.show(),
                  e.preventDefault();
              }
              e.stopPropagation();
            }
            onHomeKey(e, i = !1) {
              const { currentTarget: o } = e;
              if (i)
                o.setSelectionRange(0, e.shiftKey ? o.value.length : 0),
                  this.focusedOptionIndex.set(-1);
              else {
                let r = e.metaKey || e.ctrlKey,
                  s = this.findFirstOptionIndex();
                e.shiftKey &&
                  r &&
                  this.onOptionSelectRange(e, s, this.startRangeIndex()),
                  this.changeFocusedOptionIndex(e, s),
                  !this.overlayVisible && this.show();
              }
              e.preventDefault();
            }
            onEndKey(e, i = !1) {
              const { currentTarget: o } = e;
              if (i) {
                const r = o.value.length;
                o.setSelectionRange(e.shiftKey ? 0 : r, r),
                  this.focusedOptionIndex.set(-1);
              } else {
                let r = e.metaKey || e.ctrlKey,
                  s = this.findLastFocusedOptionIndex();
                e.shiftKey &&
                  r &&
                  this.onOptionSelectRange(e, this.startRangeIndex(), s),
                  this.changeFocusedOptionIndex(e, s),
                  !this.overlayVisible && this.show();
              }
              e.preventDefault();
            }
            onPageDownKey(e) {
              this.scrollInView(this.visibleOptions().length - 1),
                e.preventDefault();
            }
            onPageUpKey(e) {
              this.scrollInView(0), e.preventDefault();
            }
            onEnterKey(e) {
              this.overlayVisible
                ? -1 !== this.focusedOptionIndex() &&
                  (e.shiftKey
                    ? this.onOptionSelectRange(e, this.focusedOptionIndex())
                    : this.onOptionSelect({
                        originalEvent: e,
                        option:
                          this.visibleOptions()[this.focusedOptionIndex()],
                      }))
                : this.onArrowDownKey(e),
                e.preventDefault();
            }
            onEscapeKey(e) {
              this.overlayVisible && this.hide(!0), e.preventDefault();
            }
            onDeleteKey(e) {
              this.showClear && (this.clear(e), e.preventDefault());
            }
            onTabKey(e, i = !1) {
              i ||
                (this.overlayVisible && this.hasFocusableElements()
                  ? (w.focus(
                      e.shiftKey
                        ? this.lastHiddenFocusableElementOnOverlay.nativeElement
                        : this.firstHiddenFocusableElementOnOverlay
                            .nativeElement
                    ),
                    e.preventDefault())
                  : (-1 !== this.focusedOptionIndex() &&
                      this.onOptionSelect({
                        originalEvent: e,
                        option:
                          this.visibleOptions()[this.focusedOptionIndex()],
                      }),
                    this.overlayVisible && this.hide(this.filter)));
            }
            onShiftKey() {
              this.startRangeIndex.set(this.focusedOptionIndex());
            }
            onContainerClick(e) {
              if (
                !(
                  this.disabled ||
                  this.readonly ||
                  e.target.isSameNode(this.focusInputViewChild?.nativeElement)
                )
              ) {
                if (
                  "INPUT" === e.target.tagName ||
                  "clearicon" === e.target.getAttribute("data-pc-section") ||
                  e.target.closest('[data-pc-section="clearicon"]')
                )
                  return void e.preventDefault();
                (!this.overlayViewChild ||
                  !this.overlayViewChild.el.nativeElement.contains(e.target)) &&
                  (this.overlayVisible ? this.hide(!0) : this.show(!0)),
                  this.focusInputViewChild?.nativeElement.focus({
                    preventScroll: !0,
                  }),
                  this.onClick.emit(e),
                  this.cd.detectChanges();
              }
            }
            onFirstHiddenFocus(e) {
              const i =
                e.relatedTarget === this.focusInputViewChild?.nativeElement
                  ? w.getFirstFocusableElement(
                      this.overlayViewChild?.overlayViewChild?.nativeElement,
                      ':not([data-p-hidden-focusable="true"])'
                    )
                  : this.focusInputViewChild?.nativeElement;
              w.focus(i);
            }
            onInputFocus(e) {
              this.focused = !0;
              const i =
                -1 !== this.focusedOptionIndex()
                  ? this.focusedOptionIndex()
                  : this.overlayVisible && this.autoOptionFocus
                  ? this.findFirstFocusedOptionIndex()
                  : -1;
              this.focusedOptionIndex.set(i),
                this.overlayVisible &&
                  this.scrollInView(this.focusedOptionIndex()),
                this.onFocus.emit({ originalEvent: e });
            }
            onInputBlur(e) {
              (this.focused = !1),
                this.onBlur.emit({ originalEvent: e }),
                this.preventModelTouched || this.onModelTouched(),
                (this.preventModelTouched = !1);
            }
            onFilterInputChange(e) {
              let i = e.target.value?.trim();
              this._filterValue.set(i),
                this.focusedOptionIndex.set(-1),
                this.onFilter.emit({
                  originalEvent: e,
                  filter: this._filterValue(),
                }),
                !this.virtualScrollerDisabled && this.scroller.scrollToIndex(0);
            }
            onLastHiddenFocus(e) {
              const i =
                e.relatedTarget === this.focusInputViewChild?.nativeElement
                  ? w.getLastFocusableElement(
                      this.overlayViewChild?.overlayViewChild?.nativeElement,
                      ':not([data-p-hidden-focusable="true"])'
                    )
                  : this.focusInputViewChild?.nativeElement;
              w.focus(i);
            }
            onOptionMouseEnter(e, i) {
              this.focusOnHover && this.changeFocusedOptionIndex(e, i);
            }
            onHeaderCheckboxKeyDown(e) {
              if (this.disabled) e.preventDefault();
              else
                switch (e.code) {
                  case "Space":
                  case "Enter":
                    this.onToggleAll(e);
                }
            }
            onFilterBlur(e) {
              this.focusedOptionIndex.set(-1);
            }
            onHeaderCheckboxFocus() {
              this.headerCheckboxFocus = !0;
            }
            onHeaderCheckboxBlur() {
              this.headerCheckboxFocus = !1;
            }
            onToggleAll(e) {
              if (!this.disabled && !this.readonly) {
                if (null !== this.selectAll)
                  this.onSelectAllChange.emit({
                    originalEvent: e,
                    checked: !this.allSelected(),
                  });
                else {
                  const i = this.allSelected()
                    ? []
                    : this.visibleOptions()
                        .filter((o) => this.isValidOption(o))
                        .map((o) => this.getOptionValue(o));
                  this.updateModel(i, e);
                }
                w.focus(this.headerCheckboxViewChild.nativeElement),
                  (this.headerCheckboxFocus = !0),
                  e.preventDefault(),
                  e.stopPropagation();
              }
            }
            changeFocusedOptionIndex(e, i) {
              this.focusedOptionIndex() !== i &&
                (this.focusedOptionIndex.set(i), this.scrollInView());
            }
            get virtualScrollerDisabled() {
              return !this.virtualScroll;
            }
            scrollInView(e = -1) {
              if (this.itemsViewChild && this.itemsViewChild.nativeElement) {
                const o = w.findSingle(
                  this.itemsViewChild.nativeElement,
                  `li[id="${
                    -1 !== e ? `${this.id}_${e}` : this.focusedOptionId
                  }"]`
                );
                o
                  ? o.scrollIntoView &&
                    o.scrollIntoView({ block: "nearest", inline: "nearest" })
                  : this.virtualScrollerDisabled ||
                    setTimeout(() => {
                      this.virtualScroll &&
                        this.scroller?.scrollToIndex(
                          -1 !== e ? e : this.focusedOptionIndex()
                        );
                    }, 0);
              }
            }
            get focusedOptionId() {
              return -1 !== this.focusedOptionIndex()
                ? `${this.id}_${this.focusedOptionIndex()}`
                : null;
            }
            checkSelectionLimit() {
              this.maxSelectionLimitReached = !(
                !this.selectionLimit ||
                !this.value ||
                this.value.length !== this.selectionLimit
              );
            }
            writeValue(e) {
              (this.value = e),
                this.modelValue.set(this.value),
                this.checkSelectionLimit(),
                this.cd.markForCheck();
            }
            registerOnChange(e) {
              this.onModelChange = e;
            }
            registerOnTouched(e) {
              this.onModelTouched = e;
            }
            setDisabledState(e) {
              (this.disabled = e), this.cd.markForCheck();
            }
            allSelected() {
              return null !== this.selectAll
                ? this.selectAll
                : P.isNotEmpty(this.visibleOptions()) &&
                    this.visibleOptions().every(
                      (e) =>
                        this.isOptionGroup(e) ||
                        this.isOptionDisabled(e) ||
                        this.isSelected(e)
                    );
            }
            show(e) {
              this.overlayVisible = !0;
              const i =
                -1 !== this.focusedOptionIndex()
                  ? this.focusedOptionIndex()
                  : this.autoOptionFocus
                  ? this.findFirstFocusedOptionIndex()
                  : -1;
              this.focusedOptionIndex.set(i),
                e && w.focus(this.focusInputViewChild?.nativeElement),
                this.cd.markForCheck();
            }
            hide(e) {
              (this.overlayVisible = !1),
                this.focusedOptionIndex.set(-1),
                this.filter && this.resetFilterOnHide && this.resetFilter(),
                e && w.focus(this.focusInputViewChild?.nativeElement),
                this.onPanelHide.emit(),
                this.cd.markForCheck();
            }
            onOverlayAnimationStart(e) {
              switch (e.toState) {
                case "visible":
                  if (
                    ((this.itemsWrapper = w.findSingle(
                      this.overlayViewChild?.overlayViewChild?.nativeElement,
                      this.virtualScroll
                        ? ".p-scroller"
                        : ".p-multiselect-items-wrapper"
                    )),
                    this.virtualScroll &&
                      this.scroller?.setContentEl(
                        this.itemsViewChild?.nativeElement
                      ),
                    this._options() && this._options().length)
                  )
                    if (this.virtualScroll) {
                      const i = P.isNotEmpty(this.modelValue())
                        ? this.focusedOptionIndex()
                        : -1;
                      -1 !== i && this.scroller?.scrollToIndex(i);
                    } else {
                      let i = w.findSingle(
                        this.itemsWrapper,
                        ".p-multiselect-item.p-highlight"
                      );
                      i &&
                        i.scrollIntoView({
                          block: "nearest",
                          inline: "center",
                        });
                    }
                  this.onPanelShow.emit();
                case "void":
                  (this.itemsWrapper = null), this.onModelTouched();
              }
            }
            resetFilter() {
              this.filterInputChild &&
                this.filterInputChild.nativeElement &&
                (this.filterInputChild.nativeElement.value = ""),
                this._filterValue.set(null),
                (this._filteredOptions = null);
            }
            close(e) {
              this.hide(), e.preventDefault(), e.stopPropagation();
            }
            clear(e) {
              (this.value = null),
                this.checkSelectionLimit(),
                this.updateModel(null, e),
                (this.selectedOptions = null),
                this.onClear.emit(),
                e.stopPropagation();
            }
            removeOption(e, i) {
              let o = this.modelValue().filter(
                (r) => !P.equals(r, e, this.equalityKey())
              );
              this.updateModel(o, i), i && i.stopPropagation();
            }
            findNextItem(e) {
              let i = e.nextElementSibling;
              return i
                ? w.hasClass(i.children[0], "p-disabled") ||
                  w.isHidden(i.children[0]) ||
                  w.hasClass(i, "p-multiselect-item-group")
                  ? this.findNextItem(i)
                  : i.children[0]
                : null;
            }
            findPrevItem(e) {
              let i = e.previousElementSibling;
              return i
                ? w.hasClass(i.children[0], "p-disabled") ||
                  w.isHidden(i.children[0]) ||
                  w.hasClass(i, "p-multiselect-item-group")
                  ? this.findPrevItem(i)
                  : i.children[0]
                : null;
            }
            findNextOptionIndex(e) {
              const i =
                e < this.visibleOptions().length - 1
                  ? this.visibleOptions()
                      .slice(e + 1)
                      .findIndex((o) => this.isValidOption(o))
                  : -1;
              return i > -1 ? i + e + 1 : e;
            }
            findPrevOptionIndex(e) {
              const i =
                e > 0
                  ? P.findLastIndex(this.visibleOptions().slice(0, e), (o) =>
                      this.isValidOption(o)
                    )
                  : -1;
              return i > -1 ? i : e;
            }
            findLastSelectedOptionIndex() {
              return this.hasSelectedOption()
                ? P.findLastIndex(this.visibleOptions(), (e) =>
                    this.isValidSelectedOption(e)
                  )
                : -1;
            }
            findLastFocusedOptionIndex() {
              const e = this.findLastSelectedOptionIndex();
              return e < 0 ? this.findLastOptionIndex() : e;
            }
            findLastOptionIndex() {
              return P.findLastIndex(this.visibleOptions(), (e) =>
                this.isValidOption(e)
              );
            }
            searchOptions(e, i) {
              this.searchValue = (this.searchValue || "") + i;
              let o = -1,
                r = !1;
              return (
                -1 !== this.focusedOptionIndex()
                  ? ((o = this.visibleOptions()
                      .slice(this.focusedOptionIndex())
                      .findIndex((s) => this.isOptionMatched(s))),
                    (o =
                      -1 === o
                        ? this.visibleOptions()
                            .slice(0, this.focusedOptionIndex())
                            .findIndex((s) => this.isOptionMatched(s))
                        : o + this.focusedOptionIndex()))
                  : (o = this.visibleOptions().findIndex((s) =>
                      this.isOptionMatched(s)
                    )),
                -1 !== o && (r = !0),
                -1 === o &&
                  -1 === this.focusedOptionIndex() &&
                  (o = this.findFirstFocusedOptionIndex()),
                -1 !== o && this.changeFocusedOptionIndex(e, o),
                this.searchTimeout && clearTimeout(this.searchTimeout),
                (this.searchTimeout = setTimeout(() => {
                  (this.searchValue = ""), (this.searchTimeout = null);
                }, 500)),
                r
              );
            }
            activateFilter() {
              if (this.hasFilter() && this._options) {
                let e = (this.filterBy || this.optionLabel || "label").split(
                  ","
                );
                if (this.group) {
                  let i = [];
                  for (let o of this.options) {
                    let r = this.filterService.filter(
                      this.getOptionGroupChildren(o),
                      e,
                      this.filterValue,
                      this.filterMatchMode,
                      this.filterLocale
                    );
                    r &&
                      r.length &&
                      i.push({ ...o, [this.optionGroupChildren]: r });
                  }
                  this._filteredOptions = i;
                } else
                  this._filteredOptions = this.filterService.filter(
                    this.options,
                    e,
                    this._filterValue,
                    this.filterMatchMode,
                    this.filterLocale
                  );
              } else this._filteredOptions = null;
            }
            hasFocusableElements() {
              return (
                w.getFocusableElements(
                  this.overlayViewChild.overlayViewChild.nativeElement,
                  ':not([data-p-hidden-focusable="true"])'
                ).length > 0
              );
            }
            hasFilter() {
              return (
                this._filterValue() && this._filterValue().trim().length > 0
              );
            }
            static ɵfac = function (i) {
              return new (i || t)(
                D(Fe),
                D(Tt),
                D(Ct),
                D(_e),
                D(uu),
                D(Ri),
                D(Da)
              );
            };
            static ɵcmp = le({
              type: t,
              selectors: [["p-multiSelect"]],
              contentQueries: function (i, o, r) {
                if (
                  (1 & i && (kt(r, jP, 5), kt(r, $P, 5), kt(r, It, 4)), 2 & i)
                ) {
                  let s;
                  J((s = X())) && (o.footerFacet = s.first),
                    J((s = X())) && (o.headerFacet = s.first),
                    J((s = X())) && (o.templates = s);
                }
              },
              viewQuery: function (i, o) {
                if (
                  (1 & i &&
                    (me(xU, 5),
                    me(MU, 5),
                    me(OU, 5),
                    me(AU, 5),
                    me(kU, 5),
                    me(RU, 5),
                    me(FU, 5),
                    me(LU, 5),
                    me(PU, 5)),
                  2 & i)
                ) {
                  let r;
                  J((r = X())) && (o.containerViewChild = r.first),
                    J((r = X())) && (o.overlayViewChild = r.first),
                    J((r = X())) && (o.filterInputChild = r.first),
                    J((r = X())) && (o.focusInputViewChild = r.first),
                    J((r = X())) && (o.itemsViewChild = r.first),
                    J((r = X())) && (o.scroller = r.first),
                    J((r = X())) &&
                      (o.lastHiddenFocusableElementOnOverlay = r.first),
                    J((r = X())) &&
                      (o.firstHiddenFocusableElementOnOverlay = r.first),
                    J((r = X())) && (o.headerCheckboxViewChild = r.first);
                }
              },
              hostAttrs: [1, "p-element", "p-inputwrapper"],
              hostVars: 4,
              hostBindings: function (i, o) {
                2 & i &&
                  On("p-inputwrapper-filled", o.filled)(
                    "p-inputwrapper-focus",
                    o.focused || o.overlayVisible
                  );
              },
              inputs: {
                id: "id",
                ariaLabel: "ariaLabel",
                style: "style",
                styleClass: "styleClass",
                panelStyle: "panelStyle",
                panelStyleClass: "panelStyleClass",
                inputId: "inputId",
                disabled: "disabled",
                readonly: "readonly",
                group: "group",
                filter: "filter",
                filterPlaceHolder: "filterPlaceHolder",
                filterLocale: "filterLocale",
                overlayVisible: "overlayVisible",
                tabindex: "tabindex",
                appendTo: "appendTo",
                dataKey: "dataKey",
                name: "name",
                ariaLabelledBy: "ariaLabelledBy",
                displaySelectedLabel: "displaySelectedLabel",
                maxSelectedLabels: "maxSelectedLabels",
                selectionLimit: "selectionLimit",
                selectedItemsLabel: "selectedItemsLabel",
                showToggleAll: "showToggleAll",
                emptyFilterMessage: "emptyFilterMessage",
                emptyMessage: "emptyMessage",
                resetFilterOnHide: "resetFilterOnHide",
                dropdownIcon: "dropdownIcon",
                optionLabel: "optionLabel",
                optionValue: "optionValue",
                optionDisabled: "optionDisabled",
                optionGroupLabel: "optionGroupLabel",
                optionGroupChildren: "optionGroupChildren",
                showHeader: "showHeader",
                filterBy: "filterBy",
                scrollHeight: "scrollHeight",
                lazy: "lazy",
                virtualScroll: "virtualScroll",
                virtualScrollItemSize: "virtualScrollItemSize",
                virtualScrollOptions: "virtualScrollOptions",
                overlayOptions: "overlayOptions",
                ariaFilterLabel: "ariaFilterLabel",
                filterMatchMode: "filterMatchMode",
                tooltip: "tooltip",
                tooltipPosition: "tooltipPosition",
                tooltipPositionStyle: "tooltipPositionStyle",
                tooltipStyleClass: "tooltipStyleClass",
                autofocusFilter: "autofocusFilter",
                display: "display",
                autocomplete: "autocomplete",
                showClear: "showClear",
                autoZIndex: "autoZIndex",
                baseZIndex: "baseZIndex",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
                defaultLabel: "defaultLabel",
                placeholder: "placeholder",
                options: "options",
                filterValue: "filterValue",
                itemSize: "itemSize",
                selectAll: "selectAll",
                focusOnHover: "focusOnHover",
                filterFields: "filterFields",
                selectOnFocus: "selectOnFocus",
                autoOptionFocus: "autoOptionFocus",
              },
              outputs: {
                onChange: "onChange",
                onFilter: "onFilter",
                onFocus: "onFocus",
                onBlur: "onBlur",
                onClick: "onClick",
                onClear: "onClear",
                onPanelShow: "onPanelShow",
                onPanelHide: "onPanelHide",
                onLazyLoad: "onLazyLoad",
                onRemove: "onRemove",
                onSelectAllChange: "onSelectAllChange",
              },
              features: [Ee([XG])],
              ngContentSelectors: JG,
              decls: 16,
              vars: 41,
              consts: [
                [3, "ngClass", "ngStyle", "click"],
                ["container", ""],
                [1, "p-hidden-accessible"],
                [
                  "role",
                  "combobox",
                  3,
                  "pTooltip",
                  "tooltipPosition",
                  "positionStyle",
                  "tooltipStyleClass",
                  "focus",
                  "blur",
                  "keydown",
                ],
                ["focusInput", ""],
                [
                  1,
                  "p-multiselect-label-container",
                  3,
                  "pTooltip",
                  "tooltipPosition",
                  "positionStyle",
                  "tooltipStyleClass",
                ],
                [3, "ngClass"],
                [4, "ngIf"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "p-multiselect-trigger"],
                ["class", "p-multiselect-trigger-icon", 4, "ngIf"],
                [
                  3,
                  "visible",
                  "options",
                  "target",
                  "appendTo",
                  "autoZIndex",
                  "baseZIndex",
                  "showTransitionOptions",
                  "hideTransitionOptions",
                  "visibleChange",
                  "onAnimationStart",
                  "onHide",
                ],
                ["overlay", ""],
                ["pTemplate", "content"],
                ["class", "p-multiselect-token", 4, "ngFor", "ngForOf"],
                [1, "p-multiselect-token"],
                ["token", ""],
                [1, "p-multiselect-token-label"],
                [3, "styleClass", "click", 4, "ngIf"],
                ["class", "p-multiselect-token-icon", 3, "click", 4, "ngIf"],
                [3, "styleClass", "click"],
                [1, "p-multiselect-token-icon", 3, "click"],
                [4, "ngTemplateOutlet"],
                ["class", "p-multiselect-clear-icon", 3, "click", 4, "ngIf"],
                [1, "p-multiselect-clear-icon", 3, "click"],
                [
                  "class",
                  "p-multiselect-trigger-icon",
                  3,
                  "ngClass",
                  4,
                  "ngIf",
                ],
                [3, "styleClass", 4, "ngIf"],
                [1, "p-multiselect-trigger-icon", 3, "ngClass"],
                [3, "styleClass"],
                [1, "p-multiselect-trigger-icon"],
                [3, "ngClass", "ngStyle"],
                [
                  "role",
                  "presentation",
                  1,
                  "p-hidden-accessible",
                  "p-hidden-focusable",
                  3,
                  "focus",
                ],
                ["firstHiddenFocusableEl", ""],
                ["class", "p-multiselect-header", 4, "ngIf"],
                [1, "p-multiselect-items-wrapper"],
                [
                  3,
                  "items",
                  "style",
                  "itemSize",
                  "autoSize",
                  "tabindex",
                  "lazy",
                  "options",
                  "onLazyLoad",
                  4,
                  "ngIf",
                ],
                ["buildInItems", ""],
                ["class", "p-multiselect-footer", 4, "ngIf"],
                ["lastHiddenFocusableEl", ""],
                [1, "p-multiselect-header"],
                [4, "ngIf", "ngIfElse"],
                ["builtInFilterElement", ""],
                [
                  "class",
                  "p-checkbox p-component",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                  4,
                  "ngIf",
                ],
                ["class", "p-multiselect-filter-container", 4, "ngIf"],
                [
                  "type",
                  "button",
                  "pRipple",
                  "",
                  1,
                  "p-multiselect-close",
                  "p-link",
                  "p-button-icon-only",
                  3,
                  "click",
                ],
                ["class", "p-multiselect-close-icon", 4, "ngIf"],
                [
                  1,
                  "p-checkbox",
                  "p-component",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                ],
                [
                  "type",
                  "checkbox",
                  3,
                  "readonly",
                  "disabled",
                  "focus",
                  "blur",
                ],
                ["headerCheckbox", ""],
                ["role", "checkbox", 1, "p-checkbox-box", 3, "ngClass"],
                ["class", "p-checkbox-icon", 4, "ngIf"],
                [1, "p-checkbox-icon"],
                [1, "p-multiselect-filter-container"],
                [
                  "type",
                  "text",
                  "role",
                  "searchbox",
                  1,
                  "p-multiselect-filter",
                  "p-inputtext",
                  "p-component",
                  3,
                  "value",
                  "disabled",
                  "input",
                  "keydown",
                  "click",
                  "blur",
                ],
                ["filterInput", ""],
                ["class", "p-multiselect-filter-icon", 4, "ngIf"],
                [1, "p-multiselect-filter-icon"],
                [1, "p-multiselect-close-icon"],
                [
                  3,
                  "items",
                  "itemSize",
                  "autoSize",
                  "tabindex",
                  "lazy",
                  "options",
                  "onLazyLoad",
                ],
                ["scroller", ""],
                ["pTemplate", "loader"],
                [
                  "role",
                  "listbox",
                  "aria-multiselectable",
                  "true",
                  1,
                  "p-multiselect-items",
                  "p-component",
                  3,
                  "ngClass",
                ],
                ["items", ""],
                ["ngFor", "", 3, "ngForOf"],
                [
                  "class",
                  "p-multiselect-empty-message",
                  3,
                  "ngStyle",
                  4,
                  "ngIf",
                ],
                ["role", "option", 1, "p-multiselect-item-group", 3, "ngStyle"],
                [
                  3,
                  "id",
                  "option",
                  "selected",
                  "label",
                  "disabled",
                  "template",
                  "checkIconTemplate",
                  "itemSize",
                  "focused",
                  "ariaPosInset",
                  "ariaSetSize",
                  "onClick",
                  "onMouseEnter",
                ],
                [1, "p-multiselect-empty-message", 3, "ngStyle"],
                ["emptyFilter", ""],
                ["empty", ""],
                [1, "p-multiselect-footer"],
              ],
              template: function (i, o) {
                1 & i &&
                  (Ii(YG),
                  y(0, "div", 0, 1),
                  A("click", function (s) {
                    return o.onContainerClick(s);
                  }),
                  y(2, "div", 2)(3, "input", 3, 4),
                  A("focus", function (s) {
                    return o.onInputFocus(s);
                  })("blur", function (s) {
                    return o.onInputBlur(s);
                  })("keydown", function (s) {
                    return o.onKeyDown(s);
                  }),
                  v()(),
                  y(5, "div", 5)(6, "div", 6),
                  f(7, GU, 3, 2, "ng-container", 7),
                  f(8, WU, 1, 0, "ng-container", 8),
                  v(),
                  f(9, QU, 3, 2, "ng-container", 7),
                  v(),
                  y(10, "div", 9),
                  f(11, eG, 3, 2, "ng-container", 7),
                  f(12, iG, 2, 3, "span", 10),
                  v(),
                  y(13, "p-overlay", 11, 12),
                  A("visibleChange", function (s) {
                    return (o.overlayVisible = s);
                  })("onAnimationStart", function (s) {
                    return o.onOverlayAnimationStart(s);
                  })("onHide", function () {
                    return o.hide();
                  }),
                  f(15, ZG, 12, 18, "ng-template", 13),
                  v()()),
                  2 & i &&
                    (ne(o.styleClass),
                    d("ngClass", o.containerClass)("ngStyle", o.style),
                    x("id", o.id),
                    g(2),
                    x("data-p-hidden-accessible", !0),
                    g(1),
                    d("pTooltip", o.tooltip)(
                      "tooltipPosition",
                      o.tooltipPosition
                    )("positionStyle", o.tooltipPositionStyle)(
                      "tooltipStyleClass",
                      o.tooltipStyleClass
                    ),
                    x("aria-disabled", o.disabled)("id", o.inputId)(
                      "aria-label",
                      o.ariaLabel
                    )("aria-labelledby", o.ariaLabelledBy)(
                      "aria-haspopup",
                      "listbox"
                    )("aria-expanded", o.overlayVisible)(
                      "aria-controls",
                      o.id + "_list"
                    )("tabindex", o.disabled ? -1 : o.tabindex)(
                      "aria-activedescendant",
                      o.focused ? o.focusedOptionId : void 0
                    ),
                    g(2),
                    d("pTooltip", o.tooltip)(
                      "tooltipPosition",
                      o.tooltipPosition
                    )("positionStyle", o.tooltipPositionStyle)(
                      "tooltipStyleClass",
                      o.tooltipStyleClass
                    ),
                    g(1),
                    d("ngClass", o.labelClass),
                    g(1),
                    d("ngIf", !o.selectedItemsTemplate),
                    g(1),
                    d("ngTemplateOutlet", o.selectedItemsTemplate)(
                      "ngTemplateOutletContext",
                      Ze(38, QG, o.selectedOptions, o.removeOption.bind(o))
                    ),
                    g(1),
                    d("ngIf", o.isVisibleClearIcon),
                    g(2),
                    d("ngIf", !o.dropdownIconTemplate),
                    g(1),
                    d("ngIf", o.dropdownIconTemplate),
                    g(1),
                    d("visible", o.overlayVisible)("options", o.overlayOptions)(
                      "target",
                      "@parent"
                    )("appendTo", o.appendTo)("autoZIndex", o.autoZIndex)(
                      "baseZIndex",
                      o.baseZIndex
                    )("showTransitionOptions", o.showTransitionOptions)(
                      "hideTransitionOptions",
                      o.hideTransitionOptions
                    ));
              },
              dependencies: function () {
                return [
                  Bt,
                  Oi,
                  wt,
                  St,
                  Xt,
                  rg,
                  It,
                  lg,
                  Ao,
                  ag,
                  ko,
                  fu,
                  II,
                  li,
                  qr,
                  eW,
                ];
              },
              styles: [
                "@layer primeng{.p-multiselect{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-multiselect-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-multiselect-label-container{overflow:hidden;flex:1 1 auto;cursor:pointer;display:flex}.p-multiselect-label{display:block;white-space:nowrap;cursor:pointer;overflow:hidden;text-overflow:ellipsis}.p-multiselect-label-empty{overflow:hidden;visibility:hidden}.p-multiselect-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-multiselect-token-icon{cursor:pointer}.p-multiselect-token-label{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-width:100px}.p-multiselect-items-wrapper{overflow:auto}.p-multiselect-items{margin:0;padding:0;list-style-type:none}.p-multiselect-item{cursor:pointer;display:flex;align-items:center;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-multiselect-header{display:flex;align-items:center;justify-content:space-between}.p-multiselect-filter-container{position:relative;flex:1 1 auto}.p-multiselect-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-multiselect-filter-container .p-inputtext{width:100%}.p-multiselect-close{display:flex;align-items:center;justify-content:center;flex-shrink:0;overflow:hidden;position:relative}.p-fluid .p-multiselect{display:flex}.p-multiselect-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-multiselect-clearable{position:relative}}\n",
              ],
              encapsulation: 2,
              changeDetection: 0,
            });
          }
          return t;
        })(),
        MI = (() => {
          class t {
            static ɵfac = function (i) {
              return new (i || t)();
            };
            static ɵmod = Re({ type: t });
            static ɵinj = xe({
              imports: [
                pt,
                pu,
                ht,
                hu,
                Wr,
                Zr,
                ko,
                fu,
                II,
                li,
                qr,
                ko,
                pu,
                ht,
                Zr,
              ],
            });
          }
          return t;
        })();
      function tW(t, n) {
        1 & t &&
          (y(0, "div", 2)(1, "div", 3), k(2, "p-progressSpinner", 4), v()());
      }
      function nW(t, n) {
        1 & t &&
          (y(0, "h3", 22),
          B(
            1,
            "\u0644\u064a\u0633 \u0644\u062f\u064a\u0643 \u0635\u0644\u0627\u062d\u064a\u0647 \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0645\u0631"
          ),
          v());
      }
      function iW(t, n) {
        1 & t &&
          (y(0, "h3", 23),
          B(
            1,
            "\u0644\u062f\u064a\u0643 \u0627\u0643\u062b\u0631 \u0645\u0646 role \u0648\u0627\u062d\u062f"
          ),
          v());
      }
      function oW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-button", 24),
            A("onClick", function () {
              return T(e), S(p(3).Save());
            }),
            v();
        }
        2 & t && d("icon", "pi pi-save")("pTooltip", "\u062d\u0641\u0638");
      }
      const rW = function () {
        return { "min-width": "300px" };
      };
      function sW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 13)(1, "p-multiSelect", 14),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).selectedColumns = o));
            })("ngModelChange", function () {
              return T(e), S(p(2).ColumnsChanged());
            }),
            v(),
            f(2, nW, 2, 0, "h3", 15),
            f(3, iW, 2, 0, "h3", 16),
            y(4, "div", 17),
            f(5, oW, 1, 2, "p-button", 18),
            y(6, "span", 19),
            k(7, "i", 20),
            y(8, "input", 21),
            A("input", function (o) {
              T(e), p();
              const r = rt(2);
              return S(p().filter(o, r));
            }),
            v()()()();
        }
        if (2 & t) {
          const e = p(2);
          g(1),
            bt(An(8, rW)),
            d("options", e.allColumns)(
              "pTooltip",
              "\u0627\u0644\u0623\u0639\u0645\u062f\u0629 \u0627\u0644\u0645\u0631\u0626\u064a\u0629"
            )("ngModel", e.selectedColumns),
            g(1),
            d("ngIf", e.errorHappened),
            g(1),
            d("ngIf", e.multipleroles),
            g(2),
            d("ngIf", e.isAdmin);
        }
      }
      function aW(t, n) {
        1 & t &&
          (y(0, "th", 29)(1, "div", 30),
          B(
            2,
            " \u0623\u0633\u0645 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 "
          ),
          k(3, "p-columnFilter", 31),
          v()());
      }
      function lW(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(
            2,
            " \u0631\u0642\u0645 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 "
          ),
          k(3, "p-columnFilter", 32),
          v()());
      }
      function cW(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(
            2,
            " \u062a\u0644\u062e\u064a\u0635 \u0627\u0644\u0645\u0634\u0631\u0648\u0639 "
          ),
          k(3, "p-columnFilter", 33),
          v()());
      }
      function uW(t, n) {
        1 & t &&
          (y(0, "div", 36)(1, "span", 37),
          B(
            2,
            "\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u0645\u062f\u0631\u0633\u0647"
          ),
          v()());
      }
      function dW(t, n) {
        if ((1 & t && (y(0, "div", 40)(1, "span", 41), B(2), v()()), 2 & t)) {
          const e = n.$implicit;
          g(2), Le(e.schoolName);
        }
      }
      function pW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-multiSelect", 38),
            A("onChange", function (o) {
              return S((0, T(e).filterCallback)(o.value));
            }),
            f(1, dW, 3, 1, "ng-template", 39),
            v();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = p(4);
          d("ngModel", e)("options", i.schools);
        }
      }
      function hW(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(2, " \u0627\u0644\u0645\u062f\u0631\u0633\u0647 "),
          y(3, "p-columnFilter", 34),
          f(4, uW, 3, 0, "ng-template", 9),
          f(5, pW, 2, 2, "ng-template", 35),
          v()()()),
          2 & t &&
            (g(3),
            d("showMatchModes", !1)("showOperator", !1)("showAddButton", !1));
      }
      function fW(t, n) {
        1 & t &&
          (y(0, "div", 36)(1, "span", 37),
          B(
            2,
            "\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u0645\u0634\u0631\u0641"
          ),
          v()());
      }
      function gW(t, n) {
        if ((1 & t && (y(0, "div", 40)(1, "span", 41), B(2), v()()), 2 & t)) {
          const e = n.$implicit;
          g(2), Le(e.teacherName);
        }
      }
      function mW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-multiSelect", 43),
            A("onChange", function (o) {
              return S((0, T(e).filterCallback)(o.value));
            }),
            f(1, gW, 3, 1, "ng-template", 39),
            v();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = p(4);
          d("ngModel", e)("options", i.teachers);
        }
      }
      function _W(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(2, " \u0627\u0644\u0645\u0634\u0631\u0641 "),
          y(3, "p-columnFilter", 42),
          f(4, fW, 3, 0, "ng-template", 9),
          f(5, mW, 2, 2, "ng-template", 35),
          v()()()),
          2 & t &&
            (g(3),
            d("showMatchModes", !1)("showOperator", !1)("showAddButton", !1));
      }
      function yW(t, n) {
        1 & t &&
          (y(0, "div", 36)(1, "span", 37),
          B(
            2,
            "\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u0637\u0644\u0627\u0628"
          ),
          v()());
      }
      function vW(t, n) {
        if ((1 & t && (y(0, "div", 40)(1, "span", 41), B(2), v()()), 2 & t)) {
          const e = n.$implicit;
          g(2), Le(e.studentName);
        }
      }
      function bW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-multiSelect", 45),
            A("onChange", function (o) {
              return S((0, T(e).filterCallback)(o.value));
            }),
            f(1, vW, 3, 1, "ng-template", 39),
            v();
        }
        if (2 & t) {
          const e = n.$implicit,
            i = p(4);
          d("ngModel", e)("options", i.students);
        }
      }
      function CW(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(2, " \u0627\u0644\u0637\u0644\u0627\u0628 "),
          y(3, "p-columnFilter", 44),
          f(4, yW, 3, 0, "ng-template", 9),
          f(5, bW, 2, 2, "ng-template", 35),
          v()()()),
          2 & t &&
            (g(3),
            d("showMatchModes", !1)("showOperator", !1)("showAddButton", !1));
      }
      function wW(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(2, " \u0627\u0644\u0635\u0641 "),
          k(3, "p-columnFilter", 46),
          v()());
      }
      function TW(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(
            2,
            " \u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0628\u062f\u0621 "
          ),
          k(3, "p-columnFilter", 47),
          v()());
      }
      function SW(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(
            2,
            " \u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0646\u0647\u0627\u064a\u0647 "
          ),
          k(3, "p-columnFilter", 48),
          v()());
      }
      function IW(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(
            2,
            " \u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0639\u0631\u0636 "
          ),
          k(3, "p-columnFilter", 49),
          v()());
      }
      function DW(t, n) {
        1 & t &&
          (y(0, "th")(1, "div", 30),
          B(2, " \u0648\u0642\u062a \u0627\u0644\u0639\u0631\u0636 "),
          k(3, "p-columnFilter", 50),
          v()());
      }
      function EW(t, n) {
        1 & t &&
          (y(0, "th", 51)(1, "div", 30),
          B(
            2,
            " \u0646\u0633\u0628\u0629 \u0627\u0644\u0623\u0646\u062c\u0627\u0632 "
          ),
          k(3, "p-columnFilter", 52),
          v()());
      }
      function xW(t, n) {
        1 & t &&
          (y(0, "th", 51)(1, "div", 30),
          B(2, " \u0645\u0644\u0627\u062d\u0638\u0627\u062a "),
          k(3, "p-columnFilter", 53),
          v()());
      }
      function MW(t, n) {
        1 & t &&
          (y(0, "th", 51)(1, "div", 30),
          B(2, " \u0648\u0636\u0648\u062d \u0627\u0644\u0639\u0631\u0636 "),
          k(3, "p-columnFilter", 54),
          v()());
      }
      function OW(t, n) {
        1 & t &&
          (y(0, "th", 51)(1, "div", 30),
          B(2, " \u062c\u0648\u062f\u0629 \u0627\u0644\u0639\u0645\u0644 "),
          k(3, "p-columnFilter", 55),
          v()());
      }
      function AW(t, n) {
        1 & t &&
          (y(0, "th", 51)(1, "div", 30),
          B(
            2,
            " \u0627\u0644\u0634\u0631\u0627\u0643\u0629 \u0648\u0627\u0644\u062a\u0639\u0627\u0648\u0646 "
          ),
          k(3, "p-columnFilter", 56),
          v()());
      }
      function kW(t, n) {
        1 & t &&
          (y(0, "th", 51)(1, "div", 30),
          B(
            2,
            " \u0627\u0644\u0639\u0644\u0627\u0645\u0629 \u0627\u0644\u0646\u0647\u0627\u0626\u064a\u0629 "
          ),
          k(3, "p-columnFilter", 57),
          v()());
      }
      function RW(t, n) {
        1 & t &&
          (y(0, "div", 58),
          B(1, " \u0627\u0644\u0623\u0648\u0627\u0645\u0631 "),
          v());
      }
      function FW(t, n) {
        if (
          (1 & t &&
            (y(0, "tr"),
            f(1, aW, 4, 0, "th", 25),
            f(2, lW, 4, 0, "th", 26),
            f(3, cW, 4, 0, "th", 26),
            f(4, hW, 6, 3, "th", 26),
            f(5, _W, 6, 3, "th", 26),
            f(6, CW, 6, 3, "th", 26),
            f(7, wW, 4, 0, "th", 26),
            f(8, TW, 4, 0, "th", 26),
            f(9, SW, 4, 0, "th", 26),
            f(10, IW, 4, 0, "th", 26),
            f(11, DW, 4, 0, "th", 26),
            f(12, EW, 4, 0, "th", 27),
            f(13, xW, 4, 0, "th", 27),
            f(14, MW, 4, 0, "th", 27),
            f(15, OW, 4, 0, "th", 27),
            f(16, AW, 4, 0, "th", 27),
            f(17, kW, 4, 0, "th", 27),
            y(18, "th"),
            f(19, RW, 2, 0, "div", 28),
            v()()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", e.IsSelected("title")),
            g(1),
            d("ngIf", e.IsSelected("title1")),
            g(1),
            d("ngIf", e.IsSelected("summary")),
            g(1),
            d(
              "ngIf",
              e.IsSelected("school") &&
                !e.isSchool &&
                !e.isTeacher &&
                !e.isStudent
            ),
            g(1),
            d("ngIf", e.IsSelected("teacherid") && !e.isTeacher),
            g(1),
            d("ngIf", e.IsSelected("students")),
            g(1),
            d("ngIf", e.IsSelected("class")),
            g(1),
            d("ngIf", e.IsSelected("startDate")),
            g(1),
            d("ngIf", e.IsSelected("endDate")),
            g(1),
            d("ngIf", e.IsSelected("date")),
            g(1),
            d("ngIf", e.IsSelected("time")),
            g(1),
            d("ngIf", e.IsSelected("progression_percentage")),
            g(1),
            d("ngIf", e.IsSelected("notes")),
            g(1),
            d("ngIf", e.IsSelected("presentation_clarity")),
            g(1),
            d("ngIf", e.IsSelected("work_quality")),
            g(1),
            d("ngIf", e.IsSelected("companionship")),
            g(1),
            d("ngIf", e.IsSelected("rating")),
            g(2),
            d("ngIf", 0 != e.selectedColumns.length && e.isAdmin);
        }
      }
      function LW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 79),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.title = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.title);
        }
      }
      function PW(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", null == e ? null : e.title, " ");
        }
      }
      function NW(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 76)(1, "p-cellEditor"),
            f(2, LW, 1, 2, "ng-template", 77),
            f(3, PW, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.title);
        }
      }
      function VW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 81),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.title1 = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.title1);
        }
      }
      function BW(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", null == e ? null : e.title1, " ");
        }
      }
      function HW(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 80)(1, "p-cellEditor"),
            f(2, VW, 1, 2, "ng-template", 77),
            f(3, BW, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.title1);
        }
      }
      function zW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "textarea", 83),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.summary = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("autoResize", !1)("ngModel", e.summary);
        }
      }
      function $W(t, n) {
        if ((1 & t && (y(0, "p", 84), B(1), v()), 2 & t)) {
          const e = p(2).$implicit;
          g(1), we(" ", null == e ? null : e.summary, " ");
        }
      }
      function jW(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 82)(1, "p-cellEditor"),
            f(2, zW, 1, 3, "ng-template", 77),
            f(3, $W, 2, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.summary);
        }
      }
      function UW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-dropdown", 86),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.school = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("options", p(2).schools)("ngModel", e.school);
        }
      }
      function GW(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", p(2).getSchoolName(null == e ? null : e.school), " ");
        }
      }
      function WW(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 85)(1, "p-cellEditor"),
            f(2, UW, 1, 2, "ng-template", 77),
            f(3, GW, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.school);
        }
      }
      function KW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-dropdown", 88),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.teacherid = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit,
            i = p(2);
          d("readonly", i.isStudent)("disabled", i.isStudent)(
            "options",
            i.teachers
          )("ngModel", e.teacherid);
        }
      }
      function qW(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", p(2).getTeacherName(null == e ? null : e.teacherid), " ");
        }
      }
      function ZW(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 87)(1, "p-cellEditor"),
            f(2, KW, 1, 4, "ng-template", 77),
            f(3, qW, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)(
            "pEditableColumn",
            e.teacherid
          );
        }
      }
      function YW(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-multiSelect", 90),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.students = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit,
            i = p(2);
          d("readonly", i.isStudent)("disabled", i.isStudent)(
            "options",
            i.students
          )("appendTo", "body")("ngModel", e.students);
        }
      }
      const QW = function () {
        return [];
      };
      function JW(t, n) {
        if ((1 & t && (y(0, "p", 84), B(1), v()), 2 & t)) {
          const e = p(2).$implicit,
            i = p(2);
          let o;
          g(1),
            we(
              " ",
              i.getStudentNames(
                null !== (o = null == e ? null : e.students) && void 0 !== o
                  ? o
                  : An(1, QW)
              ),
              " "
            );
        }
      }
      function XW(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 89)(1, "p-cellEditor"),
            f(2, YW, 1, 5, "ng-template", 77),
            f(3, JW, 2, 2, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.students);
        }
      }
      function eK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 92),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.class = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.class);
        }
      }
      function tK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", null == e ? null : e.class, " ");
        }
      }
      function nK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 91)(1, "p-cellEditor"),
            f(2, eK, 1, 2, "ng-template", 77),
            f(3, tK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.class);
        }
      }
      function iK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 79),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.startDate = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.startDate);
        }
      }
      function oK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", null == e ? null : e.startDate, " ");
        }
      }
      function rK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 93)(1, "p-cellEditor"),
            f(2, iK, 1, 2, "ng-template", 77),
            f(3, oK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)(
            "pEditableColumn",
            e.startDate
          );
        }
      }
      function sK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 79),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.endDate = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.endDate);
        }
      }
      function aK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", null == e ? null : e.endDate, " ");
        }
      }
      function lK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 94)(1, "p-cellEditor"),
            f(2, sK, 1, 2, "ng-template", 77),
            f(3, aK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.endDate);
        }
      }
      function cK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 79),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.date = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.date);
        }
      }
      function uK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", null == e ? null : e.date, " ");
        }
      }
      function dK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 95)(1, "p-cellEditor"),
            f(2, cK, 1, 2, "ng-template", 77),
            f(3, uK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.date);
        }
      }
      function pK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 97),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.time = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.time);
        }
      }
      function hK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          let i;
          we(
            " ",
            null == e || null == e.time || null == (i = e.time.toString())
              ? null
              : i.substring(0, 5),
            " "
          );
        }
      }
      function fK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 96)(1, "p-cellEditor"),
            f(2, pK, 1, 2, "ng-template", 77),
            f(3, hK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.time);
        }
      }
      function gK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 99),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.progression_percentage = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.progression_percentage);
        }
      }
      function mK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", (null == e ? null : e.progression_percentage) + "%", " ");
        }
      }
      function _K(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 98)(1, "p-cellEditor"),
            f(2, gK, 1, 2, "ng-template", 77),
            f(3, mK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)(
            "pEditableColumn",
            e.progression_percentage
          );
        }
      }
      function yK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 101),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.notes = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.notes);
        }
      }
      function vK(t, n) {
        if ((1 & t && (y(0, "p", 84), B(1), v()), 2 & t)) {
          const e = p(2).$implicit;
          g(1), we(" ", null == e ? null : e.notes, " ");
        }
      }
      function bK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 100)(1, "p-cellEditor"),
            f(2, yK, 1, 2, "ng-template", 77),
            f(3, vK, 2, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.notes);
        }
      }
      function CK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 99),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.presentation_clarity = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.presentation_clarity);
        }
      }
      function wK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", (null == e ? null : e.presentation_clarity) + "%", " ");
        }
      }
      function TK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 102)(1, "p-cellEditor"),
            f(2, CK, 1, 2, "ng-template", 77),
            f(3, wK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)(
            "pEditableColumn",
            e.presentation_clarity
          );
        }
      }
      function SK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 99),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.work_quality = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.work_quality);
        }
      }
      function IK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", (null == e ? null : e.work_quality) + "%", " ");
        }
      }
      function DK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 103)(1, "p-cellEditor"),
            f(2, SK, 1, 2, "ng-template", 77),
            f(3, IK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)(
            "pEditableColumn",
            e.work_quality
          );
        }
      }
      function EK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 99),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.companionship = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.companionship);
        }
      }
      function xK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", (null == e ? null : e.companionship) + "%", " ");
        }
      }
      function MK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 104)(1, "p-cellEditor"),
            f(2, EK, 1, 2, "ng-template", 77),
            f(3, xK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)(
            "pEditableColumn",
            e.companionship
          );
        }
      }
      function OK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "input", 99),
            A("ngModelChange", function (o) {
              return T(e), S((p(2).$implicit.rating = o));
            }),
            v();
        }
        if (2 & t) {
          const e = p(2).$implicit;
          d("readonly", !p(2).isAdmin)("ngModel", e.rating);
        }
      }
      function AK(t, n) {
        if ((1 & t && B(0), 2 & t)) {
          const e = p(2).$implicit;
          we(" ", (null == e ? null : e.rating) + "%", " ");
        }
      }
      function kK(t, n) {
        if (
          (1 & t &&
            (y(0, "td", 105)(1, "p-cellEditor"),
            f(2, OK, 1, 2, "ng-template", 77),
            f(3, AK, 1, 1, "ng-template", 78),
            v()()),
          2 & t)
        ) {
          const e = p().$implicit;
          d("pEditableColumnRowIndex", e.title1)("pEditableColumn", e.rating);
        }
      }
      function RK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "td"),
            k(1, "div", 58),
            y(2, "p-button", 106),
            A("onClick", function () {
              T(e);
              const o = p().$implicit;
              return S(p(2).Delete(o.title1));
            }),
            v()();
        }
        2 & t &&
          (g(2), d("icon", "pi pi-trash")("pTooltip", "\u062d\u0630\u0641"));
      }
      function FK(t, n) {
        if (
          (1 & t &&
            (y(0, "tr"),
            f(1, NW, 4, 2, "td", 59),
            f(2, HW, 4, 2, "td", 60),
            f(3, jW, 4, 2, "td", 61),
            f(4, WW, 4, 2, "td", 62),
            f(5, ZW, 4, 2, "td", 63),
            f(6, XW, 4, 2, "td", 64),
            f(7, nK, 4, 2, "td", 65),
            f(8, rK, 4, 2, "td", 66),
            f(9, lK, 4, 2, "td", 67),
            f(10, dK, 4, 2, "td", 68),
            f(11, fK, 4, 2, "td", 69),
            f(12, _K, 4, 2, "td", 70),
            f(13, bK, 4, 2, "td", 71),
            f(14, TK, 4, 2, "td", 72),
            f(15, DK, 4, 2, "td", 73),
            f(16, MK, 4, 2, "td", 74),
            f(17, kK, 4, 2, "td", 75),
            f(18, RK, 3, 2, "td", 26),
            v()),
          2 & t)
        ) {
          const e = p(2);
          g(1),
            d("ngIf", e.IsSelected("title")),
            g(1),
            d("ngIf", e.IsSelected("title1")),
            g(1),
            d("ngIf", e.IsSelected("summary")),
            g(1),
            d(
              "ngIf",
              e.IsSelected("school") &&
                !e.isSchool &&
                !e.isTeacher &&
                !e.isStudent
            ),
            g(1),
            d("ngIf", e.IsSelected("teacherid") && !e.isTeacher),
            g(1),
            d("ngIf", e.IsSelected("students")),
            g(1),
            d("ngIf", e.IsSelected("class")),
            g(1),
            d("ngIf", e.IsSelected("startDate")),
            g(1),
            d("ngIf", e.IsSelected("endDate")),
            g(1),
            d("ngIf", e.IsSelected("date")),
            g(1),
            d("ngIf", e.IsSelected("time")),
            g(1),
            d("ngIf", e.IsSelected("progression_percentage")),
            g(1),
            d("ngIf", e.IsSelected("notes")),
            g(1),
            d("ngIf", e.IsSelected("presentation_clarity")),
            g(1),
            d("ngIf", e.IsSelected("work_quality")),
            g(1),
            d("ngIf", e.IsSelected("companionship")),
            g(1),
            d("ngIf", e.IsSelected("rating")),
            g(1),
            d("ngIf", 0 != e.selectedColumns.length && e.isAdmin);
        }
      }
      function LK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "p-button", 108),
            A("onClick", function () {
              return T(e), S(p(3).AddEntry());
            }),
            v();
        }
        2 & t &&
          d("icon", "pi pi-plus")("pTooltip", "\u0627\u0636\u0627\u0641\u0629");
      }
      function PK(t, n) {
        1 & t && f(0, LK, 1, 2, "p-button", 107),
          2 & t && d("ngIf", p(2).isAdmin);
      }
      function NK(t, n) {
        1 & t && k(0, "div", 109);
      }
      const VK = function () {
          return [
            "title",
            "title1",
            "summary",
            "school",
            "teacherid",
            "students",
            "class",
            "startDate",
            "endDate",
            "date",
            "time",
            "progression_percentage",
            "notes",
            "presentation_clarity",
            "work_quality",
            "companionship",
            "rating",
          ];
        },
        BK = function () {
          return { "min-width": "50rem", "background-color": "transparent" };
        };
      function HK(t, n) {
        if (1 & t) {
          const e = N();
          y(0, "div", 5)(1, "p-table", 6, 7),
            A("onEditComplete", function (o) {
              return T(e), S(p().Edited(o));
            }),
            f(3, sW, 9, 9, "ng-template", 8),
            f(4, FW, 20, 18, "ng-template", 9),
            f(5, FK, 19, 18, "ng-template", 10),
            f(6, PK, 1, 1, "ng-template", 11),
            f(7, NK, 1, 0, "ng-template", 12),
            v()();
        }
        if (2 & t) {
          const e = p();
          g(1),
            d("value", e.projects)("columns", e.selectedColumns)(
              "globalFilterFields",
              An(11, VK)
            )("showCurrentPageReport", !0)("scrollable", !0)("rowHover", !0)(
              "rows",
              5
            )("tableStyle", An(12, BK))("paginator", !0)(
              "columnResizeMode",
              ""
            )("filterLocale", "ar");
        }
      }
      let OI = (() => {
        class t {
          constructor(e) {
            (this.filterService = e),
              (this.title = "wix-tables"),
              (this.projects = []),
              (this.students = []),
              (this.schools = []),
              (this.teachers = []),
              (this.Test = new L()),
              (this.Loaded = new L()),
              (this.errorHappened = !1),
              (this.multipleroles = !1),
              (this.allowedRoles = [
                "Schools",
                "Suber Admin",
                "Teachers",
                "Admin",
                "Owner",
              ]),
              (this.selectedColumns = [
                {
                  value: "title",
                  header:
                    "\u0627\u0633\u0645 \u0627\u0644\u0645\u0634\u0631\u0648\u0639",
                },
                {
                  value: "title1",
                  header:
                    "\u0631\u0642\u0645 \u0627\u0644\u0645\u0634\u0631\u0648\u0639",
                },
                {
                  value: "teacherid",
                  header: "\u0627\u0644\u0645\u0639\u0644\u0645",
                },
                { value: "class", header: "\u0627\u0644\u0635\u0641" },
                {
                  value: "students",
                  header: "\u0627\u0644\u0637\u0644\u0627\u0628",
                },
                {
                  value: "startDate",
                  header:
                    "\u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0628\u062f\u0621",
                },
                {
                  value: "endDate",
                  header:
                    "\u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0623\u0646\u062a\u0647\u0627\u0621",
                },
                {
                  value: "date",
                  header:
                    "\u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0639\u0631\u0636",
                },
                {
                  value: "time",
                  header: "\u0648\u0642\u062a \u0627\u0644\u0639\u0631\u0636",
                },
                {
                  value: "progression_percentage",
                  header:
                    "\u0646\u0633\u0628\u0629 \u0627\u0644\u0623\u0646\u062c\u0627\u0632",
                },
                {
                  value: "notes",
                  header: "\u0645\u0644\u0627\u062d\u0638\u0627\u062a",
                },
                {
                  value: "presentation_clarity",
                  header:
                    "\u0648\u0636\u0648\u062d \u0627\u0644\u0639\u0631\u0636",
                },
                {
                  value: "work_quality",
                  header:
                    "\u062c\u0648\u062f\u0629 \u0627\u0644\u0639\u0645\u0644",
                },
                {
                  value: "companionship",
                  header:
                    "\u0627\u0644\u0634\u0631\u0627\u0643\u0629 \u0648\u0627\u0644\u062a\u0639\u0627\u0648\u0646",
                },
                {
                  value: "rating",
                  header:
                    "\u0627\u0644\u0639\u0644\u0627\u0645\u0629 \u0627\u0644\u0646\u0647\u0627\u0626\u064a\u0629",
                },
              ]),
              (this.allColumns = [
                {
                  value: "title",
                  header:
                    "\u0627\u0633\u0645 \u0627\u0644\u0645\u0634\u0631\u0648\u0639",
                },
                {
                  value: "title1",
                  header:
                    "\u0631\u0642\u0645 \u0627\u0644\u0645\u0634\u0631\u0648\u0639",
                },
                {
                  value: "summary",
                  header:
                    "\u0645\u0644\u062e\u0635 \u0627\u0644\u0645\u0634\u0631\u0648\u0639",
                },
                {
                  value: "school",
                  header: "\u0627\u0644\u0645\u062f\u0631\u0633\u0629",
                },
                {
                  value: "teacherid",
                  header: "\u0627\u0644\u0645\u0639\u0644\u0645",
                },
                { value: "class", header: "\u0627\u0644\u0635\u0641" },
                {
                  value: "students",
                  header: "\u0627\u0644\u0637\u0644\u0627\u0628",
                },
                {
                  value: "startDate",
                  header:
                    "\u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0628\u062f\u0621",
                },
                {
                  value: "endDate",
                  header:
                    "\u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0623\u0646\u062a\u0647\u0627\u0621",
                },
                {
                  value: "date",
                  header:
                    "\u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0639\u0631\u0636",
                },
                {
                  value: "time",
                  header: "\u0648\u0642\u062a \u0627\u0644\u0639\u0631\u0636",
                },
                {
                  value: "progression_percentage",
                  header:
                    "\u0646\u0633\u0628\u0629 \u0627\u0644\u0623\u0646\u062c\u0627\u0632",
                },
                {
                  value: "notes",
                  header: "\u0645\u0644\u0627\u062d\u0638\u0627\u062a",
                },
                {
                  value: "presentation_clarity",
                  header:
                    "\u0648\u0636\u0648\u062d \u0627\u0644\u0639\u0631\u0636",
                },
                {
                  value: "work_quality",
                  header:
                    "\u062c\u0648\u062f\u0629 \u0627\u0644\u0639\u0645\u0644",
                },
                {
                  value: "companionship",
                  header:
                    "\u0627\u0644\u0634\u0631\u0627\u0643\u0629 \u0648\u0627\u0644\u062a\u0639\u0627\u0648\u0646",
                },
                {
                  value: "rating",
                  header:
                    "\u0627\u0644\u0639\u0644\u0627\u0645\u0629 \u0627\u0644\u0646\u0647\u0627\u0626\u064a\u0629",
                },
              ]),
              (this.roles = []),
              (this.Log = console.log),
              (this.turningOff = !1),
              (this.editedTitles = []),
              (this.isLoading = !1);
          }
          ngOnChanges(e) {
            this.Test.emit(e),
              e.isLoading &&
                (this.isLoading = "true" == e.isLoading.currentValue),
              console.warn(e);
          }
          ngOnInit() {
            var e = this;
            return (function mU(t) {
              return function () {
                var n = this,
                  e = arguments;
                return new Promise(function (i, o) {
                  var r = t.apply(n, e);
                  function s(l) {
                    wI(r, i, o, s, a, "next", l);
                  }
                  function a(l) {
                    wI(r, i, o, s, a, "throw", l);
                  }
                  s(void 0);
                });
              };
            })(function* () {
              e.filterService.register(
                "containsStudent",
                (i, o) => (
                  console.log("val", i),
                  console.log("filter", o),
                  null == o ||
                    0 === o?.length ||
                    i.some((r) => o.find((s) => s._id == r._id))
                )
              ),
                console.log("on init");
            })();
          }
          IsSelected(e) {
            return this.selectedColumns.some((i) => i.value == e);
          }
          filter(e, i) {
            i.filterGlobal(e.target.value, "contains");
          }
          Delete(e) {
            (this.isLoading = !0),
              this.postMessage({ action: "delete", data: e });
          }
          Save() {
            (this.isLoading = !0),
              this.postMessage({
                action: "save",
                data: this.projects,
                editedTitles: this.editedTitles,
              });
          }
          Edited(e) {
            e?.index && this.editedTitles.push(e.index);
          }
          AddEntry() {
            (this.isLoading = !0), this.postMessage({ action: "add" });
          }
          postMessage(e) {
            window.parent.postMessage(e, "*");
          }
          get isAdmin() {
            return this.roles?.some((e) =>
              this.allowedRoles.some((i) => i == e?.title)
            );
          }
          get isTeacher() {
            return this.roles?.some((e) => "Teachers" == e?.title);
          }
          get isSchool() {
            return this.roles?.some((e) => "Schools" == e?.title);
          }
          get isStudent() {
            return this.roles?.some((e) => "Students" == e?.title);
          }
          getStudentNames(e) {
            return e.map((i) => i.studentName).join(",");
          }
          getTeacherName(e) {
            return (
              this.teachers.find((i) => i?.teacherId == e)?.teacherName ??
              "\u0645\u0639\u0644\u0645"
            );
          }
          getSchoolName(e) {
            return (
              this.schools.find((i) => i?._id == e)?.schoolName ??
              "\u0645\u062f\u0631\u0633\u0647"
            );
          }
          ColumnsChanged() {
            0 == this.selectedColumns.length &&
              (this.selectedColumns = [
                {
                  value: "title",
                  header:
                    "\u0627\u0633\u0645 \u0627\u0644\u0645\u0634\u0631\u0648\u0639",
                },
              ]);
          }
          RemoveColumn(e, i) {
            if (i) {
              let o = this.allColumns.findIndex((s) => s.value == e);
              this.allColumns.splice(o, 1);
              let r = this.selectedColumns.findIndex((s) => s.value == e);
              this.selectedColumns.splice(r, 1);
            }
          }
          RecievedMessage(e) {
            let i = e.data;
            console.log(i),
              i.roles &&
                ((this.roles = i.roles),
                this.RemoveColumn(
                  "school",
                  this.isSchool || this.isStudent || this.isTeacher
                ),
                this.RemoveColumn("teacherid", this.isTeacher)),
              "error" == i &&
                (console.log("---- message is error ----"),
                (this.isLoading = !1),
                (this.errorHappened = !0),
                setTimeout(() => {
                  this.errorHappened = !1;
                }, 1e3)),
              "loaded" == i &&
                (this.postMessage({ action: "getteachers" }),
                this.postMessage({ action: "getroles" }),
                this.postMessage({ action: "getprojects" }),
                this.postMessage({ action: "getschools" }),
                this.postMessage({ action: "getstudents" })),
              i?.projects &&
                ((this.projects = i.projects), (this.isLoading = !1)),
              i?.students && (this.students = i.students),
              i?.schools && (this.schools = i.schools),
              i?.teachers &&
                (console.log("teachers", i.teachers),
                (this.teachers = i.teachers));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(D(uu));
          });
          static #t = (this.ɵcmp = le({
            type: t,
            selectors: [["app-root"]],
            hostBindings: function (i, o) {
              1 & i &&
                A(
                  "message",
                  function (s) {
                    return o.RecievedMessage(s);
                  },
                  0,
                  V1
                );
            },
            inputs: {
              isLoading: ["isloading", "isLoading"],
              projects: "projects",
              students: "students",
              schools: "schools",
              teachers: "teachers",
            },
            outputs: { Test: "Test", Loaded: "Loaded" },
            standalone: !0,
            features: [_t, Be],
            decls: 3,
            vars: 2,
            consts: [
              [
                "class",
                "d-flex justify-content-center w-100 ",
                "style",
                "margin-top: 30vh;",
                4,
                "ngIf",
                "ngIfElse",
              ],
              ["mainContent", ""],
              [
                1,
                "d-flex",
                "justify-content-center",
                "w-100",
                2,
                "margin-top",
                "30vh",
              ],
              [
                1,
                "card",
                2,
                "background-color",
                "unset !important",
                "border",
                "unset !important",
              ],
              [
                "styleClass",
                "w-4rem h-4rem",
                "strokeWidth",
                "8",
                "fill",
                "var(--surface-ground)",
                "animationDuration",
                "1s",
              ],
              [1, "bg-transparent"],
              [
                "dataKey",
                "title1",
                "currentPageReportTemplate",
                "Showing {first} to {last} of {totalRecords} entries",
                "scrollHeight",
                "400px",
                "styleClass",
                "p-datatable-sm p-datatable-striped",
                1,
                "bg-transparent",
                3,
                "value",
                "columns",
                "globalFilterFields",
                "showCurrentPageReport",
                "scrollable",
                "rowHover",
                "rows",
                "tableStyle",
                "paginator",
                "columnResizeMode",
                "filterLocale",
                "onEditComplete",
              ],
              ["dt", ""],
              ["pTemplate", "caption"],
              ["pTemplate", "header"],
              ["pTemplate", "body"],
              ["pTemplate", "paginatorright"],
              ["pTemplate", "paginatorleft"],
              [
                1,
                "d-flex",
                "align-items-center",
                "gap-2",
                "justify-content-between",
              ],
              [
                "optionLabel",
                "header",
                "selectedItemsLabel",
                "{0} \u0627\u0639\u0645\u062f\u0647 \u0645\u062d\u062f\u062f\u0647",
                "placeholder",
                "\u0627\u062e\u062a\u064a\u0627\u0631 \u0627\u0644\u0623\u0639\u0645\u062f\u0629",
                3,
                "options",
                "pTooltip",
                "ngModel",
                "ngModelChange",
              ],
              ["class", "text-danger", 4, "ngIf"],
              ["class", "text-primary", 4, "ngIf"],
              [
                1,
                "d-flex",
                "justify-content-center",
                "align-items-center",
                "gap-2",
              ],
              [
                "styleClass",
                "rounded rounded-4",
                "severity",
                "success",
                3,
                "icon",
                "pTooltip",
                "onClick",
                4,
                "ngIf",
              ],
              [1, "p-input-icon-left"],
              [1, "pi", "pi-search"],
              [
                "pInputText",
                "",
                "type",
                "text",
                "placeholder",
                "Search...",
                3,
                "input",
              ],
              [1, "text-danger"],
              [1, "text-primary"],
              [
                "styleClass",
                "rounded rounded-4",
                "severity",
                "success",
                3,
                "icon",
                "pTooltip",
                "onClick",
              ],
              ["pFrozenColumn", "", 4, "ngIf"],
              [4, "ngIf"],
              ["style", "background-color: #B7E892;", 4, "ngIf"],
              [
                "class",
                "d-flex justify-content-center px-1",
                "style",
                "width: fit-content;",
                4,
                "ngIf",
              ],
              ["pFrozenColumn", ""],
              [1, "flex", "align-items-center"],
              ["type", "text", "field", "title", "display", "menu"],
              ["type", "text", "field", "title1", "display", "menu"],
              ["type", "text", "field", "summary", "display", "menu"],
              [
                "field",
                "school",
                "matchMode",
                "in",
                "display",
                "menu",
                3,
                "showMatchModes",
                "showOperator",
                "showAddButton",
              ],
              ["pTemplate", "filter"],
              [1, "px-3", "pt-3", "pb-0"],
              [1, "font-bold"],
              [
                "placeholder",
                "Any",
                "optionValue",
                "_id",
                "optionLabel",
                "schoolName",
                3,
                "ngModel",
                "options",
                "onChange",
              ],
              ["pTemplate", "item"],
              [1, "inline-block", "vertical-align-middle"],
              [1, "ml-1", "mt-1"],
              [
                "field",
                "teacherid",
                "matchMode",
                "in",
                "display",
                "menu",
                3,
                "showMatchModes",
                "showOperator",
                "showAddButton",
              ],
              [
                "placeholder",
                "Any",
                "optionValue",
                "teacherId",
                "optionLabel",
                "teacherName",
                3,
                "ngModel",
                "options",
                "onChange",
              ],
              [
                "field",
                "students",
                "matchMode",
                "containsStudent",
                "display",
                "menu",
                3,
                "showMatchModes",
                "showOperator",
                "showAddButton",
              ],
              [
                "placeholder",
                "Any",
                "optionLabel",
                "studentName",
                3,
                "ngModel",
                "options",
                "onChange",
              ],
              ["type", "numeric", "field", "class", "display", "menu"],
              ["type", "text", "field", "startDate", "display", "menu"],
              ["type", "text", "field", "endDate", "display", "menu"],
              ["type", "text", "field", "date", "display", "menu"],
              ["type", "text", "field", "time", "display", "menu"],
              [2, "background-color", "#B7E892"],
              [
                "type",
                "numeric",
                "field",
                "progression_percentage",
                "display",
                "menu",
              ],
              ["type", "text", "field", "notes", "display", "menu"],
              [
                "type",
                "numeric",
                "field",
                "presentation_clarity",
                "display",
                "menu",
              ],
              ["type", "numeric", "field", "work_quality", "display", "menu"],
              ["type", "numeric", "field", "companionship", "display", "menu"],
              ["type", "numeric", "field", "rating", "display", "menu"],
              [
                1,
                "d-flex",
                "justify-content-center",
                "px-1",
                2,
                "width",
                "fit-content",
              ],
              [
                "pFrozenColumn",
                "",
                "pEditableColumnField",
                "title",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "title1",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "summary",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "school",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "teacherid",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "students",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "class",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "startDate",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "endDate",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "date",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pEditableColumnField",
                "time",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "style",
                "background-color: #B7E892;",
                "pEditableColumnField",
                "progression_percentage",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "style",
                "background-color: #B7E892;",
                "pEditableColumnField",
                "notes",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "style",
                "background-color: #B7E892;",
                "pEditableColumnField",
                "presentation_clarity",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "style",
                "background-color: #B7E892;",
                "pEditableColumnField",
                "work_quality",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "style",
                "background-color: #B7E892;",
                "pEditableColumnField",
                "companionship",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "style",
                "background-color: #B7E892;",
                "pEditableColumnField",
                "rating",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
                4,
                "ngIf",
              ],
              [
                "pFrozenColumn",
                "",
                "pEditableColumnField",
                "title",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              ["pTemplate", "input"],
              ["pTemplate", "output"],
              [
                "pInputText",
                "",
                "type",
                "text",
                3,
                "readonly",
                "ngModel",
                "ngModelChange",
              ],
              [
                "pEditableColumnField",
                "title1",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pInputText",
                "",
                "type",
                "number",
                "required",
                "",
                3,
                "readonly",
                "ngModel",
                "ngModelChange",
              ],
              [
                "pEditableColumnField",
                "summary",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pInputTextarea",
                "",
                "required",
                "",
                3,
                "readonly",
                "autoResize",
                "ngModel",
                "ngModelChange",
              ],
              [1, "text-truncate", 2, "max-width", "150px"],
              [
                "pEditableColumnField",
                "school",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "appendTo",
                "body",
                "optionValue",
                "_id",
                "optionLabel",
                "schoolName",
                3,
                "options",
                "ngModel",
                "ngModelChange",
              ],
              [
                "pEditableColumnField",
                "teacherid",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "appendTo",
                "body",
                "optionValue",
                "teacherId",
                "optionLabel",
                "teacherName",
                3,
                "readonly",
                "disabled",
                "options",
                "ngModel",
                "ngModelChange",
              ],
              [
                "pEditableColumnField",
                "students",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "appendTo",
                "body",
                "optionLabel",
                "studentName",
                3,
                "readonly",
                "disabled",
                "options",
                "appendTo",
                "ngModel",
                "ngModelChange",
              ],
              [
                "pEditableColumnField",
                "class",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "type",
                "number",
                "pInputText",
                "",
                3,
                "readonly",
                "ngModel",
                "ngModelChange",
              ],
              [
                "pEditableColumnField",
                "startDate",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pEditableColumnField",
                "endDate",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pEditableColumnField",
                "date",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pEditableColumnField",
                "time",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pInputText",
                "",
                "type",
                "time",
                3,
                "readonly",
                "ngModel",
                "ngModelChange",
              ],
              [
                "pEditableColumnField",
                "progression_percentage",
                2,
                "background-color",
                "#B7E892",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pInputText",
                "",
                "type",
                "number",
                3,
                "readonly",
                "ngModel",
                "ngModelChange",
              ],
              [
                "pEditableColumnField",
                "notes",
                2,
                "background-color",
                "#B7E892",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              ["pInputText", "", 3, "readonly", "ngModel", "ngModelChange"],
              [
                "pEditableColumnField",
                "presentation_clarity",
                2,
                "background-color",
                "#B7E892",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pEditableColumnField",
                "work_quality",
                2,
                "background-color",
                "#B7E892",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pEditableColumnField",
                "companionship",
                2,
                "background-color",
                "#B7E892",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "pEditableColumnField",
                "rating",
                2,
                "background-color",
                "#B7E892",
                3,
                "pEditableColumnRowIndex",
                "pEditableColumn",
              ],
              [
                "styleClass",
                "rounded rounded-4",
                "severity",
                "danger",
                "size",
                "small",
                3,
                "icon",
                "pTooltip",
                "onClick",
              ],
              [
                "styleClass",
                "rounded rounded-4",
                "size",
                "small",
                3,
                "icon",
                "pTooltip",
                "onClick",
                4,
                "ngIf",
              ],
              [
                "styleClass",
                "rounded rounded-4",
                "size",
                "small",
                3,
                "icon",
                "pTooltip",
                "onClick",
              ],
              [1, "mx-auto"],
            ],
            template: function (i, o) {
              if (
                (1 & i &&
                  (f(0, tW, 3, 0, "div", 0),
                  f(1, HK, 8, 13, "ng-template", null, 1, Yt)),
                2 & i)
              ) {
                const r = rt(2);
                d("ngIf", o.isLoading)("ngIfElse", r);
              }
            },
            dependencies: [
              pt,
              wt,
              TI,
              _U,
              SI,
              yU,
              xa,
              gu,
              It,
              MI,
              xI,
              hu,
              lg,
              Sa,
              Jc,
              Yf,
              va,
              cu,
              io,
              Kr,
              aN,
              fS,
              Yr,
              Bz,
              pS,
              zz,
              hS,
            ],
          }));
        }
        return t;
      })();
      function AI(t) {
        return new O(3e3, !1);
      }
      function lo(t) {
        switch (t.length) {
          case 0:
            return new ya();
          case 1:
            return t[0];
          default:
            return new Ow(t);
        }
      }
      function kI(t, n, e = new Map(), i = new Map()) {
        const o = [],
          r = [];
        let s = -1,
          a = null;
        if (
          (n.forEach((l) => {
            const c = l.get("offset"),
              u = c == s,
              h = (u && a) || new Map();
            l.forEach((m, _) => {
              let b = _,
                C = m;
              if ("offset" !== _)
                switch (((b = t.normalizePropertyName(b, o)), C)) {
                  case "!":
                    C = e.get(_);
                    break;
                  case ki:
                    C = i.get(_);
                    break;
                  default:
                    C = t.normalizeStyleValue(_, b, C, o);
                }
              h.set(b, C);
            }),
              u || r.push(h),
              (a = h),
              (s = c);
          }),
          o.length)
        )
          throw (function cq(t) {
            return new O(3502, !1);
          })();
        return r;
      }
      function $g(t, n, e, i) {
        switch (n) {
          case "start":
            t.onStart(() => i(e && jg(e, "start", t)));
            break;
          case "done":
            t.onDone(() => i(e && jg(e, "done", t)));
            break;
          case "destroy":
            t.onDestroy(() => i(e && jg(e, "destroy", t)));
        }
      }
      function jg(t, n, e) {
        const r = Ug(
            t.element,
            t.triggerName,
            t.fromState,
            t.toState,
            n || t.phaseName,
            e.totalTime ?? t.totalTime,
            !!e.disabled
          ),
          s = t._data;
        return null != s && (r._data = s), r;
      }
      function Ug(t, n, e, i, o = "", r = 0, s) {
        return {
          element: t,
          triggerName: n,
          fromState: e,
          toState: i,
          phaseName: o,
          totalTime: r,
          disabled: !!s,
        };
      }
      function vn(t, n, e) {
        let i = t.get(n);
        return i || t.set(n, (i = e)), i;
      }
      function RI(t) {
        const n = t.indexOf(":");
        return [t.substring(1, n), t.slice(n + 1)];
      }
      const Cq = (() =>
        typeof document > "u" ? null : document.documentElement)();
      function Gg(t) {
        const n = t.parentNode || t.host || null;
        return n === Cq ? null : n;
      }
      let No = null,
        FI = !1;
      function LI(t, n) {
        for (; n; ) {
          if (n === t) return !0;
          n = Gg(n);
        }
        return !1;
      }
      function PI(t, n, e) {
        if (e) return Array.from(t.querySelectorAll(n));
        const i = t.querySelector(n);
        return i ? [i] : [];
      }
      let NI = (() => {
          class t {
            validateStyleProperty(e) {
              return (function Tq(t) {
                No ||
                  ((No =
                    (function Sq() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (FI = !!No.style && "WebkitAppearance" in No.style));
                let n = !0;
                return (
                  No.style &&
                    !(function wq(t) {
                      return "ebkit" == t.substring(1, 6);
                    })(t) &&
                    ((n = t in No.style),
                    !n &&
                      FI &&
                      (n =
                        "Webkit" + t.charAt(0).toUpperCase() + t.slice(1) in
                        No.style)),
                  n
                );
              })(e);
            }
            matchesElement(e, i) {
              return !1;
            }
            containsElement(e, i) {
              return LI(e, i);
            }
            getParentElement(e) {
              return Gg(e);
            }
            query(e, i, o) {
              return PI(e, i, o);
            }
            computeStyle(e, i, o) {
              return o || "";
            }
            animate(e, i, o, r, s, a = [], l) {
              return new ya(o, r);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || t)();
            });
            static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
          }
          return t;
        })(),
        Wg = (() => {
          class t {
            static #e = (this.NOOP = new NI());
          }
          return t;
        })();
      const Iq = 1e3,
        Kg = "ng-enter",
        Pu = "ng-leave",
        Nu = "ng-trigger",
        Vu = ".ng-trigger",
        BI = "ng-animating",
        qg = ".ng-animating";
      function Ni(t) {
        if ("number" == typeof t) return t;
        const n = t.match(/^(-?[\.\d]+)(m?s)/);
        return !n || n.length < 2 ? 0 : Zg(parseFloat(n[1]), n[2]);
      }
      function Zg(t, n) {
        return "s" === n ? t * Iq : t;
      }
      function Bu(t, n, e) {
        return t.hasOwnProperty("duration")
          ? t
          : (function Eq(t, n, e) {
              let o,
                r = 0,
                s = "";
              if ("string" == typeof t) {
                const a = t.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return n.push(AI()), { duration: 0, delay: 0, easing: "" };
                o = Zg(parseFloat(a[1]), a[2]);
                const l = a[3];
                null != l && (r = Zg(parseFloat(l), a[4]));
                const c = a[5];
                c && (s = c);
              } else o = t;
              if (!e) {
                let a = !1,
                  l = n.length;
                o < 0 &&
                  (n.push(
                    (function zK() {
                      return new O(3100, !1);
                    })()
                  ),
                  (a = !0)),
                  r < 0 &&
                    (n.push(
                      (function $K() {
                        return new O(3101, !1);
                      })()
                    ),
                    (a = !0)),
                  a && n.splice(l, 0, AI());
              }
              return { duration: o, delay: r, easing: s };
            })(t, n, e);
      }
      function Ka(t, n = {}) {
        return (
          Object.keys(t).forEach((e) => {
            n[e] = t[e];
          }),
          n
        );
      }
      function HI(t) {
        const n = new Map();
        return (
          Object.keys(t).forEach((e) => {
            n.set(e, t[e]);
          }),
          n
        );
      }
      function co(t, n = new Map(), e) {
        if (e) for (let [i, o] of e) n.set(i, o);
        for (let [i, o] of t) n.set(i, o);
        return n;
      }
      function di(t, n, e) {
        n.forEach((i, o) => {
          const r = Qg(o);
          e && !e.has(o) && e.set(o, t.style[r]), (t.style[r] = i);
        });
      }
      function Vo(t, n) {
        n.forEach((e, i) => {
          const o = Qg(i);
          t.style[o] = "";
        });
      }
      function qa(t) {
        return Array.isArray(t) ? (1 == t.length ? t[0] : Ew(t)) : t;
      }
      const Yg = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function $I(t) {
        let n = [];
        if ("string" == typeof t) {
          let e;
          for (; (e = Yg.exec(t)); ) n.push(e[1]);
          Yg.lastIndex = 0;
        }
        return n;
      }
      function Za(t, n, e) {
        const i = t.toString(),
          o = i.replace(Yg, (r, s) => {
            let a = n[s];
            return (
              null == a &&
                (e.push(
                  (function UK(t) {
                    return new O(3003, !1);
                  })()
                ),
                (a = "")),
              a.toString()
            );
          });
        return o == i ? t : o;
      }
      function Hu(t) {
        const n = [];
        let e = t.next();
        for (; !e.done; ) n.push(e.value), (e = t.next());
        return n;
      }
      const Oq = /-+([a-z0-9])/g;
      function Qg(t) {
        return t.replace(Oq, (...n) => n[1].toUpperCase());
      }
      function bn(t, n, e) {
        switch (n.type) {
          case 7:
            return t.visitTrigger(n, e);
          case 0:
            return t.visitState(n, e);
          case 1:
            return t.visitTransition(n, e);
          case 2:
            return t.visitSequence(n, e);
          case 3:
            return t.visitGroup(n, e);
          case 4:
            return t.visitAnimate(n, e);
          case 5:
            return t.visitKeyframes(n, e);
          case 6:
            return t.visitStyle(n, e);
          case 8:
            return t.visitReference(n, e);
          case 9:
            return t.visitAnimateChild(n, e);
          case 10:
            return t.visitAnimateRef(n, e);
          case 11:
            return t.visitQuery(n, e);
          case 12:
            return t.visitStagger(n, e);
          default:
            throw (function GK(t) {
              return new O(3004, !1);
            })();
        }
      }
      function jI(t, n) {
        return window.getComputedStyle(t)[n];
      }
      const zu = "*";
      function Rq(t, n) {
        const e = [];
        return (
          "string" == typeof t
            ? t.split(/\s*,\s*/).forEach((i) =>
                (function Fq(t, n, e) {
                  if (":" == t[0]) {
                    const l = (function Lq(t, n) {
                      switch (t) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, i) => parseFloat(i) > parseFloat(e);
                        case ":decrement":
                          return (e, i) => parseFloat(i) < parseFloat(e);
                        default:
                          return (
                            n.push(
                              (function rq(t) {
                                return new O(3016, !1);
                              })()
                            ),
                            "* => *"
                          );
                      }
                    })(t, e);
                    if ("function" == typeof l) return void n.push(l);
                    t = l;
                  }
                  const i = t.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      e.push(
                        (function oq(t) {
                          return new O(3015, !1);
                        })()
                      ),
                      n
                    );
                  const o = i[1],
                    r = i[2],
                    s = i[3];
                  n.push(UI(o, s));
                  "<" == r[0] && !(o == zu && s == zu) && n.push(UI(s, o));
                })(i, e, n)
              )
            : e.push(t),
          e
        );
      }
      const $u = new Set(["true", "1"]),
        ju = new Set(["false", "0"]);
      function UI(t, n) {
        const e = $u.has(t) || ju.has(t),
          i = $u.has(n) || ju.has(n);
        return (o, r) => {
          let s = t == zu || t == o,
            a = n == zu || n == r;
          return (
            !s && e && "boolean" == typeof o && (s = o ? $u.has(t) : ju.has(t)),
            !a && i && "boolean" == typeof r && (a = r ? $u.has(n) : ju.has(n)),
            s && a
          );
        };
      }
      const Pq = new RegExp("s*:selfs*,?", "g");
      function Jg(t, n, e, i) {
        return new Nq(t).build(n, e, i);
      }
      class Nq {
        constructor(n) {
          this._driver = n;
        }
        build(n, e, i) {
          const o = new Hq(e);
          return this._resetContextStyleTimingState(o), bn(this, qa(n), o);
        }
        _resetContextStyleTimingState(n) {
          (n.currentQuerySelector = ""),
            (n.collectedStyles = new Map()),
            n.collectedStyles.set("", new Map()),
            (n.currentTime = 0);
        }
        visitTrigger(n, e) {
          let i = (e.queryCount = 0),
            o = (e.depCount = 0);
          const r = [],
            s = [];
          return (
            "@" == n.name.charAt(0) &&
              e.errors.push(
                (function KK() {
                  return new O(3006, !1);
                })()
              ),
            n.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(e), 0 == a.type)) {
                const l = a,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((u) => {
                    (l.name = u), r.push(this.visitState(l, e));
                  }),
                  (l.name = c);
              } else if (1 == a.type) {
                const l = this.visitTransition(a, e);
                (i += l.queryCount), (o += l.depCount), s.push(l);
              } else
                e.errors.push(
                  (function qK() {
                    return new O(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: n.name,
              states: r,
              transitions: s,
              queryCount: i,
              depCount: o,
              options: null,
            }
          );
        }
        visitState(n, e) {
          const i = this.visitStyle(n.styles, e),
            o = (n.options && n.options.params) || null;
          if (i.containsDynamicStyles) {
            const r = new Set(),
              s = o || {};
            i.styles.forEach((a) => {
              a instanceof Map &&
                a.forEach((l) => {
                  $I(l).forEach((c) => {
                    s.hasOwnProperty(c) || r.add(c);
                  });
                });
            }),
              r.size &&
                (Hu(r.values()),
                e.errors.push(
                  (function ZK(t, n) {
                    return new O(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: n.name,
            style: i,
            options: o ? { params: o } : null,
          };
        }
        visitTransition(n, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const i = bn(this, qa(n.animation), e);
          return {
            type: 1,
            matchers: Rq(n.expr, e.errors),
            animation: i,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: Bo(n.options),
          };
        }
        visitSequence(n, e) {
          return {
            type: 2,
            steps: n.steps.map((i) => bn(this, i, e)),
            options: Bo(n.options),
          };
        }
        visitGroup(n, e) {
          const i = e.currentTime;
          let o = 0;
          const r = n.steps.map((s) => {
            e.currentTime = i;
            const a = bn(this, s, e);
            return (o = Math.max(o, e.currentTime)), a;
          });
          return (
            (e.currentTime = o), { type: 3, steps: r, options: Bo(n.options) }
          );
        }
        visitAnimate(n, e) {
          const i = (function $q(t, n) {
            if (t.hasOwnProperty("duration")) return t;
            if ("number" == typeof t) return Xg(Bu(t, n).duration, 0, "");
            const e = t;
            if (
              e
                .split(/\s+/)
                .some((r) => "{" == r.charAt(0) && "{" == r.charAt(1))
            ) {
              const r = Xg(0, 0, "");
              return (r.dynamic = !0), (r.strValue = e), r;
            }
            const o = Bu(e, n);
            return Xg(o.duration, o.delay, o.easing);
          })(n.timings, e.errors);
          e.currentAnimateTimings = i;
          let o,
            r = n.styles ? n.styles : Pn({});
          if (5 == r.type) o = this.visitKeyframes(r, e);
          else {
            let s = n.styles,
              a = !1;
            if (!s) {
              a = !0;
              const c = {};
              i.easing && (c.easing = i.easing), (s = Pn(c));
            }
            e.currentTime += i.duration + i.delay;
            const l = this.visitStyle(s, e);
            (l.isEmptyStep = a), (o = l);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: i, style: o, options: null }
          );
        }
        visitStyle(n, e) {
          const i = this._makeStyleAst(n, e);
          return this._validateStyleAst(i, e), i;
        }
        _makeStyleAst(n, e) {
          const i = [],
            o = Array.isArray(n.styles) ? n.styles : [n.styles];
          for (let a of o)
            "string" == typeof a
              ? a === ki
                ? i.push(a)
                : e.errors.push(new O(3002, !1))
              : i.push(HI(a));
          let r = !1,
            s = null;
          return (
            i.forEach((a) => {
              if (
                a instanceof Map &&
                (a.has("easing") && ((s = a.get("easing")), a.delete("easing")),
                !r)
              )
                for (let l of a.values())
                  if (l.toString().indexOf("{{") >= 0) {
                    r = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: i,
              easing: s,
              offset: n.offset,
              containsDynamicStyles: r,
              options: null,
            }
          );
        }
        _validateStyleAst(n, e) {
          const i = e.currentAnimateTimings;
          let o = e.currentTime,
            r = e.currentTime;
          i && r > 0 && (r -= i.duration + i.delay),
            n.styles.forEach((s) => {
              "string" != typeof s &&
                s.forEach((a, l) => {
                  const c = e.collectedStyles.get(e.currentQuerySelector),
                    u = c.get(l);
                  let h = !0;
                  u &&
                    (r != o &&
                      r >= u.startTime &&
                      o <= u.endTime &&
                      (e.errors.push(
                        (function QK(t, n, e, i, o) {
                          return new O(3010, !1);
                        })()
                      ),
                      (h = !1)),
                    (r = u.startTime)),
                    h && c.set(l, { startTime: r, endTime: o }),
                    e.options &&
                      (function Mq(t, n, e) {
                        const i = n.params || {},
                          o = $I(t);
                        o.length &&
                          o.forEach((r) => {
                            i.hasOwnProperty(r) ||
                              e.push(
                                (function jK(t) {
                                  return new O(3001, !1);
                                })()
                              );
                          });
                      })(a, e.options, e.errors);
                });
            });
        }
        visitKeyframes(n, e) {
          const i = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                (function JK() {
                  return new O(3011, !1);
                })()
              ),
              i
            );
          let r = 0;
          const s = [];
          let a = !1,
            l = !1,
            c = 0;
          const u = n.steps.map((M) => {
            const E = this._makeStyleAst(M, e);
            let F =
                null != E.offset
                  ? E.offset
                  : (function zq(t) {
                      if ("string" == typeof t) return null;
                      let n = null;
                      if (Array.isArray(t))
                        t.forEach((e) => {
                          if (e instanceof Map && e.has("offset")) {
                            const i = e;
                            (n = parseFloat(i.get("offset"))),
                              i.delete("offset");
                          }
                        });
                      else if (t instanceof Map && t.has("offset")) {
                        const e = t;
                        (n = parseFloat(e.get("offset"))), e.delete("offset");
                      }
                      return n;
                    })(E.styles),
              V = 0;
            return (
              null != F && (r++, (V = E.offset = F)),
              (l = l || V < 0 || V > 1),
              (a = a || V < c),
              (c = V),
              s.push(V),
              E
            );
          });
          l &&
            e.errors.push(
              (function XK() {
                return new O(3012, !1);
              })()
            ),
            a &&
              e.errors.push(
                (function eq() {
                  return new O(3200, !1);
                })()
              );
          const h = n.steps.length;
          let m = 0;
          r > 0 && r < h
            ? e.errors.push(
                (function tq() {
                  return new O(3202, !1);
                })()
              )
            : 0 == r && (m = 1 / (h - 1));
          const _ = h - 1,
            b = e.currentTime,
            C = e.currentAnimateTimings,
            I = C.duration;
          return (
            u.forEach((M, E) => {
              const F = m > 0 ? (E == _ ? 1 : m * E) : s[E],
                V = F * I;
              (e.currentTime = b + C.delay + V),
                (C.duration = V),
                this._validateStyleAst(M, e),
                (M.offset = F),
                i.styles.push(M);
            }),
            i
          );
        }
        visitReference(n, e) {
          return {
            type: 8,
            animation: bn(this, qa(n.animation), e),
            options: Bo(n.options),
          };
        }
        visitAnimateChild(n, e) {
          return e.depCount++, { type: 9, options: Bo(n.options) };
        }
        visitAnimateRef(n, e) {
          return {
            type: 10,
            animation: this.visitReference(n.animation, e),
            options: Bo(n.options),
          };
        }
        visitQuery(n, e) {
          const i = e.currentQuerySelector,
            o = n.options || {};
          e.queryCount++, (e.currentQuery = n);
          const [r, s] = (function Vq(t) {
            const n = !!t.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              n && (t = t.replace(Pq, "")),
              (t = t
                .replace(/@\*/g, Vu)
                .replace(/@\w+/g, (e) => Vu + "-" + e.slice(1))
                .replace(/:animating/g, qg)),
              [t, n]
            );
          })(n.selector);
          (e.currentQuerySelector = i.length ? i + " " + r : r),
            vn(e.collectedStyles, e.currentQuerySelector, new Map());
          const a = bn(this, qa(n.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = i),
            {
              type: 11,
              selector: r,
              limit: o.limit || 0,
              optional: !!o.optional,
              includeSelf: s,
              animation: a,
              originalSelector: n.selector,
              options: Bo(n.options),
            }
          );
        }
        visitStagger(n, e) {
          e.currentQuery ||
            e.errors.push(
              (function nq() {
                return new O(3013, !1);
              })()
            );
          const i =
            "full" === n.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : Bu(n.timings, e.errors, !0);
          return {
            type: 12,
            animation: bn(this, qa(n.animation), e),
            timings: i,
            options: null,
          };
        }
      }
      class Hq {
        constructor(n) {
          (this.errors = n),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function Bo(t) {
        return (
          t
            ? (t = Ka(t)).params &&
              (t.params = (function Bq(t) {
                return t ? Ka(t) : null;
              })(t.params))
            : (t = {}),
          t
        );
      }
      function Xg(t, n, e) {
        return { duration: t, delay: n, easing: e };
      }
      function em(t, n, e, i, o, r, s = null, a = !1) {
        return {
          type: 1,
          element: t,
          keyframes: n,
          preStyleProps: e,
          postStyleProps: i,
          duration: o,
          delay: r,
          totalTime: o + r,
          easing: s,
          subTimeline: a,
        };
      }
      class Uu {
        constructor() {
          this._map = new Map();
        }
        get(n) {
          return this._map.get(n) || [];
        }
        append(n, e) {
          let i = this._map.get(n);
          i || this._map.set(n, (i = [])), i.push(...e);
        }
        has(n) {
          return this._map.has(n);
        }
        clear() {
          this._map.clear();
        }
      }
      const Gq = new RegExp(":enter", "g"),
        Kq = new RegExp(":leave", "g");
      function tm(t, n, e, i, o, r = new Map(), s = new Map(), a, l, c = []) {
        return new qq().buildKeyframes(t, n, e, i, o, r, s, a, l, c);
      }
      class qq {
        buildKeyframes(n, e, i, o, r, s, a, l, c, u = []) {
          c = c || new Uu();
          const h = new nm(n, e, c, o, r, u, []);
          h.options = l;
          const m = l.delay ? Ni(l.delay) : 0;
          h.currentTimeline.delayNextStep(m),
            h.currentTimeline.setStyles([s], null, h.errors, l),
            bn(this, i, h);
          const _ = h.timelines.filter((b) => b.containsAnimation());
          if (_.length && a.size) {
            let b;
            for (let C = _.length - 1; C >= 0; C--) {
              const I = _[C];
              if (I.element === e) {
                b = I;
                break;
              }
            }
            b &&
              !b.allowOnlyTimelineStyles() &&
              b.setStyles([a], null, h.errors, l);
          }
          return _.length
            ? _.map((b) => b.buildKeyframes())
            : [em(e, [], [], [], 0, m, "", !1)];
        }
        visitTrigger(n, e) {}
        visitState(n, e) {}
        visitTransition(n, e) {}
        visitAnimateChild(n, e) {
          const i = e.subInstructions.get(e.element);
          if (i) {
            const o = e.createSubContext(n.options),
              r = e.currentTimeline.currentTime,
              s = this._visitSubInstructions(i, o, o.options);
            r != s && e.transformIntoNewTimeline(s);
          }
          e.previousNode = n;
        }
        visitAnimateRef(n, e) {
          const i = e.createSubContext(n.options);
          i.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [n.options, n.animation.options],
              e,
              i
            ),
            this.visitReference(n.animation, i),
            e.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (e.previousNode = n);
        }
        _applyAnimationRefDelays(n, e, i) {
          for (const o of n) {
            const r = o?.delay;
            if (r) {
              const s =
                "number" == typeof r ? r : Ni(Za(r, o?.params ?? {}, e.errors));
              i.delayNextStep(s);
            }
          }
        }
        _visitSubInstructions(n, e, i) {
          let r = e.currentTimeline.currentTime;
          const s = null != i.duration ? Ni(i.duration) : null,
            a = null != i.delay ? Ni(i.delay) : null;
          return (
            0 !== s &&
              n.forEach((l) => {
                const c = e.appendInstructionToTimeline(l, s, a);
                r = Math.max(r, c.duration + c.delay);
              }),
            r
          );
        }
        visitReference(n, e) {
          e.updateOptions(n.options, !0),
            bn(this, n.animation, e),
            (e.previousNode = n);
        }
        visitSequence(n, e) {
          const i = e.subContextCount;
          let o = e;
          const r = n.options;
          if (
            r &&
            (r.params || r.delay) &&
            ((o = e.createSubContext(r)),
            o.transformIntoNewTimeline(),
            null != r.delay)
          ) {
            6 == o.previousNode.type &&
              (o.currentTimeline.snapshotCurrentStyles(),
              (o.previousNode = Gu));
            const s = Ni(r.delay);
            o.delayNextStep(s);
          }
          n.steps.length &&
            (n.steps.forEach((s) => bn(this, s, o)),
            o.currentTimeline.applyStylesToKeyframe(),
            o.subContextCount > i && o.transformIntoNewTimeline()),
            (e.previousNode = n);
        }
        visitGroup(n, e) {
          const i = [];
          let o = e.currentTimeline.currentTime;
          const r = n.options && n.options.delay ? Ni(n.options.delay) : 0;
          n.steps.forEach((s) => {
            const a = e.createSubContext(n.options);
            r && a.delayNextStep(r),
              bn(this, s, a),
              (o = Math.max(o, a.currentTimeline.currentTime)),
              i.push(a.currentTimeline);
          }),
            i.forEach((s) => e.currentTimeline.mergeTimelineCollectedStyles(s)),
            e.transformIntoNewTimeline(o),
            (e.previousNode = n);
        }
        _visitTiming(n, e) {
          if (n.dynamic) {
            const i = n.strValue;
            return Bu(e.params ? Za(i, e.params, e.errors) : i, e.errors);
          }
          return { duration: n.duration, delay: n.delay, easing: n.easing };
        }
        visitAnimate(n, e) {
          const i = (e.currentAnimateTimings = this._visitTiming(n.timings, e)),
            o = e.currentTimeline;
          i.delay && (e.incrementTime(i.delay), o.snapshotCurrentStyles());
          const r = n.style;
          5 == r.type
            ? this.visitKeyframes(r, e)
            : (e.incrementTime(i.duration),
              this.visitStyle(r, e),
              o.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = n);
        }
        visitStyle(n, e) {
          const i = e.currentTimeline,
            o = e.currentAnimateTimings;
          !o && i.hasCurrentStyleProperties() && i.forwardFrame();
          const r = (o && o.easing) || n.easing;
          n.isEmptyStep
            ? i.applyEmptyStep(r)
            : i.setStyles(n.styles, r, e.errors, e.options),
            (e.previousNode = n);
        }
        visitKeyframes(n, e) {
          const i = e.currentAnimateTimings,
            o = e.currentTimeline.duration,
            r = i.duration,
            a = e.createSubContext().currentTimeline;
          (a.easing = i.easing),
            n.styles.forEach((l) => {
              a.forwardTime((l.offset || 0) * r),
                a.setStyles(l.styles, l.easing, e.errors, e.options),
                a.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(a),
            e.transformIntoNewTimeline(o + r),
            (e.previousNode = n);
        }
        visitQuery(n, e) {
          const i = e.currentTimeline.currentTime,
            o = n.options || {},
            r = o.delay ? Ni(o.delay) : 0;
          r &&
            (6 === e.previousNode.type ||
              (0 == i && e.currentTimeline.hasCurrentStyleProperties())) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = Gu));
          let s = i;
          const a = e.invokeQuery(
            n.selector,
            n.originalSelector,
            n.limit,
            n.includeSelf,
            !!o.optional,
            e.errors
          );
          e.currentQueryTotal = a.length;
          let l = null;
          a.forEach((c, u) => {
            e.currentQueryIndex = u;
            const h = e.createSubContext(n.options, c);
            r && h.delayNextStep(r),
              c === e.element && (l = h.currentTimeline),
              bn(this, n.animation, h),
              h.currentTimeline.applyStylesToKeyframe(),
              (s = Math.max(s, h.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(s),
            l &&
              (e.currentTimeline.mergeTimelineCollectedStyles(l),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = n);
        }
        visitStagger(n, e) {
          const i = e.parentContext,
            o = e.currentTimeline,
            r = n.timings,
            s = Math.abs(r.duration),
            a = s * (e.currentQueryTotal - 1);
          let l = s * e.currentQueryIndex;
          switch (r.duration < 0 ? "reverse" : r.easing) {
            case "reverse":
              l = a - l;
              break;
            case "full":
              l = i.currentStaggerTime;
          }
          const u = e.currentTimeline;
          l && u.delayNextStep(l);
          const h = u.currentTime;
          bn(this, n.animation, e),
            (e.previousNode = n),
            (i.currentStaggerTime =
              o.currentTime - h + (o.startTime - i.currentTimeline.startTime));
        }
      }
      const Gu = {};
      class nm {
        constructor(n, e, i, o, r, s, a, l) {
          (this._driver = n),
            (this.element = e),
            (this.subInstructions = i),
            (this._enterClassName = o),
            (this._leaveClassName = r),
            (this.errors = s),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Gu),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new Wu(this._driver, e, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(n, e) {
          if (!n) return;
          const i = n;
          let o = this.options;
          null != i.duration && (o.duration = Ni(i.duration)),
            null != i.delay && (o.delay = Ni(i.delay));
          const r = i.params;
          if (r) {
            let s = o.params;
            s || (s = this.options.params = {}),
              Object.keys(r).forEach((a) => {
                (!e || !s.hasOwnProperty(a)) &&
                  (s[a] = Za(r[a], s, this.errors));
              });
          }
        }
        _copyOptions() {
          const n = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const i = (n.params = {});
              Object.keys(e).forEach((o) => {
                i[o] = e[o];
              });
            }
          }
          return n;
        }
        createSubContext(n = null, e, i) {
          const o = e || this.element,
            r = new nm(
              this._driver,
              o,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(o, i || 0)
            );
          return (
            (r.previousNode = this.previousNode),
            (r.currentAnimateTimings = this.currentAnimateTimings),
            (r.options = this._copyOptions()),
            r.updateOptions(n),
            (r.currentQueryIndex = this.currentQueryIndex),
            (r.currentQueryTotal = this.currentQueryTotal),
            (r.parentContext = this),
            this.subContextCount++,
            r
          );
        }
        transformIntoNewTimeline(n) {
          return (
            (this.previousNode = Gu),
            (this.currentTimeline = this.currentTimeline.fork(this.element, n)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(n, e, i) {
          const o = {
              duration: e ?? n.duration,
              delay: this.currentTimeline.currentTime + (i ?? 0) + n.delay,
              easing: "",
            },
            r = new Zq(
              this._driver,
              n.element,
              n.keyframes,
              n.preStyleProps,
              n.postStyleProps,
              o,
              n.stretchStartingKeyframe
            );
          return this.timelines.push(r), o;
        }
        incrementTime(n) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + n);
        }
        delayNextStep(n) {
          n > 0 && this.currentTimeline.delayNextStep(n);
        }
        invokeQuery(n, e, i, o, r, s) {
          let a = [];
          if ((o && a.push(this.element), n.length > 0)) {
            n = (n = n.replace(Gq, "." + this._enterClassName)).replace(
              Kq,
              "." + this._leaveClassName
            );
            let c = this._driver.query(this.element, n, 1 != i);
            0 !== i &&
              (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)),
              a.push(...c);
          }
          return (
            !r &&
              0 == a.length &&
              s.push(
                (function iq(t) {
                  return new O(3014, !1);
                })()
              ),
            a
          );
        }
      }
      class Wu {
        constructor(n, e, i, o) {
          (this._driver = n),
            (this.element = e),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = o),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(n) {
          const e = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || e
            ? (this.forwardTime(this.currentTime + n),
              e && this.snapshotCurrentStyles())
            : (this.startTime += n);
        }
        fork(n, e) {
          return (
            this.applyStylesToKeyframe(),
            new Wu(
              this._driver,
              n,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(n) {
          this.applyStylesToKeyframe(),
            (this.duration = n),
            this._loadKeyframe();
        }
        _updateStyle(n, e) {
          this._localTimelineStyles.set(n, e),
            this._globalTimelineStyles.set(n, e),
            this._styleSummary.set(n, { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(n) {
          n && this._previousKeyframe.set("easing", n);
          for (let [e, i] of this._globalTimelineStyles)
            this._backFill.set(e, i || ki), this._currentKeyframe.set(e, ki);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(n, e, i, o) {
          e && this._previousKeyframe.set("easing", e);
          const r = (o && o.params) || {},
            s = (function Yq(t, n) {
              const e = new Map();
              let i;
              return (
                t.forEach((o) => {
                  if ("*" === o) {
                    i = i || n.keys();
                    for (let r of i) e.set(r, ki);
                  } else co(o, e);
                }),
                e
              );
            })(n, this._globalTimelineStyles);
          for (let [a, l] of s) {
            const c = Za(l, r, i);
            this._pendingStyles.set(a, c),
              this._localTimelineStyles.has(a) ||
                this._backFill.set(a, this._globalTimelineStyles.get(a) ?? ki),
              this._updateStyle(a, c);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((n, e) => {
              this._currentKeyframe.set(e, n);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((n, e) => {
              this._currentKeyframe.has(e) || this._currentKeyframe.set(e, n);
            }));
        }
        snapshotCurrentStyles() {
          for (let [n, e] of this._localTimelineStyles)
            this._pendingStyles.set(n, e), this._updateStyle(n, e);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const n = [];
          for (let e in this._currentKeyframe) n.push(e);
          return n;
        }
        mergeTimelineCollectedStyles(n) {
          n._styleSummary.forEach((e, i) => {
            const o = this._styleSummary.get(i);
            (!o || e.time > o.time) && this._updateStyle(i, e.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const n = new Set(),
            e = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let o = [];
          this._keyframes.forEach((a, l) => {
            const c = co(a, new Map(), this._backFill);
            c.forEach((u, h) => {
              "!" === u ? n.add(h) : u === ki && e.add(h);
            }),
              i || c.set("offset", l / this.duration),
              o.push(c);
          });
          const r = n.size ? Hu(n.values()) : [],
            s = e.size ? Hu(e.values()) : [];
          if (i) {
            const a = o[0],
              l = new Map(a);
            a.set("offset", 0), l.set("offset", 1), (o = [a, l]);
          }
          return em(
            this.element,
            o,
            r,
            s,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class Zq extends Wu {
        constructor(n, e, i, o, r, s, a = !1) {
          super(n, e, s.delay),
            (this.keyframes = i),
            (this.preStyleProps = o),
            (this.postStyleProps = r),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: s.duration,
              delay: s.delay,
              easing: s.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let n = this.keyframes,
            { delay: e, duration: i, easing: o } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const r = [],
              s = i + e,
              a = e / s,
              l = co(n[0]);
            l.set("offset", 0), r.push(l);
            const c = co(n[0]);
            c.set("offset", KI(a)), r.push(c);
            const u = n.length - 1;
            for (let h = 1; h <= u; h++) {
              let m = co(n[h]);
              const _ = m.get("offset");
              m.set("offset", KI((e + _ * i) / s)), r.push(m);
            }
            (i = s), (e = 0), (o = ""), (n = r);
          }
          return em(
            this.element,
            n,
            this.preStyleProps,
            this.postStyleProps,
            i,
            e,
            o,
            !0
          );
        }
      }
      function KI(t, n = 3) {
        const e = Math.pow(10, n - 1);
        return Math.round(t * e) / e;
      }
      class im {}
      const Qq = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class Jq extends im {
        normalizePropertyName(n, e) {
          return Qg(n);
        }
        normalizeStyleValue(n, e, i, o) {
          let r = "";
          const s = i.toString().trim();
          if (Qq.has(e) && 0 !== i && "0" !== i)
            if ("number" == typeof i) r = "px";
            else {
              const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                o.push(
                  (function WK(t, n) {
                    return new O(3005, !1);
                  })()
                );
            }
          return s + r;
        }
      }
      function qI(t, n, e, i, o, r, s, a, l, c, u, h, m) {
        return {
          type: 0,
          element: t,
          triggerName: n,
          isRemovalTransition: o,
          fromState: e,
          fromStyles: r,
          toState: i,
          toStyles: s,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: u,
          totalTime: h,
          errors: m,
        };
      }
      const om = {};
      class ZI {
        constructor(n, e, i) {
          (this._triggerName = n), (this.ast = e), (this._stateStyles = i);
        }
        match(n, e, i, o) {
          return (function Xq(t, n, e, i, o) {
            return t.some((r) => r(n, e, i, o));
          })(this.ast.matchers, n, e, i, o);
        }
        buildStyles(n, e, i) {
          let o = this._stateStyles.get("*");
          return (
            void 0 !== n && (o = this._stateStyles.get(n?.toString()) || o),
            o ? o.buildStyles(e, i) : new Map()
          );
        }
        build(n, e, i, o, r, s, a, l, c, u) {
          const h = [],
            m = (this.ast.options && this.ast.options.params) || om,
            b = this.buildStyles(i, (a && a.params) || om, h),
            C = (l && l.params) || om,
            I = this.buildStyles(o, C, h),
            M = new Set(),
            E = new Map(),
            F = new Map(),
            V = "void" === o,
            Z = { params: eZ(C, m), delay: this.ast.options?.delay },
            ge = u ? [] : tm(n, e, this.ast.animation, r, s, b, I, Z, c, h);
          let Ae = 0;
          if (
            (ge.forEach((Ke) => {
              Ae = Math.max(Ke.duration + Ke.delay, Ae);
            }),
            h.length)
          )
            return qI(e, this._triggerName, i, o, V, b, I, [], [], E, F, Ae, h);
          ge.forEach((Ke) => {
            const Ft = Ke.element,
              td = vn(E, Ft, new Set());
            Ke.preStyleProps.forEach((zo) => td.add(zo));
            const Xa = vn(F, Ft, new Set());
            Ke.postStyleProps.forEach((zo) => Xa.add(zo)),
              Ft !== e && M.add(Ft);
          });
          const ze = Hu(M.values());
          return qI(e, this._triggerName, i, o, V, b, I, ge, ze, E, F, Ae);
        }
      }
      function eZ(t, n) {
        const e = Ka(n);
        for (const i in t) t.hasOwnProperty(i) && null != t[i] && (e[i] = t[i]);
        return e;
      }
      class tZ {
        constructor(n, e, i) {
          (this.styles = n), (this.defaultParams = e), (this.normalizer = i);
        }
        buildStyles(n, e) {
          const i = new Map(),
            o = Ka(this.defaultParams);
          return (
            Object.keys(n).forEach((r) => {
              const s = n[r];
              null !== s && (o[r] = s);
            }),
            this.styles.styles.forEach((r) => {
              "string" != typeof r &&
                r.forEach((s, a) => {
                  s && (s = Za(s, o, e));
                  const l = this.normalizer.normalizePropertyName(a, e);
                  (s = this.normalizer.normalizeStyleValue(a, l, s, e)),
                    i.set(a, s);
                });
            }),
            i
          );
        }
      }
      class iZ {
        constructor(n, e, i) {
          (this.name = n),
            (this.ast = e),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = new Map()),
            e.states.forEach((o) => {
              this.states.set(
                o.name,
                new tZ(o.style, (o.options && o.options.params) || {}, i)
              );
            }),
            YI(this.states, "true", "1"),
            YI(this.states, "false", "0"),
            e.transitions.forEach((o) => {
              this.transitionFactories.push(new ZI(n, o, this.states));
            }),
            (this.fallbackTransition = (function oZ(t, n, e) {
              return new ZI(
                t,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(s, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                n
              );
            })(n, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(n, e, i, o) {
          return (
            this.transitionFactories.find((s) => s.match(n, e, i, o)) || null
          );
        }
        matchStyles(n, e, i) {
          return this.fallbackTransition.buildStyles(n, e, i);
        }
      }
      function YI(t, n, e) {
        t.has(n)
          ? t.has(e) || t.set(e, t.get(n))
          : t.has(e) && t.set(n, t.get(e));
      }
      const rZ = new Uu();
      class sZ {
        constructor(n, e, i) {
          (this.bodyNode = n),
            (this._driver = e),
            (this._normalizer = i),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(n, e) {
          const i = [],
            r = Jg(this._driver, e, i, []);
          if (i.length)
            throw (function uq(t) {
              return new O(3503, !1);
            })();
          this._animations.set(n, r);
        }
        _buildPlayer(n, e, i) {
          const o = n.element,
            r = kI(this._normalizer, n.keyframes, e, i);
          return this._driver.animate(
            o,
            r,
            n.duration,
            n.delay,
            n.easing,
            [],
            !0
          );
        }
        create(n, e, i = {}) {
          const o = [],
            r = this._animations.get(n);
          let s;
          const a = new Map();
          if (
            (r
              ? ((s = tm(
                  this._driver,
                  e,
                  r,
                  Kg,
                  Pu,
                  new Map(),
                  new Map(),
                  i,
                  rZ,
                  o
                )),
                s.forEach((u) => {
                  const h = vn(a, u.element, new Map());
                  u.postStyleProps.forEach((m) => h.set(m, null));
                }))
              : (o.push(
                  (function dq() {
                    return new O(3300, !1);
                  })()
                ),
                (s = [])),
            o.length)
          )
            throw (function pq(t) {
              return new O(3504, !1);
            })();
          a.forEach((u, h) => {
            u.forEach((m, _) => {
              u.set(_, this._driver.computeStyle(h, _, ki));
            });
          });
          const c = lo(
            s.map((u) => {
              const h = a.get(u.element);
              return this._buildPlayer(u, new Map(), h);
            })
          );
          return (
            this._playersById.set(n, c),
            c.onDestroy(() => this.destroy(n)),
            this.players.push(c),
            c
          );
        }
        destroy(n) {
          const e = this._getPlayer(n);
          e.destroy(), this._playersById.delete(n);
          const i = this.players.indexOf(e);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(n) {
          const e = this._playersById.get(n);
          if (!e)
            throw (function hq(t) {
              return new O(3301, !1);
            })();
          return e;
        }
        listen(n, e, i, o) {
          const r = Ug(e, "", "", "");
          return $g(this._getPlayer(n), i, r, o), () => {};
        }
        command(n, e, i, o) {
          if ("register" == i) return void this.register(n, o[0]);
          if ("create" == i) return void this.create(n, e, o[0] || {});
          const r = this._getPlayer(n);
          switch (i) {
            case "play":
              r.play();
              break;
            case "pause":
              r.pause();
              break;
            case "reset":
              r.reset();
              break;
            case "restart":
              r.restart();
              break;
            case "finish":
              r.finish();
              break;
            case "init":
              r.init();
              break;
            case "setPosition":
              r.setPosition(parseFloat(o[0]));
              break;
            case "destroy":
              this.destroy(n);
          }
        }
      }
      const QI = "ng-animate-queued",
        rm = "ng-animate-disabled",
        dZ = [],
        JI = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        pZ = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        Yn = "__ng_removed";
      class sm {
        get params() {
          return this.options.params;
        }
        constructor(n, e = "") {
          this.namespaceId = e;
          const i = n && n.hasOwnProperty("value");
          if (
            ((this.value = (function mZ(t) {
              return t ?? null;
            })(i ? n.value : n)),
            i)
          ) {
            const r = Ka(n);
            delete r.value, (this.options = r);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(n) {
          const e = n.params;
          if (e) {
            const i = this.options.params;
            Object.keys(e).forEach((o) => {
              null == i[o] && (i[o] = e[o]);
            });
          }
        }
      }
      const Ya = "void",
        am = new sm(Ya);
      class hZ {
        constructor(n, e, i) {
          (this.id = n),
            (this.hostElement = e),
            (this._engine = i),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + n),
            Vn(e, this._hostClassName);
        }
        listen(n, e, i, o) {
          if (!this._triggers.has(e))
            throw (function fq(t, n) {
              return new O(3302, !1);
            })();
          if (null == i || 0 == i.length)
            throw (function gq(t) {
              return new O(3303, !1);
            })();
          if (
            !(function _Z(t) {
              return "start" == t || "done" == t;
            })(i)
          )
            throw (function mq(t, n) {
              return new O(3400, !1);
            })();
          const r = vn(this._elementListeners, n, []),
            s = { name: e, phase: i, callback: o };
          r.push(s);
          const a = vn(this._engine.statesByElement, n, new Map());
          return (
            a.has(e) || (Vn(n, Nu), Vn(n, Nu + "-" + e), a.set(e, am)),
            () => {
              this._engine.afterFlush(() => {
                const l = r.indexOf(s);
                l >= 0 && r.splice(l, 1), this._triggers.has(e) || a.delete(e);
              });
            }
          );
        }
        register(n, e) {
          return !this._triggers.has(n) && (this._triggers.set(n, e), !0);
        }
        _getTrigger(n) {
          const e = this._triggers.get(n);
          if (!e)
            throw (function _q(t) {
              return new O(3401, !1);
            })();
          return e;
        }
        trigger(n, e, i, o = !0) {
          const r = this._getTrigger(e),
            s = new lm(this.id, e, n);
          let a = this._engine.statesByElement.get(n);
          a ||
            (Vn(n, Nu),
            Vn(n, Nu + "-" + e),
            this._engine.statesByElement.set(n, (a = new Map())));
          let l = a.get(e);
          const c = new sm(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              l &&
              c.absorbOptions(l.options),
            a.set(e, c),
            l || (l = am),
            c.value !== Ya && l.value === c.value)
          ) {
            if (
              !(function bZ(t, n) {
                const e = Object.keys(t),
                  i = Object.keys(n);
                if (e.length != i.length) return !1;
                for (let o = 0; o < e.length; o++) {
                  const r = e[o];
                  if (!n.hasOwnProperty(r) || t[r] !== n[r]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const C = [],
                I = r.matchStyles(l.value, l.params, C),
                M = r.matchStyles(c.value, c.params, C);
              C.length
                ? this._engine.reportError(C)
                : this._engine.afterFlush(() => {
                    Vo(n, I), di(n, M);
                  });
            }
            return;
          }
          const m = vn(this._engine.playersByElement, n, []);
          m.forEach((C) => {
            C.namespaceId == this.id &&
              C.triggerName == e &&
              C.queued &&
              C.destroy();
          });
          let _ = r.matchTransition(l.value, c.value, n, c.params),
            b = !1;
          if (!_) {
            if (!o) return;
            (_ = r.fallbackTransition), (b = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: n,
              triggerName: e,
              transition: _,
              fromState: l,
              toState: c,
              player: s,
              isFallbackTransition: b,
            }),
            b ||
              (Vn(n, QI),
              s.onStart(() => {
                ls(n, QI);
              })),
            s.onDone(() => {
              let C = this.players.indexOf(s);
              C >= 0 && this.players.splice(C, 1);
              const I = this._engine.playersByElement.get(n);
              if (I) {
                let M = I.indexOf(s);
                M >= 0 && I.splice(M, 1);
              }
            }),
            this.players.push(s),
            m.push(s),
            s
          );
        }
        deregister(n) {
          this._triggers.delete(n),
            this._engine.statesByElement.forEach((e) => e.delete(n)),
            this._elementListeners.forEach((e, i) => {
              this._elementListeners.set(
                i,
                e.filter((o) => o.name != n)
              );
            });
        }
        clearElementCache(n) {
          this._engine.statesByElement.delete(n),
            this._elementListeners.delete(n);
          const e = this._engine.playersByElement.get(n);
          e &&
            (e.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(n));
        }
        _signalRemovalForInnerTriggers(n, e) {
          const i = this._engine.driver.query(n, Vu, !0);
          i.forEach((o) => {
            if (o[Yn]) return;
            const r = this._engine.fetchNamespacesByElement(o);
            r.size
              ? r.forEach((s) => s.triggerLeaveAnimation(o, e, !1, !0))
              : this.clearElementCache(o);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((o) => this.clearElementCache(o))
            );
        }
        triggerLeaveAnimation(n, e, i, o) {
          const r = this._engine.statesByElement.get(n),
            s = new Map();
          if (r) {
            const a = [];
            if (
              (r.forEach((l, c) => {
                if ((s.set(c, l.value), this._triggers.has(c))) {
                  const u = this.trigger(n, c, Ya, o);
                  u && a.push(u);
                }
              }),
              a.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, n, !0, e, s),
                i && lo(a).onDone(() => this._engine.processLeaveNode(n)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(n) {
          const e = this._elementListeners.get(n),
            i = this._engine.statesByElement.get(n);
          if (e && i) {
            const o = new Set();
            e.forEach((r) => {
              const s = r.name;
              if (o.has(s)) return;
              o.add(s);
              const l = this._triggers.get(s).fallbackTransition,
                c = i.get(s) || am,
                u = new sm(Ya),
                h = new lm(this.id, s, n);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: n,
                  triggerName: s,
                  transition: l,
                  fromState: c,
                  toState: u,
                  player: h,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(n, e) {
          const i = this._engine;
          if (
            (n.childElementCount && this._signalRemovalForInnerTriggers(n, e),
            this.triggerLeaveAnimation(n, e, !0))
          )
            return;
          let o = !1;
          if (i.totalAnimations) {
            const r = i.players.length ? i.playersByQueriedElement.get(n) : [];
            if (r && r.length) o = !0;
            else {
              let s = n;
              for (; (s = s.parentNode); )
                if (i.statesByElement.get(s)) {
                  o = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(n), o))
            i.markElementAsRemoved(this.id, n, !1, e);
          else {
            const r = n[Yn];
            (!r || r === JI) &&
              (i.afterFlush(() => this.clearElementCache(n)),
              i.destroyInnerAnimations(n),
              i._onRemovalComplete(n, e));
          }
        }
        insertNode(n, e) {
          Vn(n, this._hostClassName);
        }
        drainQueuedTransitions(n) {
          const e = [];
          return (
            this._queue.forEach((i) => {
              const o = i.player;
              if (o.destroyed) return;
              const r = i.element,
                s = this._elementListeners.get(r);
              s &&
                s.forEach((a) => {
                  if (a.name == i.triggerName) {
                    const l = Ug(
                      r,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (l._data = n), $g(i.player, a.phase, l, a.callback);
                  }
                }),
                o.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      o.destroy();
                    })
                  : e.push(i);
            }),
            (this._queue = []),
            e.sort((i, o) => {
              const r = i.transition.ast.depCount,
                s = o.transition.ast.depCount;
              return 0 == r || 0 == s
                ? r - s
                : this._engine.driver.containsElement(i.element, o.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(n) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, n);
        }
      }
      class fZ {
        _onRemovalComplete(n, e) {
          this.onRemovalComplete(n, e);
        }
        constructor(n, e, i) {
          (this.bodyNode = n),
            (this.driver = e),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (o, r) => {});
        }
        get queuedPlayers() {
          const n = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((i) => {
                i.queued && n.push(i);
              });
            }),
            n
          );
        }
        createNamespace(n, e) {
          const i = new hZ(n, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(i, e)
              : (this.newHostElements.set(e, i), this.collectEnterElement(e)),
            (this._namespaceLookup[n] = i)
          );
        }
        _balanceNamespaceList(n, e) {
          const i = this._namespaceList,
            o = this.namespacesByHostElement;
          if (i.length - 1 >= 0) {
            let s = !1,
              a = this.driver.getParentElement(e);
            for (; a; ) {
              const l = o.get(a);
              if (l) {
                const c = i.indexOf(l);
                i.splice(c + 1, 0, n), (s = !0);
                break;
              }
              a = this.driver.getParentElement(a);
            }
            s || i.unshift(n);
          } else i.push(n);
          return o.set(e, n), n;
        }
        register(n, e) {
          let i = this._namespaceLookup[n];
          return i || (i = this.createNamespace(n, e)), i;
        }
        registerTrigger(n, e, i) {
          let o = this._namespaceLookup[n];
          o && o.register(e, i) && this.totalAnimations++;
        }
        destroy(n, e) {
          n &&
            (this.afterFlush(() => {}),
            this.afterFlushAnimationsDone(() => {
              const i = this._fetchNamespace(n);
              this.namespacesByHostElement.delete(i.hostElement);
              const o = this._namespaceList.indexOf(i);
              o >= 0 && this._namespaceList.splice(o, 1),
                i.destroy(e),
                delete this._namespaceLookup[n];
            }));
        }
        _fetchNamespace(n) {
          return this._namespaceLookup[n];
        }
        fetchNamespacesByElement(n) {
          const e = new Set(),
            i = this.statesByElement.get(n);
          if (i)
            for (let o of i.values())
              if (o.namespaceId) {
                const r = this._fetchNamespace(o.namespaceId);
                r && e.add(r);
              }
          return e;
        }
        trigger(n, e, i, o) {
          if (Ku(e)) {
            const r = this._fetchNamespace(n);
            if (r) return r.trigger(e, i, o), !0;
          }
          return !1;
        }
        insertNode(n, e, i, o) {
          if (!Ku(e)) return;
          const r = e[Yn];
          if (r && r.setForRemoval) {
            (r.setForRemoval = !1), (r.setForMove = !0);
            const s = this.collectedLeaveElements.indexOf(e);
            s >= 0 && this.collectedLeaveElements.splice(s, 1);
          }
          if (n) {
            const s = this._fetchNamespace(n);
            s && s.insertNode(e, i);
          }
          o && this.collectEnterElement(e);
        }
        collectEnterElement(n) {
          this.collectedEnterElements.push(n);
        }
        markElementAsDisabled(n, e) {
          e
            ? this.disabledNodes.has(n) ||
              (this.disabledNodes.add(n), Vn(n, rm))
            : this.disabledNodes.has(n) &&
              (this.disabledNodes.delete(n), ls(n, rm));
        }
        removeNode(n, e, i) {
          if (Ku(e)) {
            const o = n ? this._fetchNamespace(n) : null;
            o ? o.removeNode(e, i) : this.markElementAsRemoved(n, e, !1, i);
            const r = this.namespacesByHostElement.get(e);
            r && r.id !== n && r.removeNode(e, i);
          } else this._onRemovalComplete(e, i);
        }
        markElementAsRemoved(n, e, i, o, r) {
          this.collectedLeaveElements.push(e),
            (e[Yn] = {
              namespaceId: n,
              setForRemoval: o,
              hasAnimation: i,
              removedBeforeQueried: !1,
              previousTriggersValues: r,
            });
        }
        listen(n, e, i, o, r) {
          return Ku(e) ? this._fetchNamespace(n).listen(e, i, o, r) : () => {};
        }
        _buildInstruction(n, e, i, o, r) {
          return n.transition.build(
            this.driver,
            n.element,
            n.fromState.value,
            n.toState.value,
            i,
            o,
            n.fromState.options,
            n.toState.options,
            e,
            r
          );
        }
        destroyInnerAnimations(n) {
          let e = this.driver.query(n, Vu, !0);
          e.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(n, qg, !0)),
              e.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(n) {
          const e = this.playersByElement.get(n);
          e &&
            e.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(n) {
          const e = this.playersByQueriedElement.get(n);
          e && e.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((n) => {
            if (this.players.length) return lo(this.players).onDone(() => n());
            n();
          });
        }
        processLeaveNode(n) {
          const e = n[Yn];
          if (e && e.setForRemoval) {
            if (((n[Yn] = JI), e.namespaceId)) {
              this.destroyInnerAnimations(n);
              const i = this._fetchNamespace(e.namespaceId);
              i && i.clearElementCache(n);
            }
            this._onRemovalComplete(n, e.setForRemoval);
          }
          n.classList?.contains(rm) && this.markElementAsDisabled(n, !1),
            this.driver.query(n, ".ng-animate-disabled", !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(n = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, o) =>
                this._balanceNamespaceList(i, o)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              Vn(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              e = this._flushAnimations(i, n);
            } finally {
              for (let o = 0; o < i.length; o++) i[o]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? lo(e).onDone(() => {
                    i.forEach((o) => o());
                  })
                : i.forEach((o) => o());
          }
        }
        reportError(n) {
          throw (function yq(t) {
            return new O(3402, !1);
          })();
        }
        _flushAnimations(n, e) {
          const i = new Uu(),
            o = [],
            r = new Map(),
            s = [],
            a = new Map(),
            l = new Map(),
            c = new Map(),
            u = new Set();
          this.disabledNodes.forEach((q) => {
            u.add(q);
            const ee = this.driver.query(q, ".ng-animate-queued", !0);
            for (let ie = 0; ie < ee.length; ie++) u.add(ee[ie]);
          });
          const h = this.bodyNode,
            m = Array.from(this.statesByElement.keys()),
            _ = tD(m, this.collectedEnterElements),
            b = new Map();
          let C = 0;
          _.forEach((q, ee) => {
            const ie = Kg + C++;
            b.set(ee, ie), q.forEach((Se) => Vn(Se, ie));
          });
          const I = [],
            M = new Set(),
            E = new Set();
          for (let q = 0; q < this.collectedLeaveElements.length; q++) {
            const ee = this.collectedLeaveElements[q],
              ie = ee[Yn];
            ie &&
              ie.setForRemoval &&
              (I.push(ee),
              M.add(ee),
              ie.hasAnimation
                ? this.driver
                    .query(ee, ".ng-star-inserted", !0)
                    .forEach((Se) => M.add(Se))
                : E.add(ee));
          }
          const F = new Map(),
            V = tD(m, Array.from(M));
          V.forEach((q, ee) => {
            const ie = Pu + C++;
            F.set(ee, ie), q.forEach((Se) => Vn(Se, ie));
          }),
            n.push(() => {
              _.forEach((q, ee) => {
                const ie = b.get(ee);
                q.forEach((Se) => ls(Se, ie));
              }),
                V.forEach((q, ee) => {
                  const ie = F.get(ee);
                  q.forEach((Se) => ls(Se, ie));
                }),
                I.forEach((q) => {
                  this.processLeaveNode(q);
                });
            });
          const Z = [],
            ge = [];
          for (let q = this._namespaceList.length - 1; q >= 0; q--)
            this._namespaceList[q].drainQueuedTransitions(e).forEach((ie) => {
              const Se = ie.player,
                Dt = ie.element;
              if ((Z.push(Se), this.collectedEnterElements.length)) {
                const jt = Dt[Yn];
                if (jt && jt.setForMove) {
                  if (
                    jt.previousTriggersValues &&
                    jt.previousTriggersValues.has(ie.triggerName)
                  ) {
                    const $o = jt.previousTriggersValues.get(ie.triggerName),
                      Bn = this.statesByElement.get(ie.element);
                    if (Bn && Bn.has(ie.triggerName)) {
                      const nd = Bn.get(ie.triggerName);
                      (nd.value = $o), Bn.set(ie.triggerName, nd);
                    }
                  }
                  return void Se.destroy();
                }
              }
              const hi = !h || !this.driver.containsElement(h, Dt),
                Cn = F.get(Dt),
                ho = b.get(Dt),
                Xe = this._buildInstruction(ie, i, ho, Cn, hi);
              if (Xe.errors && Xe.errors.length) return void ge.push(Xe);
              if (hi)
                return (
                  Se.onStart(() => Vo(Dt, Xe.fromStyles)),
                  Se.onDestroy(() => di(Dt, Xe.toStyles)),
                  void o.push(Se)
                );
              if (ie.isFallbackTransition)
                return (
                  Se.onStart(() => Vo(Dt, Xe.fromStyles)),
                  Se.onDestroy(() => di(Dt, Xe.toStyles)),
                  void o.push(Se)
                );
              const MD = [];
              Xe.timelines.forEach((jt) => {
                (jt.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(jt.element) || MD.push(jt);
              }),
                (Xe.timelines = MD),
                i.append(Dt, Xe.timelines),
                s.push({ instruction: Xe, player: Se, element: Dt }),
                Xe.queriedElements.forEach((jt) => vn(a, jt, []).push(Se)),
                Xe.preStyleProps.forEach((jt, $o) => {
                  if (jt.size) {
                    let Bn = l.get($o);
                    Bn || l.set($o, (Bn = new Set())),
                      jt.forEach((nd, mm) => Bn.add(mm));
                  }
                }),
                Xe.postStyleProps.forEach((jt, $o) => {
                  let Bn = c.get($o);
                  Bn || c.set($o, (Bn = new Set())),
                    jt.forEach((nd, mm) => Bn.add(mm));
                });
            });
          if (ge.length) {
            const q = [];
            ge.forEach((ee) => {
              q.push(
                (function vq(t, n) {
                  return new O(3505, !1);
                })()
              );
            }),
              Z.forEach((ee) => ee.destroy()),
              this.reportError(q);
          }
          const Ae = new Map(),
            ze = new Map();
          s.forEach((q) => {
            const ee = q.element;
            i.has(ee) &&
              (ze.set(ee, ee),
              this._beforeAnimationBuild(
                q.player.namespaceId,
                q.instruction,
                Ae
              ));
          }),
            o.forEach((q) => {
              const ee = q.element;
              this._getPreviousPlayers(
                ee,
                !1,
                q.namespaceId,
                q.triggerName,
                null
              ).forEach((Se) => {
                vn(Ae, ee, []).push(Se), Se.destroy();
              });
            });
          const Ke = I.filter((q) => iD(q, l, c)),
            Ft = new Map();
          eD(Ft, this.driver, E, c, ki).forEach((q) => {
            iD(q, l, c) && Ke.push(q);
          });
          const Xa = new Map();
          _.forEach((q, ee) => {
            eD(Xa, this.driver, new Set(q), l, "!");
          }),
            Ke.forEach((q) => {
              const ee = Ft.get(q),
                ie = Xa.get(q);
              Ft.set(
                q,
                new Map([...(ee?.entries() ?? []), ...(ie?.entries() ?? [])])
              );
            });
          const zo = [],
            ED = [],
            xD = {};
          s.forEach((q) => {
            const { element: ee, player: ie, instruction: Se } = q;
            if (i.has(ee)) {
              if (u.has(ee))
                return (
                  ie.onDestroy(() => di(ee, Se.toStyles)),
                  (ie.disabled = !0),
                  ie.overrideTotalTime(Se.totalTime),
                  void o.push(ie)
                );
              let Dt = xD;
              if (ze.size > 1) {
                let Cn = ee;
                const ho = [];
                for (; (Cn = Cn.parentNode); ) {
                  const Xe = ze.get(Cn);
                  if (Xe) {
                    Dt = Xe;
                    break;
                  }
                  ho.push(Cn);
                }
                ho.forEach((Xe) => ze.set(Xe, Dt));
              }
              const hi = this._buildAnimation(
                ie.namespaceId,
                Se,
                Ae,
                r,
                Xa,
                Ft
              );
              if ((ie.setRealPlayer(hi), Dt === xD)) zo.push(ie);
              else {
                const Cn = this.playersByElement.get(Dt);
                Cn && Cn.length && (ie.parentPlayer = lo(Cn)), o.push(ie);
              }
            } else
              Vo(ee, Se.fromStyles),
                ie.onDestroy(() => di(ee, Se.toStyles)),
                ED.push(ie),
                u.has(ee) && o.push(ie);
          }),
            ED.forEach((q) => {
              const ee = r.get(q.element);
              if (ee && ee.length) {
                const ie = lo(ee);
                q.setRealPlayer(ie);
              }
            }),
            o.forEach((q) => {
              q.parentPlayer ? q.syncPlayerEvents(q.parentPlayer) : q.destroy();
            });
          for (let q = 0; q < I.length; q++) {
            const ee = I[q],
              ie = ee[Yn];
            if ((ls(ee, Pu), ie && ie.hasAnimation)) continue;
            let Se = [];
            if (a.size) {
              let hi = a.get(ee);
              hi && hi.length && Se.push(...hi);
              let Cn = this.driver.query(ee, qg, !0);
              for (let ho = 0; ho < Cn.length; ho++) {
                let Xe = a.get(Cn[ho]);
                Xe && Xe.length && Se.push(...Xe);
              }
            }
            const Dt = Se.filter((hi) => !hi.destroyed);
            Dt.length ? yZ(this, ee, Dt) : this.processLeaveNode(ee);
          }
          return (
            (I.length = 0),
            zo.forEach((q) => {
              this.players.push(q),
                q.onDone(() => {
                  q.destroy();
                  const ee = this.players.indexOf(q);
                  this.players.splice(ee, 1);
                }),
                q.play();
            }),
            zo
          );
        }
        afterFlush(n) {
          this._flushFns.push(n);
        }
        afterFlushAnimationsDone(n) {
          this._whenQuietFns.push(n);
        }
        _getPreviousPlayers(n, e, i, o, r) {
          let s = [];
          if (e) {
            const a = this.playersByQueriedElement.get(n);
            a && (s = a);
          } else {
            const a = this.playersByElement.get(n);
            if (a) {
              const l = !r || r == Ya;
              a.forEach((c) => {
                c.queued || (!l && c.triggerName != o) || s.push(c);
              });
            }
          }
          return (
            (i || o) &&
              (s = s.filter(
                (a) => !((i && i != a.namespaceId) || (o && o != a.triggerName))
              )),
            s
          );
        }
        _beforeAnimationBuild(n, e, i) {
          const r = e.element,
            s = e.isRemovalTransition ? void 0 : n,
            a = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const l of e.timelines) {
            const c = l.element,
              u = c !== r,
              h = vn(i, c, []);
            this._getPreviousPlayers(c, u, s, a, e.toState).forEach((_) => {
              const b = _.getRealPlayer();
              b.beforeDestroy && b.beforeDestroy(), _.destroy(), h.push(_);
            });
          }
          Vo(r, e.fromStyles);
        }
        _buildAnimation(n, e, i, o, r, s) {
          const a = e.triggerName,
            l = e.element,
            c = [],
            u = new Set(),
            h = new Set(),
            m = e.timelines.map((b) => {
              const C = b.element;
              u.add(C);
              const I = C[Yn];
              if (I && I.removedBeforeQueried)
                return new ya(b.duration, b.delay);
              const M = C !== l,
                E = (function vZ(t) {
                  const n = [];
                  return nD(t, n), n;
                })((i.get(C) || dZ).map((Ae) => Ae.getRealPlayer())).filter(
                  (Ae) => !!Ae.element && Ae.element === C
                ),
                F = r.get(C),
                V = s.get(C),
                Z = kI(this._normalizer, b.keyframes, F, V),
                ge = this._buildPlayer(b, Z, E);
              if ((b.subTimeline && o && h.add(C), M)) {
                const Ae = new lm(n, a, C);
                Ae.setRealPlayer(ge), c.push(Ae);
              }
              return ge;
            });
          c.forEach((b) => {
            vn(this.playersByQueriedElement, b.element, []).push(b),
              b.onDone(() =>
                (function gZ(t, n, e) {
                  let i = t.get(n);
                  if (i) {
                    if (i.length) {
                      const o = i.indexOf(e);
                      i.splice(o, 1);
                    }
                    0 == i.length && t.delete(n);
                  }
                  return i;
                })(this.playersByQueriedElement, b.element, b)
              );
          }),
            u.forEach((b) => Vn(b, BI));
          const _ = lo(m);
          return (
            _.onDestroy(() => {
              u.forEach((b) => ls(b, BI)), di(l, e.toStyles);
            }),
            h.forEach((b) => {
              vn(o, b, []).push(_);
            }),
            _
          );
        }
        _buildPlayer(n, e, i) {
          return e.length > 0
            ? this.driver.animate(
                n.element,
                e,
                n.duration,
                n.delay,
                n.easing,
                i
              )
            : new ya(n.duration, n.delay);
        }
      }
      class lm {
        constructor(n, e, i) {
          (this.namespaceId = n),
            (this.triggerName = e),
            (this.element = i),
            (this._player = new ya()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(n) {
          this._containsRealPlayer ||
            ((this._player = n),
            this._queuedCallbacks.forEach((e, i) => {
              e.forEach((o) => $g(n, i, void 0, o));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(n.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(n) {
          this.totalTime = n;
        }
        syncPlayerEvents(n) {
          const e = this._player;
          e.triggerCallback && n.onStart(() => e.triggerCallback("start")),
            n.onDone(() => this.finish()),
            n.onDestroy(() => this.destroy());
        }
        _queueEvent(n, e) {
          vn(this._queuedCallbacks, n, []).push(e);
        }
        onDone(n) {
          this.queued && this._queueEvent("done", n), this._player.onDone(n);
        }
        onStart(n) {
          this.queued && this._queueEvent("start", n), this._player.onStart(n);
        }
        onDestroy(n) {
          this.queued && this._queueEvent("destroy", n),
            this._player.onDestroy(n);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(n) {
          this.queued || this._player.setPosition(n);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(n) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(n);
        }
      }
      function Ku(t) {
        return t && 1 === t.nodeType;
      }
      function XI(t, n) {
        const e = t.style.display;
        return (t.style.display = n ?? "none"), e;
      }
      function eD(t, n, e, i, o) {
        const r = [];
        e.forEach((l) => r.push(XI(l)));
        const s = [];
        i.forEach((l, c) => {
          const u = new Map();
          l.forEach((h) => {
            const m = n.computeStyle(c, h, o);
            u.set(h, m), (!m || 0 == m.length) && ((c[Yn] = pZ), s.push(c));
          }),
            t.set(c, u);
        });
        let a = 0;
        return e.forEach((l) => XI(l, r[a++])), s;
      }
      function tD(t, n) {
        const e = new Map();
        if ((t.forEach((a) => e.set(a, [])), 0 == n.length)) return e;
        const o = new Set(n),
          r = new Map();
        function s(a) {
          if (!a) return 1;
          let l = r.get(a);
          if (l) return l;
          const c = a.parentNode;
          return (l = e.has(c) ? c : o.has(c) ? 1 : s(c)), r.set(a, l), l;
        }
        return (
          n.forEach((a) => {
            const l = s(a);
            1 !== l && e.get(l).push(a);
          }),
          e
        );
      }
      function Vn(t, n) {
        t.classList?.add(n);
      }
      function ls(t, n) {
        t.classList?.remove(n);
      }
      function yZ(t, n, e) {
        lo(e).onDone(() => t.processLeaveNode(n));
      }
      function nD(t, n) {
        for (let e = 0; e < t.length; e++) {
          const i = t[e];
          i instanceof Ow ? nD(i.players, n) : n.push(i);
        }
      }
      function iD(t, n, e) {
        const i = e.get(t);
        if (!i) return !1;
        let o = n.get(t);
        return o ? i.forEach((r) => o.add(r)) : n.set(t, i), e.delete(t), !0;
      }
      class qu {
        constructor(n, e, i) {
          (this.bodyNode = n),
            (this._driver = e),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (o, r) => {}),
            (this._transitionEngine = new fZ(n, e, i)),
            (this._timelineEngine = new sZ(n, e, i)),
            (this._transitionEngine.onRemovalComplete = (o, r) =>
              this.onRemovalComplete(o, r));
        }
        registerTrigger(n, e, i, o, r) {
          const s = n + "-" + o;
          let a = this._triggerCache[s];
          if (!a) {
            const l = [],
              u = Jg(this._driver, r, l, []);
            if (l.length)
              throw (function lq(t, n) {
                return new O(3404, !1);
              })();
            (a = (function nZ(t, n, e) {
              return new iZ(t, n, e);
            })(o, u, this._normalizer)),
              (this._triggerCache[s] = a);
          }
          this._transitionEngine.registerTrigger(e, o, a);
        }
        register(n, e) {
          this._transitionEngine.register(n, e);
        }
        destroy(n, e) {
          this._transitionEngine.destroy(n, e);
        }
        onInsert(n, e, i, o) {
          this._transitionEngine.insertNode(n, e, i, o);
        }
        onRemove(n, e, i) {
          this._transitionEngine.removeNode(n, e, i);
        }
        disableAnimations(n, e) {
          this._transitionEngine.markElementAsDisabled(n, e);
        }
        process(n, e, i, o) {
          if ("@" == i.charAt(0)) {
            const [r, s] = RI(i);
            this._timelineEngine.command(r, e, s, o);
          } else this._transitionEngine.trigger(n, e, i, o);
        }
        listen(n, e, i, o, r) {
          if ("@" == i.charAt(0)) {
            const [s, a] = RI(i);
            return this._timelineEngine.listen(s, e, a, r);
          }
          return this._transitionEngine.listen(n, e, i, o, r);
        }
        flush(n = -1) {
          this._transitionEngine.flush(n);
        }
        get players() {
          return [
            ...this._transitionEngine.players,
            ...this._timelineEngine.players,
          ];
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
        afterFlushAnimationsDone(n) {
          this._transitionEngine.afterFlushAnimationsDone(n);
        }
      }
      let wZ = (() => {
        class t {
          static #e = (this.initialStylesByElement = new WeakMap());
          constructor(e, i, o) {
            (this._element = e),
              (this._startStyles = i),
              (this._endStyles = o),
              (this._state = 0);
            let r = t.initialStylesByElement.get(e);
            r || t.initialStylesByElement.set(e, (r = new Map())),
              (this._initialStyles = r);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                di(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (di(this._element, this._initialStyles),
                this._endStyles &&
                  (di(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (t.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Vo(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Vo(this._element, this._endStyles),
                  (this._endStyles = null)),
                di(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return t;
      })();
      function cm(t) {
        let n = null;
        return (
          t.forEach((e, i) => {
            (function TZ(t) {
              return "display" === t || "position" === t;
            })(i) && ((n = n || new Map()), n.set(i, e));
          }),
          n
        );
      }
      class oD {
        constructor(n, e, i, o) {
          (this.element = n),
            (this.keyframes = e),
            (this.options = i),
            (this._specialStyles = o),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const n = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            n,
            this.options
          )),
            (this._finalKeyframe = n.length ? n[n.length - 1] : new Map());
          const e = () => this._onFinish();
          this.domPlayer.addEventListener("finish", e),
            this.onDestroy(() => {
              this.domPlayer.removeEventListener("finish", e);
            });
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(n) {
          const e = [];
          return (
            n.forEach((i) => {
              e.push(Object.fromEntries(i));
            }),
            e
          );
        }
        _triggerWebAnimation(n, e, i) {
          return n.animate(this._convertKeyframesToObject(e), i);
        }
        onStart(n) {
          this._originalOnStartFns.push(n), this._onStartFns.push(n);
        }
        onDone(n) {
          this._originalOnDoneFns.push(n), this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((n) => n()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        setPosition(n) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = n * this.time);
        }
        getPosition() {
          return +(this.domPlayer.currentTime ?? 0) / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const n = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((i, o) => {
              "offset" !== o &&
                n.set(o, this._finished ? i : jI(this.element, o));
            }),
            (this.currentSnapshot = n);
        }
        triggerCallback(n) {
          const e = "start" === n ? this._onStartFns : this._onDoneFns;
          e.forEach((i) => i()), (e.length = 0);
        }
      }
      class SZ {
        validateStyleProperty(n) {
          return !0;
        }
        validateAnimatableStyleProperty(n) {
          return !0;
        }
        matchesElement(n, e) {
          return !1;
        }
        containsElement(n, e) {
          return LI(n, e);
        }
        getParentElement(n) {
          return Gg(n);
        }
        query(n, e, i) {
          return PI(n, e, i);
        }
        computeStyle(n, e, i) {
          return window.getComputedStyle(n)[e];
        }
        animate(n, e, i, o, r, s = []) {
          const l = {
            duration: i,
            delay: o,
            fill: 0 == o ? "both" : "forwards",
          };
          r && (l.easing = r);
          const c = new Map(),
            u = s.filter((_) => _ instanceof oD);
          (function Aq(t, n) {
            return 0 === t || 0 === n;
          })(i, o) &&
            u.forEach((_) => {
              _.currentSnapshot.forEach((b, C) => c.set(C, b));
            });
          let h = (function xq(t) {
            return t.length
              ? t[0] instanceof Map
                ? t
                : t.map((n) => HI(n))
              : [];
          })(e).map((_) => co(_));
          h = (function kq(t, n, e) {
            if (e.size && n.length) {
              let i = n[0],
                o = [];
              if (
                (e.forEach((r, s) => {
                  i.has(s) || o.push(s), i.set(s, r);
                }),
                o.length)
              )
                for (let r = 1; r < n.length; r++) {
                  let s = n[r];
                  o.forEach((a) => s.set(a, jI(t, a)));
                }
            }
            return n;
          })(n, h, c);
          const m = (function CZ(t, n) {
            let e = null,
              i = null;
            return (
              Array.isArray(n) && n.length
                ? ((e = cm(n[0])), n.length > 1 && (i = cm(n[n.length - 1])))
                : n instanceof Map && (e = cm(n)),
              e || i ? new wZ(t, e, i) : null
            );
          })(n, h);
          return new oD(n, h, l, m);
        }
      }
      let IZ = (() => {
        class t extends Dw {
          constructor(e, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(i.body, {
                id: "0",
                encapsulation: In.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const o = Array.isArray(e) ? Ew(e) : e;
            return (
              rD(this._renderer, null, i, "register", [o]),
              new DZ(i, this._renderer)
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Ws), W(Qe));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      class DZ extends R6 {
        constructor(n, e) {
          super(), (this._id = n), (this._renderer = e);
        }
        create(n, e) {
          return new EZ(this._id, n, e || {}, this._renderer);
        }
      }
      class EZ {
        constructor(n, e, i, o) {
          (this.id = n),
            (this.element = e),
            (this._renderer = o),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(n, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${n}`, e);
        }
        _command(n, ...e) {
          return rD(this._renderer, this.element, this.id, n, e);
        }
        onDone(n) {
          this._listen("done", n);
        }
        onStart(n) {
          this._listen("start", n);
        }
        onDestroy(n) {
          this._listen("destroy", n);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(n) {
          this._command("setPosition", n);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function rD(t, n, e, i, o) {
        return t.setProperty(n, `@@${e}:${i}`, o);
      }
      const sD = "@.disabled";
      let xZ = (() => {
        class t {
          constructor(e, i, o) {
            (this.delegate = e),
              (this.engine = i),
              (this._zone = o),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (i.onRemovalComplete = (r, s) => {
                const a = s?.parentNode(r);
                a && s.removeChild(a, r);
              });
          }
          createRenderer(e, i) {
            const r = this.delegate.createRenderer(e, i);
            if (!(e && i && i.data && i.data.animation)) {
              let u = this._rendererCache.get(r);
              return (
                u ||
                  ((u = new aD("", r, this.engine, () =>
                    this._rendererCache.delete(r)
                  )),
                  this._rendererCache.set(r, u)),
                u
              );
            }
            const s = i.id,
              a = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, e);
            const l = (u) => {
              Array.isArray(u)
                ? u.forEach(l)
                : this.engine.registerTrigger(s, a, e, u.name, u);
            };
            return i.data.animation.forEach(l), new MZ(this, a, r, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            queueMicrotask(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, i, o) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => i(o))
              : (0 == this._animationCallbacksBuffer.length &&
                  queueMicrotask(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((r) => {
                        const [s, a] = r;
                        s(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, o]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Ws), W(qu), W(_e));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      class aD {
        constructor(n, e, i, o) {
          (this.namespaceId = n),
            (this.delegate = e),
            (this.engine = i),
            (this._onDestroy = o);
        }
        get data() {
          return this.delegate.data;
        }
        destroyNode(n) {
          this.delegate.destroyNode?.(n);
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.engine.afterFlushAnimationsDone(() => {
              queueMicrotask(() => {
                this.delegate.destroy();
              });
            }),
            this._onDestroy?.();
        }
        createElement(n, e) {
          return this.delegate.createElement(n, e);
        }
        createComment(n) {
          return this.delegate.createComment(n);
        }
        createText(n) {
          return this.delegate.createText(n);
        }
        appendChild(n, e) {
          this.delegate.appendChild(n, e),
            this.engine.onInsert(this.namespaceId, e, n, !1);
        }
        insertBefore(n, e, i, o = !0) {
          this.delegate.insertBefore(n, e, i),
            this.engine.onInsert(this.namespaceId, e, n, o);
        }
        removeChild(n, e, i) {
          this.engine.onRemove(this.namespaceId, e, this.delegate);
        }
        selectRootElement(n, e) {
          return this.delegate.selectRootElement(n, e);
        }
        parentNode(n) {
          return this.delegate.parentNode(n);
        }
        nextSibling(n) {
          return this.delegate.nextSibling(n);
        }
        setAttribute(n, e, i, o) {
          this.delegate.setAttribute(n, e, i, o);
        }
        removeAttribute(n, e, i) {
          this.delegate.removeAttribute(n, e, i);
        }
        addClass(n, e) {
          this.delegate.addClass(n, e);
        }
        removeClass(n, e) {
          this.delegate.removeClass(n, e);
        }
        setStyle(n, e, i, o) {
          this.delegate.setStyle(n, e, i, o);
        }
        removeStyle(n, e, i) {
          this.delegate.removeStyle(n, e, i);
        }
        setProperty(n, e, i) {
          "@" == e.charAt(0) && e == sD
            ? this.disableAnimations(n, !!i)
            : this.delegate.setProperty(n, e, i);
        }
        setValue(n, e) {
          this.delegate.setValue(n, e);
        }
        listen(n, e, i) {
          return this.delegate.listen(n, e, i);
        }
        disableAnimations(n, e) {
          this.engine.disableAnimations(n, e);
        }
      }
      class MZ extends aD {
        constructor(n, e, i, o, r) {
          super(e, i, o, r), (this.factory = n), (this.namespaceId = e);
        }
        setProperty(n, e, i) {
          "@" == e.charAt(0)
            ? "." == e.charAt(1) && e == sD
              ? this.disableAnimations(n, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, n, e.slice(1), i)
            : this.delegate.setProperty(n, e, i);
        }
        listen(n, e, i) {
          if ("@" == e.charAt(0)) {
            const o = (function OZ(t) {
              switch (t) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return t;
              }
            })(n);
            let r = e.slice(1),
              s = "";
            return (
              "@" != r.charAt(0) &&
                ([r, s] = (function AZ(t) {
                  const n = t.indexOf(".");
                  return [t.substring(0, n), t.slice(n + 1)];
                })(r)),
              this.engine.listen(this.namespaceId, o, r, s, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, i, a);
              })
            );
          }
          return this.delegate.listen(n, e, i);
        }
      }
      const lD = [
          { provide: Dw, useClass: IZ },
          {
            provide: im,
            useFactory: function RZ() {
              return new Jq();
            },
          },
          {
            provide: qu,
            useClass: (() => {
              class t extends qu {
                constructor(e, i, o, r) {
                  super(e.body, i, o);
                }
                ngOnDestroy() {
                  this.flush();
                }
                static #e = (this.ɵfac = function (i) {
                  return new (i || t)(W(Qe), W(Wg), W(im), W(Yi));
                });
                static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
              }
              return t;
            })(),
          },
          {
            provide: Ws,
            useFactory: function FZ(t, n, e) {
              return new xZ(t, n, e);
            },
            deps: [Af, qu, _e],
          },
        ],
        um = [
          { provide: Wg, useFactory: () => new SZ() },
          { provide: b1, useValue: "BrowserAnimations" },
          ...lD,
        ],
        cD = [
          { provide: Wg, useClass: NI },
          { provide: b1, useValue: "NoopAnimations" },
          ...lD,
        ];
      let LZ = (() => {
        class t {
          static withConfig(e) {
            return { ngModule: t, providers: e.disableAnimations ? cD : um };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵmod = Re({ type: t }));
          static #n = (this.ɵinj = xe({ providers: um, imports: [Cw] }));
        }
        return t;
      })();
      class Yu {}
      class Qu {}
      class pi {
        constructor(n) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            n
              ? "string" == typeof n
                ? (this.lazyInit = () => {
                    (this.headers = new Map()),
                      n.split("\n").forEach((e) => {
                        const i = e.indexOf(":");
                        if (i > 0) {
                          const o = e.slice(0, i),
                            r = o.toLowerCase(),
                            s = e.slice(i + 1).trim();
                          this.maybeSetNormalizedName(o, r),
                            this.headers.has(r)
                              ? this.headers.get(r).push(s)
                              : this.headers.set(r, [s]);
                        }
                      });
                  })
                : typeof Headers < "u" && n instanceof Headers
                ? ((this.headers = new Map()),
                  n.forEach((e, i) => {
                    this.setHeaderEntries(i, e);
                  }))
                : (this.lazyInit = () => {
                    (this.headers = new Map()),
                      Object.entries(n).forEach(([e, i]) => {
                        this.setHeaderEntries(e, i);
                      });
                  })
              : (this.headers = new Map());
        }
        has(n) {
          return this.init(), this.headers.has(n.toLowerCase());
        }
        get(n) {
          this.init();
          const e = this.headers.get(n.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(n) {
          return this.init(), this.headers.get(n.toLowerCase()) || null;
        }
        append(n, e) {
          return this.clone({ name: n, value: e, op: "a" });
        }
        set(n, e) {
          return this.clone({ name: n, value: e, op: "s" });
        }
        delete(n, e) {
          return this.clone({ name: n, value: e, op: "d" });
        }
        maybeSetNormalizedName(n, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, n);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof pi
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((n) => this.applyUpdate(n)),
              (this.lazyUpdate = null)));
        }
        copyFrom(n) {
          n.init(),
            Array.from(n.headers.keys()).forEach((e) => {
              this.headers.set(e, n.headers.get(e)),
                this.normalizedNames.set(e, n.normalizedNames.get(e));
            });
        }
        clone(n) {
          const e = new pi();
          return (
            (e.lazyInit =
              this.lazyInit && this.lazyInit instanceof pi
                ? this.lazyInit
                : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([n])),
            e
          );
        }
        applyUpdate(n) {
          const e = n.name.toLowerCase();
          switch (n.op) {
            case "a":
            case "s":
              let i = n.value;
              if (("string" == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(n.name, e);
              const o = ("a" === n.op ? this.headers.get(e) : void 0) || [];
              o.push(...i), this.headers.set(e, o);
              break;
            case "d":
              const r = n.value;
              if (r) {
                let s = this.headers.get(e);
                if (!s) return;
                (s = s.filter((a) => -1 === r.indexOf(a))),
                  0 === s.length
                    ? (this.headers.delete(e), this.normalizedNames.delete(e))
                    : this.headers.set(e, s);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        setHeaderEntries(n, e) {
          const i = (Array.isArray(e) ? e : [e]).map((r) => r.toString()),
            o = n.toLowerCase();
          this.headers.set(o, i), this.maybeSetNormalizedName(n, o);
        }
        forEach(n) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) =>
              n(this.normalizedNames.get(e), this.headers.get(e))
            );
        }
      }
      class PZ {
        encodeKey(n) {
          return uD(n);
        }
        encodeValue(n) {
          return uD(n);
        }
        decodeKey(n) {
          return decodeURIComponent(n);
        }
        decodeValue(n) {
          return decodeURIComponent(n);
        }
      }
      const VZ = /%(\d[a-f0-9])/gi,
        BZ = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function uD(t) {
        return encodeURIComponent(t).replace(VZ, (n, e) => BZ[e] ?? n);
      }
      function Ju(t) {
        return `${t}`;
      }
      class uo {
        constructor(n = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = n.encoder || new PZ()),
            n.fromString)
          ) {
            if (n.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function NZ(t, n) {
              const e = new Map();
              return (
                t.length > 0 &&
                  t
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((o) => {
                      const r = o.indexOf("="),
                        [s, a] =
                          -1 == r
                            ? [n.decodeKey(o), ""]
                            : [
                                n.decodeKey(o.slice(0, r)),
                                n.decodeValue(o.slice(r + 1)),
                              ],
                        l = e.get(s) || [];
                      l.push(a), e.set(s, l);
                    }),
                e
              );
            })(n.fromString, this.encoder);
          } else
            n.fromObject
              ? ((this.map = new Map()),
                Object.keys(n.fromObject).forEach((e) => {
                  const i = n.fromObject[e],
                    o = Array.isArray(i) ? i.map(Ju) : [Ju(i)];
                  this.map.set(e, o);
                }))
              : (this.map = null);
        }
        has(n) {
          return this.init(), this.map.has(n);
        }
        get(n) {
          this.init();
          const e = this.map.get(n);
          return e ? e[0] : null;
        }
        getAll(n) {
          return this.init(), this.map.get(n) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(n, e) {
          return this.clone({ param: n, value: e, op: "a" });
        }
        appendAll(n) {
          const e = [];
          return (
            Object.keys(n).forEach((i) => {
              const o = n[i];
              Array.isArray(o)
                ? o.forEach((r) => {
                    e.push({ param: i, value: r, op: "a" });
                  })
                : e.push({ param: i, value: o, op: "a" });
            }),
            this.clone(e)
          );
        }
        set(n, e) {
          return this.clone({ param: n, value: e, op: "s" });
        }
        delete(n, e) {
          return this.clone({ param: n, value: e, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((n) => {
                const e = this.encoder.encodeKey(n);
                return this.map
                  .get(n)
                  .map((i) => e + "=" + this.encoder.encodeValue(i))
                  .join("&");
              })
              .filter((n) => "" !== n)
              .join("&")
          );
        }
        clone(n) {
          const e = new uo({ encoder: this.encoder });
          return (
            (e.cloneFrom = this.cloneFrom || this),
            (e.updates = (this.updates || []).concat(n)),
            e
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((n) => this.map.set(n, this.cloneFrom.map.get(n))),
              this.updates.forEach((n) => {
                switch (n.op) {
                  case "a":
                  case "s":
                    const e =
                      ("a" === n.op ? this.map.get(n.param) : void 0) || [];
                    e.push(Ju(n.value)), this.map.set(n.param, e);
                    break;
                  case "d":
                    if (void 0 === n.value) {
                      this.map.delete(n.param);
                      break;
                    }
                    {
                      let i = this.map.get(n.param) || [];
                      const o = i.indexOf(Ju(n.value));
                      -1 !== o && i.splice(o, 1),
                        i.length > 0
                          ? this.map.set(n.param, i)
                          : this.map.delete(n.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class HZ {
        constructor() {
          this.map = new Map();
        }
        set(n, e) {
          return this.map.set(n, e), this;
        }
        get(n) {
          return (
            this.map.has(n) || this.map.set(n, n.defaultValue()),
            this.map.get(n)
          );
        }
        delete(n) {
          return this.map.delete(n), this;
        }
        has(n) {
          return this.map.has(n);
        }
        keys() {
          return this.map.keys();
        }
      }
      function dD(t) {
        return typeof ArrayBuffer < "u" && t instanceof ArrayBuffer;
      }
      function pD(t) {
        return typeof Blob < "u" && t instanceof Blob;
      }
      function hD(t) {
        return typeof FormData < "u" && t instanceof FormData;
      }
      class Qa {
        constructor(n, e, i, o) {
          let r;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = n.toUpperCase()),
            (function zZ(t) {
              switch (t) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || o
              ? ((this.body = void 0 !== i ? i : null), (r = o))
              : (r = i),
            r &&
              ((this.reportProgress = !!r.reportProgress),
              (this.withCredentials = !!r.withCredentials),
              r.responseType && (this.responseType = r.responseType),
              r.headers && (this.headers = r.headers),
              r.context && (this.context = r.context),
              r.params && (this.params = r.params)),
            this.headers || (this.headers = new pi()),
            this.context || (this.context = new HZ()),
            this.params)
          ) {
            const s = this.params.toString();
            if (0 === s.length) this.urlWithParams = e;
            else {
              const a = e.indexOf("?");
              this.urlWithParams =
                e + (-1 === a ? "?" : a < e.length - 1 ? "&" : "") + s;
            }
          } else (this.params = new uo()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : dD(this.body) ||
              pD(this.body) ||
              hD(this.body) ||
              (function $Z(t) {
                return (
                  typeof URLSearchParams < "u" && t instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof uo
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || hD(this.body)
            ? null
            : pD(this.body)
            ? this.body.type || null
            : dD(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof uo
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(n = {}) {
          const e = n.method || this.method,
            i = n.url || this.url,
            o = n.responseType || this.responseType,
            r = void 0 !== n.body ? n.body : this.body,
            s =
              void 0 !== n.withCredentials
                ? n.withCredentials
                : this.withCredentials,
            a =
              void 0 !== n.reportProgress
                ? n.reportProgress
                : this.reportProgress;
          let l = n.headers || this.headers,
            c = n.params || this.params;
          const u = n.context ?? this.context;
          return (
            void 0 !== n.setHeaders &&
              (l = Object.keys(n.setHeaders).reduce(
                (h, m) => h.set(m, n.setHeaders[m]),
                l
              )),
            n.setParams &&
              (c = Object.keys(n.setParams).reduce(
                (h, m) => h.set(m, n.setParams[m]),
                c
              )),
            new Qa(e, i, r, {
              params: c,
              headers: l,
              context: u,
              reportProgress: a,
              responseType: o,
              withCredentials: s,
            })
          );
        }
      }
      var cs = (function (t) {
        return (
          (t[(t.Sent = 0)] = "Sent"),
          (t[(t.UploadProgress = 1)] = "UploadProgress"),
          (t[(t.ResponseHeader = 2)] = "ResponseHeader"),
          (t[(t.DownloadProgress = 3)] = "DownloadProgress"),
          (t[(t.Response = 4)] = "Response"),
          (t[(t.User = 5)] = "User"),
          t
        );
      })(cs || {});
      class dm {
        constructor(n, e = 200, i = "OK") {
          (this.headers = n.headers || new pi()),
            (this.status = void 0 !== n.status ? n.status : e),
            (this.statusText = n.statusText || i),
            (this.url = n.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class pm extends dm {
        constructor(n = {}) {
          super(n), (this.type = cs.ResponseHeader);
        }
        clone(n = {}) {
          return new pm({
            headers: n.headers || this.headers,
            status: void 0 !== n.status ? n.status : this.status,
            statusText: n.statusText || this.statusText,
            url: n.url || this.url || void 0,
          });
        }
      }
      class us extends dm {
        constructor(n = {}) {
          super(n),
            (this.type = cs.Response),
            (this.body = void 0 !== n.body ? n.body : null);
        }
        clone(n = {}) {
          return new us({
            body: void 0 !== n.body ? n.body : this.body,
            headers: n.headers || this.headers,
            status: void 0 !== n.status ? n.status : this.status,
            statusText: n.statusText || this.statusText,
            url: n.url || this.url || void 0,
          });
        }
      }
      class fD extends dm {
        constructor(n) {
          super(n, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${n.url || "(unknown url)"}`
                : `Http failure response for ${n.url || "(unknown url)"}: ${
                    n.status
                  } ${n.statusText}`),
            (this.error = n.error || null);
        }
      }
      function hm(t, n) {
        return {
          body: n,
          headers: t.headers,
          context: t.context,
          observe: t.observe,
          params: t.params,
          reportProgress: t.reportProgress,
          responseType: t.responseType,
          withCredentials: t.withCredentials,
        };
      }
      let jZ = (() => {
        class t {
          constructor(e) {
            this.handler = e;
          }
          request(e, i, o = {}) {
            let r;
            if (e instanceof Qa) r = e;
            else {
              let l, c;
              (l = o.headers instanceof pi ? o.headers : new pi(o.headers)),
                o.params &&
                  (c =
                    o.params instanceof uo
                      ? o.params
                      : new uo({ fromObject: o.params })),
                (r = new Qa(e, i, void 0 !== o.body ? o.body : null, {
                  headers: l,
                  context: o.context,
                  params: c,
                  reportProgress: o.reportProgress,
                  responseType: o.responseType || "json",
                  withCredentials: o.withCredentials,
                }));
            }
            const s = oe(r).pipe(Jr((l) => this.handler.handle(l)));
            if (e instanceof Qa || "events" === o.observe) return s;
            const a = s.pipe(Fi((l) => l instanceof us));
            switch (o.observe || "body") {
              case "body":
                switch (r.responseType) {
                  case "arraybuffer":
                    return a.pipe(
                      Ie((l) => {
                        if (null !== l.body && !(l.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return l.body;
                      })
                    );
                  case "blob":
                    return a.pipe(
                      Ie((l) => {
                        if (null !== l.body && !(l.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return l.body;
                      })
                    );
                  case "text":
                    return a.pipe(
                      Ie((l) => {
                        if (null !== l.body && "string" != typeof l.body)
                          throw new Error("Response is not a string.");
                        return l.body;
                      })
                    );
                  default:
                    return a.pipe(Ie((l) => l.body));
                }
              case "response":
                return a;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${o.observe}}`
                );
            }
          }
          delete(e, i = {}) {
            return this.request("DELETE", e, i);
          }
          get(e, i = {}) {
            return this.request("GET", e, i);
          }
          head(e, i = {}) {
            return this.request("HEAD", e, i);
          }
          jsonp(e, i) {
            return this.request("JSONP", e, {
              params: new uo().append(i, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, i = {}) {
            return this.request("OPTIONS", e, i);
          }
          patch(e, i, o = {}) {
            return this.request("PATCH", e, hm(o, i));
          }
          post(e, i, o = {}) {
            return this.request("POST", e, hm(o, i));
          }
          put(e, i, o = {}) {
            return this.request("PUT", e, hm(o, i));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Yu));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      function _D(t, n) {
        return n(t);
      }
      function GZ(t, n) {
        return (e, i) => n.intercept(e, { handle: (o) => t(o, i) });
      }
      const KZ = new G(""),
        Ja = new G(""),
        yD = new G("");
      function qZ() {
        let t = null;
        return (n, e) => {
          null === t &&
            (t = (U(KZ, { optional: !0 }) ?? []).reduceRight(GZ, _D));
          const i = U(Oc),
            o = i.add();
          return t(n, e).pipe(Oa(() => i.remove(o)));
        };
      }
      let vD = (() => {
        class t extends Yu {
          constructor(e, i) {
            super(),
              (this.backend = e),
              (this.injector = i),
              (this.chain = null),
              (this.pendingTasks = U(Oc));
          }
          handle(e) {
            if (null === this.chain) {
              const o = Array.from(
                new Set([
                  ...this.injector.get(Ja),
                  ...this.injector.get(yD, []),
                ])
              );
              this.chain = o.reduceRight(
                (r, s) =>
                  (function WZ(t, n, e) {
                    return (i, o) => e.runInContext(() => n(i, (r) => t(r, o)));
                  })(r, s, this.injector),
                _D
              );
            }
            const i = this.pendingTasks.add();
            return this.chain(e, (o) => this.backend.handle(o)).pipe(
              Oa(() => this.pendingTasks.remove(i))
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Qu), W(gn));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const JZ = /^\)\]\}',?\n/;
      let CD = (() => {
        class t {
          constructor(e) {
            this.xhrFactory = e;
          }
          handle(e) {
            if ("JSONP" === e.method) throw new O(-2800, !1);
            const i = this.xhrFactory;
            return (i.ɵloadImpl ? gt(i.ɵloadImpl()) : oe(null)).pipe(
              Tn(
                () =>
                  new nt((r) => {
                    const s = i.build();
                    if (
                      (s.open(e.method, e.urlWithParams),
                      e.withCredentials && (s.withCredentials = !0),
                      e.headers.forEach((C, I) =>
                        s.setRequestHeader(C, I.join(","))
                      ),
                      e.headers.has("Accept") ||
                        s.setRequestHeader(
                          "Accept",
                          "application/json, text/plain, */*"
                        ),
                      !e.headers.has("Content-Type"))
                    ) {
                      const C = e.detectContentTypeHeader();
                      null !== C && s.setRequestHeader("Content-Type", C);
                    }
                    if (e.responseType) {
                      const C = e.responseType.toLowerCase();
                      s.responseType = "json" !== C ? C : "text";
                    }
                    const a = e.serializeBody();
                    let l = null;
                    const c = () => {
                        if (null !== l) return l;
                        const C = s.statusText || "OK",
                          I = new pi(s.getAllResponseHeaders()),
                          M =
                            (function XZ(t) {
                              return "responseURL" in t && t.responseURL
                                ? t.responseURL
                                : /^X-Request-URL:/m.test(
                                    t.getAllResponseHeaders()
                                  )
                                ? t.getResponseHeader("X-Request-URL")
                                : null;
                            })(s) || e.url;
                        return (
                          (l = new pm({
                            headers: I,
                            status: s.status,
                            statusText: C,
                            url: M,
                          })),
                          l
                        );
                      },
                      u = () => {
                        let {
                            headers: C,
                            status: I,
                            statusText: M,
                            url: E,
                          } = c(),
                          F = null;
                        204 !== I &&
                          (F =
                            typeof s.response > "u"
                              ? s.responseText
                              : s.response),
                          0 === I && (I = F ? 200 : 0);
                        let V = I >= 200 && I < 300;
                        if ("json" === e.responseType && "string" == typeof F) {
                          const Z = F;
                          F = F.replace(JZ, "");
                          try {
                            F = "" !== F ? JSON.parse(F) : null;
                          } catch (ge) {
                            (F = Z),
                              V && ((V = !1), (F = { error: ge, text: F }));
                          }
                        }
                        V
                          ? (r.next(
                              new us({
                                body: F,
                                headers: C,
                                status: I,
                                statusText: M,
                                url: E || void 0,
                              })
                            ),
                            r.complete())
                          : r.error(
                              new fD({
                                error: F,
                                headers: C,
                                status: I,
                                statusText: M,
                                url: E || void 0,
                              })
                            );
                      },
                      h = (C) => {
                        const { url: I } = c(),
                          M = new fD({
                            error: C,
                            status: s.status || 0,
                            statusText: s.statusText || "Unknown Error",
                            url: I || void 0,
                          });
                        r.error(M);
                      };
                    let m = !1;
                    const _ = (C) => {
                        m || (r.next(c()), (m = !0));
                        let I = { type: cs.DownloadProgress, loaded: C.loaded };
                        C.lengthComputable && (I.total = C.total),
                          "text" === e.responseType &&
                            s.responseText &&
                            (I.partialText = s.responseText),
                          r.next(I);
                      },
                      b = (C) => {
                        let I = { type: cs.UploadProgress, loaded: C.loaded };
                        C.lengthComputable && (I.total = C.total), r.next(I);
                      };
                    return (
                      s.addEventListener("load", u),
                      s.addEventListener("error", h),
                      s.addEventListener("timeout", h),
                      s.addEventListener("abort", h),
                      e.reportProgress &&
                        (s.addEventListener("progress", _),
                        null !== a &&
                          s.upload &&
                          s.upload.addEventListener("progress", b)),
                      s.send(a),
                      r.next({ type: cs.Sent }),
                      () => {
                        s.removeEventListener("error", h),
                          s.removeEventListener("abort", h),
                          s.removeEventListener("load", u),
                          s.removeEventListener("timeout", h),
                          e.reportProgress &&
                            (s.removeEventListener("progress", _),
                            null !== a &&
                              s.upload &&
                              s.upload.removeEventListener("progress", b)),
                          s.readyState !== s.DONE && s.abort();
                      }
                    );
                  })
              )
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(ow));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      const fm = new G("XSRF_ENABLED"),
        wD = new G("XSRF_COOKIE_NAME", {
          providedIn: "root",
          factory: () => "XSRF-TOKEN",
        }),
        TD = new G("XSRF_HEADER_NAME", {
          providedIn: "root",
          factory: () => "X-XSRF-TOKEN",
        });
      class SD {}
      let nY = (() => {
        class t {
          constructor(e, i, o) {
            (this.doc = e),
              (this.platform = i),
              (this.cookieName = o),
              (this.lastCookieString = ""),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ("server" === this.platform) return null;
            const e = this.doc.cookie || "";
            return (
              e !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = qC(e, this.cookieName)),
                (this.lastCookieString = e)),
              this.lastToken
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Qe), W(xn), W(wD));
          });
          static #t = (this.ɵprov = K({ token: t, factory: t.ɵfac }));
        }
        return t;
      })();
      function iY(t, n) {
        const e = t.url.toLowerCase();
        if (
          !U(fm) ||
          "GET" === t.method ||
          "HEAD" === t.method ||
          e.startsWith("http://") ||
          e.startsWith("https://")
        )
          return n(t);
        const i = U(SD).getToken(),
          o = U(TD);
        return (
          null != i &&
            !t.headers.has(o) &&
            (t = t.clone({ headers: t.headers.set(o, i) })),
          n(t)
        );
      }
      var po = (function (t) {
        return (
          (t[(t.Interceptors = 0)] = "Interceptors"),
          (t[(t.LegacyInterceptors = 1)] = "LegacyInterceptors"),
          (t[(t.CustomXsrfConfiguration = 2)] = "CustomXsrfConfiguration"),
          (t[(t.NoXsrfProtection = 3)] = "NoXsrfProtection"),
          (t[(t.JsonpSupport = 4)] = "JsonpSupport"),
          (t[(t.RequestsMadeViaParent = 5)] = "RequestsMadeViaParent"),
          (t[(t.Fetch = 6)] = "Fetch"),
          t
        );
      })(po || {});
      function oY(...t) {
        const n = [
          jZ,
          CD,
          vD,
          { provide: Yu, useExisting: vD },
          { provide: Qu, useExisting: CD },
          { provide: Ja, useValue: iY, multi: !0 },
          { provide: fm, useValue: !0 },
          { provide: SD, useClass: nY },
        ];
        for (const e of t) n.push(...e.ɵproviders);
        return (function Dp(t) {
          return { ɵproviders: t };
        })(n);
      }
      const ID = new G("LEGACY_INTERCEPTOR_FN");
      function rY() {
        return (function Ho(t, n) {
          return { ɵkind: t, ɵproviders: n };
        })(po.LegacyInterceptors, [
          { provide: ID, useFactory: qZ },
          { provide: Ja, useExisting: ID, multi: !0 },
        ]);
      }
      let sY = (() => {
        class t {
          static #e = (this.ɵfac = function (i) {
            return new (i || t)();
          });
          static #t = (this.ɵmod = Re({ type: t }));
          static #n = (this.ɵinj = xe({ providers: [oY(rY())] }));
        }
        return t;
      })();
      const DD = { now: () => (DD.delegate || Date).now(), delegate: void 0 };
      class pY extends ct {
        constructor(n = 1 / 0, e = 1 / 0, i = DD) {
          super(),
            (this._bufferSize = n),
            (this._windowTime = e),
            (this._timestampProvider = i),
            (this._buffer = []),
            (this._infiniteTimeWindow = !0),
            (this._infiniteTimeWindow = e === 1 / 0),
            (this._bufferSize = Math.max(1, n)),
            (this._windowTime = Math.max(1, e));
        }
        next(n) {
          const {
            isStopped: e,
            _buffer: i,
            _infiniteTimeWindow: o,
            _timestampProvider: r,
            _windowTime: s,
          } = this;
          e || (i.push(n), !o && i.push(r.now() + s)),
            this._trimBuffer(),
            super.next(n);
        }
        _subscribe(n) {
          this._throwIfClosed(), this._trimBuffer();
          const e = this._innerSubscribe(n),
            { _infiniteTimeWindow: i, _buffer: o } = this,
            r = o.slice();
          for (let s = 0; s < r.length && !n.closed; s += i ? 1 : 2)
            n.next(r[s]);
          return this._checkFinalizedStatuses(n), e;
        }
        _trimBuffer() {
          const {
              _bufferSize: n,
              _timestampProvider: e,
              _buffer: i,
              _infiniteTimeWindow: o,
            } = this,
            r = (o ? 1 : 2) * n;
          if ((n < 1 / 0 && r < i.length && i.splice(0, i.length - r), !o)) {
            const s = e.now();
            let a = 0;
            for (let l = 1; l < i.length && i[l] <= s; l += 2) a = l;
            a && i.splice(0, a + 1);
          }
        }
      }
      const ed = {
        schedule(t, n) {
          const e = setTimeout(t, n);
          return () => clearTimeout(e);
        },
        scheduleBeforeRender(t) {
          if (typeof window > "u") return ed.schedule(t, 0);
          if (typeof window.requestAnimationFrame > "u")
            return ed.schedule(t, 16);
          const n = window.requestAnimationFrame(t);
          return () => window.cancelAnimationFrame(n);
        },
      };
      let gm;
      function CY(t, n, e) {
        let i = e;
        return (
          (function fY(t) {
            return !!t && t.nodeType === Node.ELEMENT_NODE;
          })(t) &&
            n.some(
              (o, r) =>
                !(
                  "*" === o ||
                  !(function mY(t, n) {
                    if (!gm) {
                      const e = Element.prototype;
                      gm =
                        e.matches ||
                        e.matchesSelector ||
                        e.mozMatchesSelector ||
                        e.msMatchesSelector ||
                        e.oMatchesSelector ||
                        e.webkitMatchesSelector;
                    }
                    return t.nodeType === Node.ELEMENT_NODE && gm.call(t, n);
                  })(t, o) ||
                  ((i = r), 0)
                )
            ),
          i
        );
      }
      class TY {
        constructor(n, e) {
          this.componentFactory = e.get(vr).resolveComponentFactory(n);
        }
        create(n) {
          return new SY(this.componentFactory, n);
        }
      }
      class SY {
        constructor(n, e) {
          (this.componentFactory = n),
            (this.injector = e),
            (this.eventEmitters = new pY(1)),
            (this.events = this.eventEmitters.pipe(Tn((i) => jm(...i)))),
            (this.componentRef = null),
            (this.viewChangeDetectorRef = null),
            (this.inputChanges = null),
            (this.hasInputChanges = !1),
            (this.implementsOnChanges = !1),
            (this.scheduledChangeDetectionFn = null),
            (this.scheduledDestroyFn = null),
            (this.initialInputValues = new Map()),
            (this.unchangedInputs = new Set(
              this.componentFactory.inputs.map(({ propName: i }) => i)
            )),
            (this.ngZone = this.injector.get(_e)),
            (this.elementZone =
              typeof Zone > "u" ? null : this.ngZone.run(() => Zone.current));
        }
        connect(n) {
          this.runInZone(() => {
            if (null !== this.scheduledDestroyFn)
              return (
                this.scheduledDestroyFn(), void (this.scheduledDestroyFn = null)
              );
            null === this.componentRef && this.initializeComponent(n);
          });
        }
        disconnect() {
          this.runInZone(() => {
            null === this.componentRef ||
              null !== this.scheduledDestroyFn ||
              (this.scheduledDestroyFn = ed.schedule(() => {
                null !== this.componentRef &&
                  (this.componentRef.destroy(),
                  (this.componentRef = null),
                  (this.viewChangeDetectorRef = null));
              }, 10));
          });
        }
        getInputValue(n) {
          return this.runInZone(() =>
            null === this.componentRef
              ? this.initialInputValues.get(n)
              : this.componentRef.instance[n]
          );
        }
        setInputValue(n, e, i) {
          this.runInZone(() => {
            i && (e = i.call(this.componentRef?.instance, e)),
              null !== this.componentRef
                ? ((function _Y(t, n) {
                    return t === n || (t != t && n != n);
                  })(e, this.getInputValue(n)) &&
                    (void 0 !== e || !this.unchangedInputs.has(n))) ||
                  (this.recordInputChange(n, e),
                  this.unchangedInputs.delete(n),
                  (this.hasInputChanges = !0),
                  (this.componentRef.instance[n] = e),
                  this.scheduleDetectChanges())
                : this.initialInputValues.set(n, e);
          });
        }
        initializeComponent(n) {
          const e = Nt.create({ providers: [], parent: this.injector }),
            i = (function bY(t, n) {
              const e = t.childNodes,
                i = n.map(() => []);
              let o = -1;
              n.some((r, s) => "*" === r && ((o = s), !0));
              for (let r = 0, s = e.length; r < s; ++r) {
                const a = e[r],
                  l = CY(a, n, o);
                -1 !== l && i[l].push(a);
              }
              return i;
            })(n, this.componentFactory.ngContentSelectors);
          (this.componentRef = this.componentFactory.create(e, i, n)),
            (this.viewChangeDetectorRef = this.componentRef.injector.get(Ct)),
            (this.implementsOnChanges = (function gY(t) {
              return "function" == typeof t;
            })(this.componentRef.instance.ngOnChanges)),
            this.initializeInputs(),
            this.initializeOutputs(this.componentRef),
            this.detectChanges(),
            this.injector.get(Yi).attachView(this.componentRef.hostView);
        }
        initializeInputs() {
          this.componentFactory.inputs.forEach(
            ({ propName: n, transform: e }) => {
              this.initialInputValues.has(n) &&
                this.setInputValue(n, this.initialInputValues.get(n), e);
            }
          ),
            this.initialInputValues.clear();
        }
        initializeOutputs(n) {
          const e = this.componentFactory.outputs.map(
            ({ propName: i, templateName: o }) =>
              n.instance[i].pipe(Ie((s) => ({ name: o, value: s })))
          );
          this.eventEmitters.next(e);
        }
        callNgOnChanges(n) {
          if (!this.implementsOnChanges || null === this.inputChanges) return;
          const e = this.inputChanges;
          (this.inputChanges = null), n.instance.ngOnChanges(e);
        }
        markViewForCheck(n) {
          this.hasInputChanges &&
            ((this.hasInputChanges = !1), n.markForCheck());
        }
        scheduleDetectChanges() {
          this.scheduledChangeDetectionFn ||
            (this.scheduledChangeDetectionFn = ed.scheduleBeforeRender(() => {
              (this.scheduledChangeDetectionFn = null), this.detectChanges();
            }));
        }
        recordInputChange(n, e) {
          if (!this.implementsOnChanges) return;
          null === this.inputChanges && (this.inputChanges = {});
          const i = this.inputChanges[n];
          if (i) return void (i.currentValue = e);
          const o = this.unchangedInputs.has(n),
            r = o ? void 0 : this.getInputValue(n);
          this.inputChanges[n] = new A_(r, e, o);
        }
        detectChanges() {
          null !== this.componentRef &&
            (this.callNgOnChanges(this.componentRef),
            this.markViewForCheck(this.viewChangeDetectorRef),
            this.componentRef.changeDetectorRef.detectChanges());
        }
        runInZone(n) {
          return this.elementZone && Zone.current !== this.elementZone
            ? this.ngZone.run(n)
            : n();
        }
      }
      class IY extends HTMLElement {
        constructor() {
          super(...arguments), (this.ngElementEventsSubscription = null);
        }
      }
      let EY = (() => {
        class t {
          constructor(e) {
            this.injector = e;
          }
          ngDoBootstrap(e) {
            const i = (function DY(t, n) {
              const e = (function vY(t, n) {
                  return n.get(vr).resolveComponentFactory(t).inputs;
                })(t, n.injector),
                i = n.strategyFactory || new TY(t, n.injector),
                o = (function yY(t) {
                  const n = {};
                  return (
                    t.forEach(
                      ({ propName: e, templateName: i, transform: o }) => {
                        n[
                          (function hY(t) {
                            return t.replace(
                              /[A-Z]/g,
                              (n) => `-${n.toLowerCase()}`
                            );
                          })(i)
                        ] = [e, o];
                      }
                    ),
                    n
                  );
                })(e);
              class r extends IY {
                static #e = (this.observedAttributes = Object.keys(o));
                get ngElementStrategy() {
                  if (!this._ngElementStrategy) {
                    const a = (this._ngElementStrategy = i.create(
                      this.injector || n.injector
                    ));
                    e.forEach(({ propName: l, transform: c }) => {
                      if (!this.hasOwnProperty(l)) return;
                      const u = this[l];
                      delete this[l], a.setInputValue(l, u, c);
                    });
                  }
                  return this._ngElementStrategy;
                }
                constructor(a) {
                  super(), (this.injector = a);
                }
                attributeChangedCallback(a, l, c, u) {
                  const [h, m] = o[a];
                  this.ngElementStrategy.setInputValue(h, c, m);
                }
                connectedCallback() {
                  let a = !1;
                  this.ngElementStrategy.events &&
                    (this.subscribeToEvents(), (a = !0)),
                    this.ngElementStrategy.connect(this),
                    a || this.subscribeToEvents();
                }
                disconnectedCallback() {
                  this._ngElementStrategy &&
                    this._ngElementStrategy.disconnect(),
                    this.ngElementEventsSubscription &&
                      (this.ngElementEventsSubscription.unsubscribe(),
                      (this.ngElementEventsSubscription = null));
                }
                subscribeToEvents() {
                  this.ngElementEventsSubscription =
                    this.ngElementStrategy.events.subscribe((a) => {
                      const l = new CustomEvent(a.name, { detail: a.value });
                      this.dispatchEvent(l);
                    });
                }
              }
              return (
                e.forEach(({ propName: s, transform: a }) => {
                  Object.defineProperty(r.prototype, s, {
                    get() {
                      return this.ngElementStrategy.getInputValue(s);
                    },
                    set(l) {
                      this.ngElementStrategy.setInputValue(s, l, a);
                    },
                    configurable: !0,
                    enumerable: !0,
                  });
                }),
                r
              );
            })(OI, { injector: this.injector });
            customElements.define("angular-table", i), e.bootstrap(OI);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || t)(W(Nt));
          });
          static #t = (this.ɵmod = Re({ type: t }));
          static #n = (this.ɵinj = xe({
            imports: [Cw, gU, LZ, fS, Sa, sY, ug, xa, GT, TI, SI, hu, Kr, MI],
          }));
        }
        return t;
      })();
      I6()
        .bootstrapModule(EY)
        .catch((t) => console.error(t));
    },
  },
  (Ve) => {
    Ve((Ve.s = 118));
  },
]);
